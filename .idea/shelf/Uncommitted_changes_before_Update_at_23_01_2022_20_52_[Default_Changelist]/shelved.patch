Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_15_2022_10_29_PM__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_15_2022_10_29_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_1_15_2022_10_29_PM__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_1_15_2022_10_29_PM__Default_Changelist_.xml	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
+++ /dev/null	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_1_15_2022_10_29_PM_[Default_Changelist]" date="1642285795175" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_1_15_2022_10_29_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 1/15/2022 10:29 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]/shelved.patch	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
+++ /dev/null	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
@@ -1,497 +0,0 @@
-Index: app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.app.ActionBar\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.*\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.view.isVisible\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.drawer.CalendarActivity\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport com.singularity.ipcaplus.cryptography.getMetaOx\r\nimport com.singularity.ipcaplus.databinding.ActivityChatBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Backend.createJsonArrayString\r\nimport kotlinx.coroutines.*\r\nimport org.json.JSONArray\r\nimport org.json.JSONObject\r\nimport java.io.BufferedOutputStream\r\nimport java.io.BufferedWriter\r\nimport java.io.OutputStream\r\nimport java.io.OutputStreamWriter\r\nimport java.net.URL\r\nimport java.time.LocalDateTime\r\nimport java.time.format.DateTimeFormatter\r\nimport javax.net.ssl.HttpsURLConnection\r\n\r\nclass ChatActivity : AppCompatActivity() {\r\n\r\n    var messages = arrayListOf<Message>()\r\n    var currentUserIsAdmin = false\r\n    private lateinit var binding: ActivityChatBinding\r\n    private lateinit var chat_id : String\r\n    var tokens_adress = arrayListOf<String>()\r\n    var chat_user_uids = arrayListOf<String>()\r\n    private var mAdapter: RecyclerView.Adapter<*>? = null\r\n    private var mLayoutManager: LinearLayoutManager? = null\r\n\r\n    val db = Firebase.firestore\r\n    @SuppressLint(\"WrongConstant\")\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_chat)\r\n\r\n        binding = ActivityChatBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        supportActionBar?.displayOptions = ActionBar.DISPLAY_SHOW_CUSTOM\r\n        supportActionBar?.setCustomView(R.layout.appbar_custom_layout_chat)\r\n        findViewById<TextView>(R.id.AppBarTittle).text = \"Chat name\"\r\n        // Back button\r\n        findViewById<ImageView>(R.id.BackButtonImageView).setOnClickListener{\r\n            finish()\r\n        }\r\n\r\n        // Variables\r\n        chat_id = intent.getStringExtra(\"chat_id\").toString()\r\n        val current = LocalDateTime.now()\r\n\r\n        val formatter = DateTimeFormatter.BASIC_ISO_DATE\r\n        val formatted = current.format(formatter)\r\n\r\n        // Check if user is admin\r\n        Backend.getChatAdminIds(chat_id) {\r\n            val currentUser = Firebase.auth.currentUser!!.uid\r\n            for (admin in it) {\r\n                if (admin == currentUser)\r\n                    currentUserIsAdmin = true\r\n            }\r\n        }\r\n\r\n        // Get all members id of chat\r\n        Backend.getChatUsersUids(chat_id){\r\n            chat_user_uids.clear()\r\n            chat_user_uids.addAll(it)\r\n\r\n            for (userId in chat_user_uids){\r\n                // Getting all of tokens of  profile associated devices\r\n                Backend.getAllTokens(userId) {\r\n                    if (tokens_adress.isEmpty()){\r\n                        tokens_adress.clear()\r\n                    }\r\n                    tokens_adress.addAll(it)\r\n\r\n                    /*GlobalScope.launch {\r\n                        withContext(Dispatchers.IO){\r\n                            createNotificationGroup(\"grupotrablahotentativa\", createJsonArrayString(tokens_adress))\r\n                        }\r\n                    }*/\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        val profilePicfromTop = findViewById<ImageView>(R.id.ProfileImageView)\r\n        Utilis.getFile(this, \"chats/$chat_id/icon.png\", \"png\") { bitmap ->\r\n            profilePicfromTop.setImageBitmap(bitmap)\r\n        }\r\n\r\n        println(\"Current Date is: $formatted\")\r\n\r\n        // Send Message\r\n        binding.fabSend.setOnClickListener {\r\n            if(!binding.editTextMessage.text.isNullOrBlank()) {\r\n                // get data of ecripted shared preferences (\"chatuid\" -> \"key\")\r\n                val keygen = getMetaOx(this, chat_id)\r\n                // Build encryptation data of message send by the user\r\n                var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString())\r\n                val savedText = binding.editTextMessage.text.toString()\r\n\r\n                val message = Message(\r\n                    Firebase.auth.currentUser!!.uid,\r\n                    meta.toString(),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n                db.collection(\"chat\").document(\"$chat_id\").collection(\"message\")\r\n                    .add(message.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n\r\n                        GlobalScope.launch {\r\n                            withContext(Dispatchers.IO){\r\n                                //APA91bEKDInIYA242YofpahBmhB57pEI4gNT63DJJenWCccJGqeSYrWzj0BSruX49DhVp2vGSY5xJ2fEJk2vhtoraT3_bbjEKw4Nx3eJKj7tttVRPjQs0Uc_OPkrcj4twR70H5tAilnY\r\n                                println(\"AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\"+ savedText)\r\n                                sendNotificationToGroup( chat_id, savedText, \"APA91bGaOoMTjTD2s9MU63F1AvLqP6tkwdAFE0Mqs9jbghlSgcWlfe_38CboFiE2iiWFoKqNRwhF0G_TA5X9xegTL0_Tg0OGuFadJuBj1sGZqjqCcmF1EH2ZeRU7ySHosdNkmLmmOyFF\")\r\n                            }\r\n                        }\r\n                        Log.d(TAG, \"DocumentSnapshot added with ID: ${documentReference.id}\")\r\n\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(TAG, \"Error adding document\", e)\r\n                    }\r\n                binding.editTextMessage.text.clear()\r\n\r\n            }\r\n        }\r\n\r\n        // Show Messages\r\n        db.collection(\"chat\").document(\"$chat_id\").collection(\"message\").orderBy(\"time\", Query.Direction.DESCENDING)\r\n            .addSnapshotListener { documents, e ->\r\n\r\n                documents?.let {\r\n                    messages.clear()\r\n                    for (document in it) {\r\n                        Log.d(TAG, \"${document.id} => ${document.data}\")\r\n                        val message = Message.fromHash(document)\r\n                        messages.add(message)\r\n\r\n                    }\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n\r\n            }\r\n\r\n        // Recycler View Messages\r\n        mLayoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)\r\n        binding.recycleViewChat.layoutManager = mLayoutManager\r\n        mAdapter = MessageAdapter()\r\n        binding.recycleViewChat.itemAnimator = DefaultItemAnimator()\r\n        binding.recycleViewChat.adapter = mAdapter\r\n\r\n        mLayoutManager!!.reverseLayout = true\r\n\r\n    }\r\n\r\n    /*\r\n       This function create the action bar above the activity\r\n    */\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        val inflater: MenuInflater = menuInflater\r\n        inflater.inflate(R.menu.menu_chat, menu)\r\n\r\n        db.collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    for (document in it) {\r\n                        if(document.id == chat_id) {\r\n                            val chat = Chat.fromHash(document)\r\n                            val name = Utilis.getFirstAndLastName(chat.name)\r\n                            //supportActionBar?.title = chat.name\r\n                            findViewById<TextView>(R.id.AppBarTittle).text = name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        return true\r\n    }\r\n\r\n\r\n    /*\r\n        This function define the events of the action bar buttons\r\n     */\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        super.onOptionsItemSelected(item)\r\n\r\n        when (item.itemId){\r\n            R.id.calendario -> {\r\n                val intent = Intent(this, CalendarActivity::class.java)\r\n                intent.putExtra(\"chat_id\", chat_id)\r\n                intent.putExtra(\"is_admin\", currentUserIsAdmin)\r\n                startActivity(intent)\r\n                return true\r\n            }\r\n            R.id.chatMore -> {\r\n                val intent = Intent(this, ChatMoreActivity::class.java)\r\n                intent.putExtra(\"chat_id\", chat_id)\r\n                println(\"3------------------------------ \" + currentUserIsAdmin)\r\n                intent.putExtra(\"is_admin\", currentUserIsAdmin)\r\n                intent.putExtra(\"chat_name\",  Utilis.getFirstAndLastName(findViewById<TextView>(R.id.AppBarTittle).text.toString()))\r\n                startActivity(intent)\r\n                return true\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n\r\n    // When the support action bar back button is pressed, the app will go back to the previous activity\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        onBackPressed()\r\n        return true\r\n    }\r\n\r\n\r\n    inner class MessageAdapter : RecyclerView.Adapter<MessageAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        var otherUser = false\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            if(viewType == 1) {\r\n                otherUser = false\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_self, parent, false))\r\n            } else if (viewType == 2){\r\n                otherUser = false\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_system, parent, false))\r\n            } else {\r\n                otherUser = true\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_others, parent, false))\r\n            }\r\n\r\n        }\r\n\r\n        @RequiresApi(Build.VERSION_CODES.M)\r\n         override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n\r\n            holder.v.apply {\r\n\r\n                val textViewMessage = findViewById<TextView>(R.id.textViewMessage)\r\n                val timeLastMessage = findViewById<TextView?>(R.id.timeLastMessage)\r\n                val textViewUsername = findViewById<TextView?>(R.id.textViewUsername)\r\n\r\n\r\n                timeLastMessage?.isVisible = false\r\n                val keygen = getMetaOx(context, chat_id)\r\n                val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message)\r\n\r\n               /* if (otherUser) {\r\n                        Backend.getUserProfile(messages[position].user) {\r\n                            val userName = Utilis.getFirstAndLastName(it.name)\r\n                            textViewUsername.text = userName\r\n                        }\r\n                    }\r\n                */\r\n\r\n                textViewMessage.text = message_decripted\r\n                println(message_decripted)\r\n                if(position == messages.size - 1) {\r\n                    val data = Utilis.getDate(\r\n                        messages[position].time.seconds * 1000,\r\n                        \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                    )\r\n                    timeLastMessage.isVisible = true\r\n                    timeLastMessage.text = Utilis.getHours(data) + \":\" + Utilis.getMinutes(data)\r\n                }\r\n\r\n                if (otherUser) {\r\n                    val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)\r\n                    if (imageViewUser != null) {\r\n                        Utilis.getFile(context, \"profilePictures/${messages[position].user}.png\", \"png\") { bitmap ->\r\n                            imageViewUser.setImageBitmap(bitmap)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        override fun getItemViewType(position: Int) : Int {\r\n            if (messages[position].user == Firebase.auth.currentUser!!.uid) {\r\n                return 1\r\n            } else if (messages[position].user == \"system\"){\r\n                return 2\r\n            } else {\r\n                return 0\r\n            }\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return messages.size\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    private suspend fun  createNotificationGroup(notificationKeyName : String, registrationIds : JSONArray)  {\r\n\r\n        try {\r\n\r\n            Log.d(\"json\", registrationIds.toString())\r\n\r\n            //Request\r\n            val endPoint = URL(\"https://fcm.googleapis.com/fcm/notification\")\r\n\r\n            //Establish a connection\r\n            val httpsURLConnection: HttpsURLConnection =\r\n                endPoint.openConnection() as HttpsURLConnection\r\n\r\n            //Connection to fcm\r\n            //The time available to read from the input stream when the connection is established\r\n            httpsURLConnection.readTimeout = 10000\r\n            //The time available to connect to the url\r\n            httpsURLConnection.connectTimeout = 15000\r\n            //Defining the type of request to be made to the fcm\r\n            httpsURLConnection.requestMethod = \"POST\"\r\n            //Defining that the url connection can be used to send and receive data\r\n            httpsURLConnection.doInput = true\r\n            httpsURLConnection.doOutput = true\r\n\r\n            // Build parameters for json\r\n            httpsURLConnection.setRequestProperty(\"Content-Type\", \"application/json\")\r\n            val project_key = \"AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs\"\r\n            val senderId = \"209455028652\"\r\n            httpsURLConnection.setRequestProperty(\"authorization\", \"key=$project_key\")\r\n            httpsURLConnection.setRequestProperty(\"project_id\", senderId)\r\n\r\n            val json = JSONObject()\r\n\r\n            json.put(\"operation\", \"create\")\r\n            json.put(\"notification_key_name\", notificationKeyName)\r\n            json.put(\"registration_ids\", registrationIds)\r\n\r\n\r\n            // Writer\r\n            val outputStream: OutputStream =\r\n                BufferedOutputStream(httpsURLConnection.outputStream)\r\n            val writer = BufferedWriter(OutputStreamWriter(outputStream, \"utf-8\"))\r\n\r\n            // POST\r\n            writer.write(json.toString())\r\n            writer.flush()\r\n            writer.close()\r\n\r\n            outputStream.close()\r\n\r\n            //The response code and message of the POST requests\r\n            val responseCode: Int = httpsURLConnection.responseCode\r\n            val responseMessage = httpsURLConnection.responseMessage\r\n\r\n            Log.d(TAG, \"$responseCode $responseMessage\")\r\n\r\n\r\n            // Check server STATUS\r\n            if (responseCode in 400..499) {\r\n                httpsURLConnection.errorStream\r\n            } else {\r\n                httpsURLConnection.inputStream\r\n            }\r\n\r\n            if (responseCode == 200) {\r\n                Log.e(TAG, \"Group Created!!\")\r\n\r\n                val response = httpsURLConnection.inputStream.bufferedReader()\r\n                    .use { it.readText() }  // defaults to UTF-8\r\n                withContext(Dispatchers.Main) {\r\n                    //notification_key\r\n                    val jsonObject  = JSONObject(response)\r\n                    val notificationKey = jsonObject.getString(\"notification_key\")\r\n                    println(\"NotifKey: $notificationKey\")\r\n                    Log.d(\"NotifKey\", notificationKey)\r\n                }\r\n            } else {\r\n                Log.e(TAG, \"Error it didn´t work\")\r\n            }\r\n\r\n            //Here i close the connection to the endPoint\r\n            httpsURLConnection.disconnect()\r\n\r\n\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n\r\n    //This function sends push notifications to devices that are subscribed to a specific topic\r\n    private suspend fun sendNotificationToGroup(title: String, message: String, notificationKey : String) {\r\n\r\n        delay(1500)\r\n\r\n        try {\r\n\r\n            //Request\r\n            val url = URL(\"https://fcm.googleapis.com/fcm/send\")\r\n\r\n            //Establish a connection\r\n            val httpsURLConnection: HttpsURLConnection =\r\n                url.openConnection() as HttpsURLConnection\r\n\r\n            //The time available to read from the input stream when the connection is established\r\n            httpsURLConnection.readTimeout = 10000\r\n            //The time available to connect to the url\r\n            httpsURLConnection.connectTimeout = 15000\r\n            //Defining the type of request to be made to the fcm\r\n            httpsURLConnection.requestMethod = \"POST\"\r\n            //Defining that the url connection can be used to send and receive data\r\n            httpsURLConnection.doInput = true\r\n            httpsURLConnection.doOutput = true\r\n\r\n            // Config of FCM\r\n            val project_key = \"AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs\"\r\n            httpsURLConnection.setRequestProperty(\"authorization\", \"key=$project_key\")\r\n            httpsURLConnection.setRequestProperty(\"Content-Type\", \"application/json\")\r\n\r\n            val jsonObject = JSONObject()\r\n            val data = JSONObject()\r\n\r\n            data.put(\"title\", title)\r\n            data.put(\"content\", message)\r\n            //On Notification Click Activity\r\n            data.put(\"click_action\", \".LoginActivity\")\r\n\r\n            //jsonObject for POST\r\n            jsonObject.put(\"data\", data)\r\n            //\r\n            jsonObject.put(\"to\", notificationKey)\r\n\r\n            val outputStream: OutputStream =\r\n                BufferedOutputStream(httpsURLConnection.outputStream)\r\n            val writer = BufferedWriter(OutputStreamWriter(outputStream, \"utf-8\"))\r\n            \r\n            writer.write(jsonObject.toString())\r\n            writer.flush()\r\n            writer.close()\r\n\r\n            outputStream.close()\r\n\r\n            //The response code and message of the POST requests\r\n            val responseCode: Int = httpsURLConnection.responseCode\r\n            val responseMessage: String = httpsURLConnection.responseMessage\r\n\r\n\r\n            Log.d(TAG, \"Response from sendMes: $responseCode $responseMessage\")\r\n\r\n\r\n            // Check server STATUS\r\n            if (responseCode in 400..499) {\r\n                httpsURLConnection.errorStream\r\n            } else {\r\n                httpsURLConnection.inputStream\r\n            }\r\n            if (responseCode == 200) {\r\n                Log.e(\r\n                    TAG,\r\n                    \"Notification Sent \\n Title: $title \\n Body: $message\"\r\n                )\r\n            } else {\r\n                Log.e(TAG, \"Notification Error\")\r\n            }\r\n\r\n            httpsURLConnection.disconnect()\r\n\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt
---- a/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-+++ b/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt	(date 1642079549061)
-@@ -32,6 +32,7 @@
- import com.singularity.ipcaplus.models.Message
- import com.singularity.ipcaplus.utils.Backend
- import com.singularity.ipcaplus.utils.Backend.createJsonArrayString
-+import com.singularity.ipcaplus.utils.Backend.getIv
- import kotlinx.coroutines.*
- import org.json.JSONArray
- import org.json.JSONObject
-@@ -126,39 +127,43 @@
-                 // get data of ecripted shared preferences ("chatuid" -> "key")
-                 val keygen = getMetaOx(this, chat_id)
-                 // Build encryptation data of message send by the user
--                var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString())
--                val savedText = binding.editTextMessage.text.toString()
-+                getIv(chat_id) {
-+
-+                    var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString(), it.toString())
-+                    val savedText = binding.editTextMessage.text.toString()
- 
--                val message = Message(
--                    Firebase.auth.currentUser!!.uid,
--                    meta.toString(),
--                    Timestamp.now(),
--                    ""
-+                    val message = Message(
-+                        Firebase.auth.currentUser!!.uid,
-+                        meta.toString(),
-+                        Timestamp.now(),
-+                        ""
- 
--                )
--                db.collection("chat").document("$chat_id").collection("message")
--                    .add(message.toHash())
--                    .addOnSuccessListener { documentReference ->
-+                    )
-+                    db.collection("chat").document("$chat_id").collection("message")
-+                        .add(message.toHash())
-+                        .addOnSuccessListener { documentReference ->
- 
--                        GlobalScope.launch {
--                            withContext(Dispatchers.IO){
--                                //APA91bEKDInIYA242YofpahBmhB57pEI4gNT63DJJenWCccJGqeSYrWzj0BSruX49DhVp2vGSY5xJ2fEJk2vhtoraT3_bbjEKw4Nx3eJKj7tttVRPjQs0Uc_OPkrcj4twR70H5tAilnY
--                                println("AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"+ savedText)
--                                sendNotificationToGroup( chat_id, savedText, "APA91bGaOoMTjTD2s9MU63F1AvLqP6tkwdAFE0Mqs9jbghlSgcWlfe_38CboFiE2iiWFoKqNRwhF0G_TA5X9xegTL0_Tg0OGuFadJuBj1sGZqjqCcmF1EH2ZeRU7ySHosdNkmLmmOyFF")
--                            }
--                        }
--                        Log.d(TAG, "DocumentSnapshot added with ID: ${documentReference.id}")
-+                            GlobalScope.launch {
-+                                withContext(Dispatchers.IO){
-+                                    //APA91bEKDInIYA242YofpahBmhB57pEI4gNT63DJJenWCccJGqeSYrWzj0BSruX49DhVp2vGSY5xJ2fEJk2vhtoraT3_bbjEKw4Nx3eJKj7tttVRPjQs0Uc_OPkrcj4twR70H5tAilnY
-+                                    println("AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"+ savedText)
-+                                    sendNotificationToGroup( chat_id, savedText, "APA91bGaOoMTjTD2s9MU63F1AvLqP6tkwdAFE0Mqs9jbghlSgcWlfe_38CboFiE2iiWFoKqNRwhF0G_TA5X9xegTL0_Tg0OGuFadJuBj1sGZqjqCcmF1EH2ZeRU7ySHosdNkmLmmOyFF")
-+                                }
-+                            }
-+                            Log.d(TAG, "DocumentSnapshot added with ID: ${documentReference.id}")
- 
- 
--                    }
--                    .addOnFailureListener { e ->
--                        Log.w(TAG, "Error adding document", e)
--                    }
--                binding.editTextMessage.text.clear()
-+                        }
-+                        .addOnFailureListener { e ->
-+                            Log.w(TAG, "Error adding document", e)
-+                        }
-+                    binding.editTextMessage.text.clear()
- 
--            }
--        }
-+                }
-+            }
- 
-+        }
-+
-         // Show Messages
-         db.collection("chat").document("$chat_id").collection("message").orderBy("time", Query.Direction.DESCENDING)
-             .addSnapshotListener { documents, e ->
-@@ -285,32 +290,34 @@
- 
-                 timeLastMessage?.isVisible = false
-                 val keygen = getMetaOx(context, chat_id)
--                val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message)
-+                getIv(chat_id){
-+                    val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message, it.toString())
- 
--               /* if (otherUser) {
--                        Backend.getUserProfile(messages[position].user) {
--                            val userName = Utilis.getFirstAndLastName(it.name)
--                            textViewUsername.text = userName
--                        }
--                    }
--                */
-+                    /* if (otherUser) {
-+                             Backend.getUserProfile(messages[position].user) {
-+                                 val userName = Utilis.getFirstAndLastName(it.name)
-+                                 textViewUsername.text = userName
-+                             }
-+                         }
-+                     */
- 
--                textViewMessage.text = message_decripted
--                println(message_decripted)
--                if(position == messages.size - 1) {
--                    val data = Utilis.getDate(
--                        messages[position].time.seconds * 1000,
--                        "yyyy-MM-dd'T'HH:mm:ss.SSS"
--                    )
--                    timeLastMessage.isVisible = true
--                    timeLastMessage.text = Utilis.getHours(data) + ":" + Utilis.getMinutes(data)
--                }
-+                    textViewMessage.text = message_decripted
-+                    println(message_decripted)
-+                    if(position == messages.size - 1) {
-+                        val data = Utilis.getDate(
-+                            messages[position].time.seconds * 1000,
-+                            "yyyy-MM-dd'T'HH:mm:ss.SSS"
-+                        )
-+                        timeLastMessage.isVisible = true
-+                        timeLastMessage.text = Utilis.getHours(data) + ":" + Utilis.getMinutes(data)
-+                    }
- 
--                if (otherUser) {
--                    val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)
--                    if (imageViewUser != null) {
--                        Utilis.getFile(context, "profilePictures/${messages[position].user}.png", "png") { bitmap ->
--                            imageViewUser.setImageBitmap(bitmap)
-+                    if (otherUser) {
-+                        val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)
-+                        if (imageViewUser != null) {
-+                            Utilis.getFile(context, "profilePictures/${messages[position].user}.png", "png") { bitmap ->
-+                                imageViewUser.setImageBitmap(bitmap)
-+                            }
-                         }
-                     }
-                 }
-Index: app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.MenuInflater\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityCreateChatBinding\r\nimport com.singularity.ipcaplus.drawer.DrawerActivty\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.ActivityImageHelper\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.utils.Utilis.buildSystemMessage\r\nimport com.theartofdev.edmodo.cropper.CropImage\r\nimport com.theartofdev.edmodo.cropper.CropImageView\r\n\r\nclass CreateDirectChatActivity : ActivityImageHelper() {\r\n\r\n\r\n    val db = Firebase.firestore\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        // Variables\r\n        var chatName : String\r\n\r\n        var type = intent.getStringExtra(\"type\")!!\r\n        var memberIds = intent.getStringArrayListExtra(\"users\")!!\r\n        println(memberIds)\r\n\r\n        // Generate key for chats\r\n        val keygen = metaGenrateKey()\r\n\r\n            Backend.getUserProfile(memberIds[1]) {\r\n\r\n\r\n                chatName = it.name\r\n                println(\"Nome antes\" + chatName)\r\n\r\n                // Chat data\r\n                var chat = Chat(\r\n                    chatName,\r\n                    type,\r\n                    keygen\r\n                )\r\n\r\n                // System message data\r\n                val message = Message(\r\n                    \"system\",\r\n                    buildSystemMessage(keygen),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n\r\n                val user = HashMap<String, Any>()\r\n                val admin = hashMapOf<String?, Any>(\r\n                    \"admin\" to true\r\n                )\r\n\r\n                db.collection(\"chat\")\r\n                    .add(chat.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n                        db.collection(\"chat\")\r\n                            .document(documentReference.id)\r\n                            .collection(\"message\")\r\n                            .add(message.toHash())\r\n                        for (member in memberIds) {\r\n                            println(\"IDSDSDS\" + memberIds)\r\n                            Backend.getUserProfile(memberIds[0]) {\r\n                                if (member == Firebase.auth.currentUser!!.uid) {\r\n                                    println(\"IF\")\r\n                                    // Chat data\r\n                                    chat = Chat(\r\n                                        it.name,\r\n                                        type,\r\n                                        keygen\r\n                                    )\r\n                                }\r\n                                println(\"NOMEEEEE\" + it.name)\r\n\r\n                                db.collection(\"profile\")\r\n                                    .document(member)\r\n                                    .collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .set(chat)\r\n                                db.collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .collection(\"user\")\r\n                                    .document(member)\r\n                                    .set(user)\r\n                                db.collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .collection(\"user\")\r\n                                    .document(member)\r\n                                    .update(admin)\r\n\r\n                            }\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                    }\r\n\r\n                val intent = Intent(this, DrawerActivty::class.java)\r\n                startActivity(intent)\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt
---- a/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-+++ b/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt	(date 1642079549076)
-@@ -13,6 +13,7 @@
- import com.google.firebase.firestore.ktx.firestore
- import com.google.firebase.ktx.Firebase
- import com.singularity.ipcaplus.R
-+import com.singularity.ipcaplus.cryptography.generateRandomIV
- import com.singularity.ipcaplus.cryptography.metaGenrateKey
- import com.singularity.ipcaplus.databinding.ActivityCreateChatBinding
- import com.singularity.ipcaplus.drawer.DrawerActivty
-@@ -38,6 +39,7 @@
-         var type = intent.getStringExtra("type")!!
-         var memberIds = intent.getStringArrayListExtra("users")!!
-         println(memberIds)
-+        val ivGenerated = generateRandomIV()
- 
-         // Generate key for chats
-         val keygen = metaGenrateKey()
-@@ -52,13 +54,14 @@
-                 var chat = Chat(
-                     chatName,
-                     type,
--                    keygen
-+                    keygen,
-+                    ivGenerated
-                 )
- 
-                 // System message data
-                 val message = Message(
-                     "system",
--                    buildSystemMessage(keygen),
-+                    buildSystemMessage(keygen, ivGenerated),
-                     Timestamp.now(),
-                     ""
- 
-@@ -85,7 +88,8 @@
-                                     chat = Chat(
-                                         it.name,
-                                         type,
--                                        keygen
-+                                        keygen,
-+                                        ivGenerated
-                                     )
-                                 }
-                                 println("NOMEEEEE" + it.name)
-Index: app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.utils\r\n\r\nimport android.app.Activity\r\nimport android.app.DownloadManager\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.res.Resources\r\nimport android.graphics.Bitmap\r\nimport android.graphics.BitmapFactory\r\nimport android.graphics.drawable.BitmapDrawable\r\nimport android.graphics.drawable.GradientDrawable\r\nimport android.net.Uri\r\nimport android.os.Build\r\nimport android.provider.MediaStore\r\nimport android.util.Log\r\nimport androidx.annotation.RequiresApi\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.firebase.storage.FirebaseStorage\r\nimport com.google.firebase.storage.StorageReference\r\nimport com.google.firebase.storage.ktx.storage\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport java.io.File\r\nimport java.io.IOException\r\nimport java.lang.Exception\r\nimport java.net.URI\r\nimport java.text.SimpleDateFormat\r\nimport java.time.LocalDate\r\nimport java.util.*\r\nimport java.util.regex.Pattern\r\n\r\nimport androidx.core.content.res.ResourcesCompat\r\nimport androidx.core.graphics.drawable.toBitmap\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport java.io.ByteArrayOutputStream\r\nimport com.singularity.ipcaplus.chat.ChatActivity\r\n\r\n\r\nobject  Utilis {\r\n\r\n    /*\r\n        This function return the current month id\r\n     */\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getCurrentMonthId(): Int {\r\n\r\n        val c = LocalDate.now()\r\n        val strArray = Pattern.compile(\"-\").split(c.toString())\r\n\r\n        return strArray[1].toInt()\r\n    }\r\n\r\n    /*\r\n        This function return the current year id\r\n     */\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getCurrentYear(): String {\r\n\r\n        val c = LocalDate.now()\r\n        val strArray = Pattern.compile(\"-\").split(c.toString())\r\n\r\n        return strArray[0]\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getYearByCalendarId(id: Int): Int {\r\n\r\n        var count = id\r\n        var result = 2021 - 121 // add 1900\r\n\r\n        while (count > 0) {\r\n            count -= 1\r\n            result ++\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    /*\r\n        This function return the month value in string by an id\r\n        @month = month id\r\n     */\r\n    fun getMonthById(month: Int): String {\r\n        return when (month) {\r\n            1 -> \"Janeiro\"\r\n            2 -> \"Fevereiro\"\r\n            3 -> \"Março\"\r\n            4 -> \"Abril\"\r\n            5 -> \"Maio\"\r\n            6 -> \"Junho\"\r\n            7 -> \"Julho\"\r\n            8 -> \"Agosto\"\r\n            9 -> \"Setembro\"\r\n            10 -> \"Outubro\"\r\n            11 -> \"Novembro\"\r\n            12 -> \"Dezembro\"\r\n            else -> \"None\"\r\n        }\r\n    }\r\n\r\n    fun convertHoursStringToInt(strVal: String): Int {\r\n        val strArray = Pattern.compile(\":\").split(strVal)\r\n        val result = strArray[0] + strArray[1]\r\n        return result.toInt()\r\n    }\r\n\r\n    fun getDate(milliSeconds: Long, dateFormat: String?): String {\r\n        // Create a DateFormatter object for displaying date in specified format.\r\n        val formatter = SimpleDateFormat(dateFormat)\r\n\r\n        // Create a calendar object that will convert the date and time value in milliseconds to date.\r\n        val calendar: Calendar = Calendar.getInstance()\r\n        calendar.timeInMillis = milliSeconds\r\n        return formatter.format(calendar.time)\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the day\r\n        @date = default date\r\n     */\r\n    fun getDay(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\"T\").split(strArray[2])\r\n\r\n        return strArray2[0]\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the month in text\r\n        @date = default date\r\n     */\r\n    fun getMonth(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n\r\n        return strArray[1].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the year in text\r\n        @date = default date\r\n     */\r\n    fun getYear(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n\r\n        return strArray[0].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the Hours in text\r\n        @date = default date\r\n     */\r\n    fun getHours(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"T\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\":\").split(strArray[1])\r\n\r\n        return strArray2[0].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the Minutes in text\r\n        @date = default date\r\n     */\r\n    fun getMinutes(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"T\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\":\").split(strArray[1])\r\n\r\n        return strArray2[1].toString()\r\n    }\r\n\r\n    /*\r\n        This function get the buffer with the name of filename on assets folder\r\n     */\r\n\r\n    fun getJsonDataFromAsset(context: Context, fileName: String): String? {\r\n        val jsonString: String\r\n        try {\r\n            jsonString = context.assets.open(fileName).bufferedReader().use { it.readText() }\r\n        } catch (ioException: IOException) {\r\n            ioException.printStackTrace()\r\n            return null\r\n        }\r\n        return jsonString\r\n    }\r\n\r\n    fun getFirstAndLastName(fullName: String): String {\r\n\r\n        val nameArray = Pattern.compile(\" \").split(fullName)\r\n\r\n        return nameArray[0] + \" \" + nameArray[nameArray.size-1]\r\n    }\r\n\r\n    /*\r\n       ------------------------------------------------ Images ------------------------------------------------\r\n    */\r\n\r\n    fun convertDrawableToBitmap(context: Context, drawable: Int): Bitmap {\r\n        return BitmapFactory.decodeResource(context.resources, R.drawable.circle)\r\n    }\r\n\r\n\r\n    fun getFile(context: Context, path: String, suffix: String, callback:(Bitmap)->Unit) {\r\n\r\n        // Retrieve image from firebase\r\n        val storageRef = FirebaseStorage.getInstance().reference.child(path)\r\n        val localfile = File.createTempFile(\"tempImage\", suffix)\r\n\r\n        // Set ImageView\r\n        storageRef.getFile(localfile).addOnSuccessListener {\r\n            val bitmap = BitmapFactory.decodeFile(localfile.absolutePath)\r\n            callback(bitmap)\r\n        }.addOnFailureListener {\r\n            val bitmap = (ResourcesCompat.getDrawable(\r\n                context.resources,\r\n                R.drawable.circle,\r\n                null\r\n            ) as GradientDrawable?)!!.toBitmap()\r\n            callback(bitmap)\r\n        }\r\n\r\n    }\r\n\r\n    fun downloadFile(context: Context, fileName: String, fileExtension: String, destinationDirectory: String, uri: Uri) {\r\n\r\n        val downloadManager = context.getSystemService(Context.DOWNLOAD_SERVICE) as DownloadManager\r\n        val request = DownloadManager.Request(uri)\r\n\r\n        request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED)\r\n        request.setDestinationInExternalPublicDir(destinationDirectory, fileName + fileExtension)\r\n\r\n        downloadManager.enqueue(request)\r\n    }\r\n\r\n\r\n    fun uploadFile(filePath: Uri, targetPath: String) {\r\n\r\n        val storage = Firebase.storage\r\n        val storageRef = storage.reference\r\n\r\n        if (filePath != Uri.EMPTY) {\r\n            val ref: StorageReference = storageRef.child(targetPath)\r\n            ref.putFile(filePath)\r\n        }\r\n    }\r\n\r\n\r\n    fun getFileIcon(fileName:String): Int {\r\n        return if (fileName.contains(\".\")) {\r\n\r\n            val extensionArray = Pattern.compile(\"[.]\").split(fileName)\r\n            val extension = extensionArray[extensionArray.size-1]\r\n\r\n            when (extension) {\r\n                \"png\", \"jpg\", \"jpeg\", \"jep\", \"jfif\", \"gif\" -> R.drawable.ic_picture\r\n                \"invisible\" -> -1\r\n                else -> R.drawable.ic_file\r\n            }\r\n\r\n        } else\r\n            -1\r\n    }\r\n\r\n\r\n    fun uniqueImageNameGen(): String {\r\n        val characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!#$$%&/()=@[]{}\"\r\n\r\n        val sb = StringBuilder(15)\r\n\r\n        for(x in 0 until 15){\r\n            val random = (characters.indices).random()\r\n            sb.append(characters[random])\r\n        }\r\n\r\n        return sb.toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function gets the domain of email\r\n        split remove the @ and make the array like this -> [a20115][alunos.ipca.pt]\r\n     */\r\n    fun getEmailDomain(email: String) : String{\r\n        val strArray = Pattern.compile(\"@\").split(email)\r\n        val result= strArray[1]\r\n\r\n        return result.toString()\r\n\r\n    }\r\n\r\n    /*\r\n        ------------------------------------------------ Chat ------------------------------------------------\r\n     */\r\n\r\n    /*\r\n       This function returns the encrypted system message\r\n       @callBack = return the list\r\n    */\r\n    fun buildSystemMessage(key: String) : String {\r\n\r\n        // Build encryptation data of first message send by the system\r\n        var message = encryptMeta(\"This chat is being encripted with Singularity Encryption!\", key)\r\n\r\n        return message.toString()\r\n\r\n    }\r\n\r\n    // Que merda é esta :v\r\n    fun getUID(): String? {\r\n        val firebaseAuth = FirebaseAuth.getInstance()\r\n        return firebaseAuth.uid\r\n    }\r\n\r\n    fun calculateInSampleSize(options: BitmapFactory.Options, reqWidth: Int, reqHeight: Int): Int {\r\n        // Raw height and width of image\r\n        val (height: Int, width: Int) = options.run { outHeight to outWidth }\r\n        var inSampleSize = 1\r\n\r\n        if (height > reqHeight || width > reqWidth) {\r\n\r\n            val halfHeight: Int = height / 2\r\n            val halfWidth: Int = width / 2\r\n\r\n            // Calculate the largest inSampleSize value that is a power of 2 and keeps both\r\n            // height and width larger than the requested height and width.\r\n            while (halfHeight / inSampleSize >= reqHeight && halfWidth / inSampleSize >= reqWidth) {\r\n                inSampleSize *= 2\r\n            }\r\n        }\r\n\r\n        return inSampleSize\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt b/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt
---- a/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-+++ b/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt	(date 1642079549049)
-@@ -310,10 +310,10 @@
-        This function returns the encrypted system message
-        @callBack = return the list
-     */
--    fun buildSystemMessage(key: String) : String {
-+    fun buildSystemMessage(key: String, iv : String) : String {
- 
-         // Build encryptation data of first message send by the system
--        var message = encryptMeta("This chat is being encripted with Singularity Encryption!", key)
-+        var message = encryptMeta("This chat is being encripted with Singularity Encryption!", key, iv)
- 
-         return message.toString()
- 
-Index: app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.getMetaOx\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.cryptography.saveKeygenOx\r\nimport com.singularity.ipcaplus.databinding.FragmentChatsBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\n\r\n\r\nclass ChatsFragment : Fragment() {\r\n\r\n    // Variables\r\n    var chats = arrayListOf<Chat>()\r\n    var chatIds = arrayListOf<String>()\r\n\r\n    private var _binding: FragmentChatsBinding? = null\r\n    private var mAdapter: RecyclerView.Adapter<*>? = null\r\n    private var mLayoutManager: LinearLayoutManager? = null\r\n\r\n    private val binding get() = _binding!!\r\n\r\n    val db = Firebase.firestore\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n\r\n        _binding = FragmentChatsBinding.inflate(layoutInflater)\r\n        val root: View = binding.root\r\n\r\n        // Get Group Chats\r\n        db.collection(\"profile\").document(\"${Firebase.auth.currentUser!!.uid}\").collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    chats.clear()\r\n                    chatIds.clear()\r\n                    for (document in it) {\r\n                        val chat = Chat.fromHash(document)\r\n                        if (chat.type == \"chat\") {\r\n                            chats.add(chat)\r\n                            chatIds.add(document.id)\r\n                        }\r\n                    }\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n            }\r\n\r\n        // RecyclerView Chat\r\n        mLayoutManager = LinearLayoutManager(activity, LinearLayoutManager.VERTICAL, false)\r\n        binding.recyclerViewGroups.layoutManager = mLayoutManager\r\n        mAdapter = ChatAdapter()\r\n        binding.recyclerViewGroups.itemAnimator = DefaultItemAnimator()\r\n        binding.recyclerViewGroups.adapter = mAdapter\r\n\r\n        return root\r\n    }\r\n\r\n    /*\r\n        Refresh Activity Content\r\n    */\r\n    override fun onResume() {\r\n        super.onResume()\r\n\r\n        // Get Group Chats\r\n        db.collection(\"profile\").document(\"${Firebase.auth.currentUser!!.uid}\").collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    chats.clear()\r\n                    chatIds.clear()\r\n                    for (document in it) {\r\n                        val chat = Chat.fromHash(document)\r\n                        if (chat.type == \"chat\" || chat.type == \"group\") {\r\n                            chats.add(chat)\r\n                            chatIds.add(document.id)\r\n                        }\r\n                    }\r\n                    println(\"CHAT \" + chats)\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n\r\n\r\n    inner class ChatAdapter : RecyclerView.Adapter<ChatAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_chat, parent, false)\r\n                )\r\n\r\n        }\r\n\r\n        @RequiresApi(Build.VERSION_CODES.M)\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n                holder.v.apply {\r\n\r\n                    // Variables\r\n                    val textViewMessage = findViewById<TextView>(R.id.textViewChatName)\r\n                    val imageViewChatGroup = findViewById<ImageView>(R.id.imageViewChatGroup)\r\n                    val lastMessageTime = findViewById<TextView>(R.id.lastMessageTime)\r\n                    val lastMessageText = findViewById<TextView>(R.id.textViewLastMessage)\r\n\r\n\r\n                    textViewMessage.text = chats[position].name\r\n\r\n                    // sync data recieved form direbase with encrypted shared preferences (key -> 1x)\r\n                    saveKeygenOx(context, chatIds[position], chats[position].ox.toString())\r\n                    // Set Last Chat Message\r\n                    Backend.getLastMessageByChatID(chatIds[position]) {\r\n                        val data = Utilis.getDate(it!!.time.seconds *1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                        lastMessageTime.text = Utilis.getHours(data) + \":\" + Utilis.getMinutes(data)\r\n                        val keygen = getMetaOx(context, chatIds[position])\r\n                        val message_decripted = decryptWithAESmeta(keygen.toString(), it.message)\r\n                        lastMessageText.text = message_decripted\r\n                    }\r\n\r\n                    Utilis.getFile(this.context, \"chats/${chatIds[position]}/icon.png\", \"png\") { bitmap ->\r\n                        imageViewChatGroup.setImageBitmap(bitmap)\r\n                    }\r\n\r\n                }\r\n                holder.v.setOnClickListener {\r\n                    val intent = Intent(activity, ChatActivity::class.java)\r\n                    intent.putExtra(\"chat_id\", chatIds[position])\r\n                    activity?.startActivity(intent)\r\n                }\r\n\r\n        }\r\n\r\n        override fun getItemViewType(position: Int) : Int {\r\n            if (chats[position].type == \"group\") {\r\n                return 1\r\n            } else {\r\n                return 0\r\n            }\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return chats.size\r\n        }\r\n    }\r\n\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt b/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt
---- a/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-+++ b/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt	(date 1642079549072)
-@@ -24,6 +24,7 @@
- import com.singularity.ipcaplus.cryptography.saveKeygenOx
- import com.singularity.ipcaplus.databinding.FragmentChatsBinding
- import com.singularity.ipcaplus.models.Chat
-+import com.singularity.ipcaplus.utils.Backend.getIv
- 
- 
- class ChatsFragment : Fragment() {
-@@ -138,13 +139,18 @@
-                     saveKeygenOx(context, chatIds[position], chats[position].ox.toString())
-                     // Set Last Chat Message
-                     Backend.getLastMessageByChatID(chatIds[position]) {
-+
-                         val data = Utilis.getDate(it!!.time.seconds *1000, "yyyy-MM-dd'T'HH:mm:ss.SSS")
-                         lastMessageTime.text = Utilis.getHours(data) + ":" + Utilis.getMinutes(data)
-+
-                         val keygen = getMetaOx(context, chatIds[position])
--                        val message_decripted = decryptWithAESmeta(keygen.toString(), it.message)
--                        lastMessageText.text = message_decripted
--                    }
-+                        getIv(chatIds[position]){iv ->
-+                            val message_decripted = decryptWithAESmeta(keygen.toString(), it.message, iv.toString())
-+                            lastMessageText.text = message_decripted
-+                        }
- 
-+                    }
-+
-                     Utilis.getFile(this.context, "chats/${chatIds[position]}/icon.png", "png") { bitmap ->
-                         imageViewChatGroup.setImageBitmap(bitmap)
-                     }
-Index: app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.MenuInflater\r\nimport android.widget.ImageView\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityCreateChatBinding\r\nimport com.singularity.ipcaplus.drawer.DrawerActivty\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.ActivityImageHelper\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.utils.Utilis.buildSystemMessage\r\nimport com.theartofdev.edmodo.cropper.CropImage\r\nimport com.theartofdev.edmodo.cropper.CropImageView\r\n\r\nclass CreateChatActivity : ActivityImageHelper() {\r\n\r\n    // Variables\r\n    private lateinit var binding: ActivityCreateChatBinding\r\n    var uri = Uri.EMPTY\r\n\r\n    val db = Firebase.firestore\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_create_chat)\r\n\r\n        binding = ActivityCreateChatBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        // Variables\r\n        var chatName : String\r\n\r\n        var type = intent.getStringExtra(\"type\")!!\r\n        var memberIds = intent.getStringArrayListExtra(\"users\")!!\r\n\r\n        // Generate key for chats\r\n        val keygen = metaGenrateKey()\r\n\r\n        binding.imageViewChatPhoto.setOnClickListener {\r\n            checkPermission(android.Manifest.permission.READ_EXTERNAL_STORAGE, STORAGE_PERMISSION_CODE)\r\n        }\r\n\r\n\r\n            // Create Chat\r\n            binding.fabCreateChat.setOnClickListener {\r\n\r\n\r\n                chatName = binding.editTextChatName.text.toString()\r\n\r\n                // Chat data\r\n                val chat = Chat(\r\n                    chatName,\r\n                    type.toString(),\r\n                    keygen\r\n                )\r\n\r\n                // System message data\r\n                val message = Message(\r\n                    \"system\",\r\n                    buildSystemMessage(keygen),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n\r\n                val user = HashMap<String, Any>()\r\n                val admin = hashMapOf<String?, Any>(\r\n                    \"admin\" to true\r\n                )\r\n\r\n                db.collection(\"chat\")\r\n                    .add(chat.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n                        db.collection(\"chat\")\r\n                            .document(documentReference.id)\r\n                            .collection(\"message\")\r\n                            .add(message.toHash())\r\n                        for (member in memberIds) {\r\n                            db.collection(\"profile\")\r\n                                .document(member)\r\n                                .collection(\"chat\")\r\n                                .document(documentReference.id)\r\n                                .set(chat)\r\n                            db.collection(\"chat\")\r\n                                .document(documentReference.id)\r\n                                .collection(\"user\")\r\n                                .document(member)\r\n                                .set(user)\r\n                            if (member == Firebase.auth.currentUser!!.uid) {\r\n                                db.collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .collection(\"user\")\r\n                                    .document(member)\r\n                                    .update(admin)\r\n                            }\r\n                            if (uri != Uri.EMPTY)\r\n                                Utilis.uploadFile(uri, \"chats/${documentReference.id}/icon.png\")\r\n\r\n                        }\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                    }\r\n\r\n                val intent = Intent(this, DrawerActivty::class.java)\r\n                startActivity(intent)\r\n\r\n            }\r\n\r\n    }\r\n    /*\r\n       This function happen after picking photo, and make changes in the activity\r\n    */\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n\r\n        if(requestCode == IMAGE_REQUEST_CODE && resultCode == RESULT_OK){\r\n            CropImage.activity(data?.data)\r\n                .setGuidelines(CropImageView.Guidelines.ON)\r\n                .setAspectRatio(1,1)\r\n                .start(this)\r\n        }\r\n\r\n        if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {\r\n            val result = CropImage.getActivityResult(data)\r\n            if (resultCode == RESULT_OK) {\r\n                binding.imageViewChatPhoto.setImageURI(result.uri)\r\n                uri = result.uri\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n       This function create the action bar above the activity\r\n    */\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        val inflater: MenuInflater = menuInflater\r\n        inflater.inflate(R.menu.menu_chat, menu)\r\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\r\n        supportActionBar?.setHomeAsUpIndicator(R.drawable.ic_arrow_back_24)\r\n\r\n\r\n        return true\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt
---- a/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-+++ b/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt	(date 1642079549065)
-@@ -9,11 +9,14 @@
- import android.view.Menu
- import android.view.MenuInflater
- import android.widget.ImageView
-+import android.widget.TextView
-+import androidx.appcompat.app.ActionBar
- import com.google.firebase.Timestamp
- import com.google.firebase.auth.ktx.auth
- import com.google.firebase.firestore.ktx.firestore
- import com.google.firebase.ktx.Firebase
- import com.singularity.ipcaplus.R
-+import com.singularity.ipcaplus.cryptography.generateRandomIV
- import com.singularity.ipcaplus.cryptography.metaGenrateKey
- import com.singularity.ipcaplus.databinding.ActivityCreateChatBinding
- import com.singularity.ipcaplus.drawer.DrawerActivty
-@@ -39,6 +42,13 @@
- 
-         binding = ActivityCreateChatBinding.inflate(layoutInflater)
-         setContentView(binding.root)
-+        supportActionBar?.displayOptions = ActionBar.DISPLAY_SHOW_CUSTOM
-+        supportActionBar?.setCustomView(R.layout.custom_bar_layout)
-+        findViewById<TextView>(R.id.AppBarTittle).text = "Novo Grupo"
-+        // Back button
-+        findViewById<ImageView>(R.id.BackButtonImageView).setOnClickListener{
-+            finish()
-+        }
- 
-         // Variables
-         var chatName : String
-@@ -59,18 +69,20 @@
- 
- 
-                 chatName = binding.editTextChatName.text.toString()
-+                val ivGenerated = generateRandomIV()
- 
-                 // Chat data
-                 val chat = Chat(
-                     chatName,
-                     type.toString(),
--                    keygen
-+                    keygen,
-+                    ivGenerated
-                 )
- 
-                 // System message data
-                 val message = Message(
-                     "system",
--                    buildSystemMessage(keygen),
-+                    buildSystemMessage(keygen, ivGenerated),
-                     Timestamp.now(),
-                     ""
- 
-@@ -144,17 +156,4 @@
-             }
-         }
-     }
--
--    /*
--       This function create the action bar above the activity
--    */
--    override fun onCreateOptionsMenu(menu: Menu): Boolean {
--        val inflater: MenuInflater = menuInflater
--        inflater.inflate(R.menu.menu_chat, menu)
--        supportActionBar?.setDisplayHomeAsUpEnabled(true)
--        supportActionBar?.setHomeAsUpIndicator(R.drawable.ic_arrow_back_24)
--
--
--        return true
--    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/singularity/ipcaplus/models/Chat.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.models\r\n\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot\r\n\r\nclass Chat {\r\n    var name : String = \"\"\r\n    var type : String = \"\"\r\n    var ox : String? = \"\"\r\n    var id : String? =  null\r\n\r\n    constructor(name : String, type : String, ox : String) {\r\n        this.name = name\r\n        this.type = type\r\n        this.ox = ox\r\n    }\r\n\r\n    fun toHash() :HashMap<String, Any> {\r\n        var hashMap = HashMap<String, Any>()\r\n        hashMap.put(\"name\", name)\r\n        hashMap.put(\"type\", type)\r\n        hashMap.put(\"ox\", ox!!)\r\n        return hashMap\r\n    }\r\n\r\n    companion object {\r\n        fun fromHash(hashMap: QueryDocumentSnapshot) : Chat {\r\n            val chat = Chat(\r\n                hashMap[\"name\"] as String,\r\n                hashMap[\"type\"] as String,\r\n                hashMap[\"ox\"] as String\r\n            )\r\n            return chat\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt b/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt
---- a/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-+++ b/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt	(date 1642077007855)
-@@ -7,11 +7,13 @@
-     var type : String = ""
-     var ox : String? = ""
-     var id : String? =  null
-+    var iv : String? = ""
- 
--    constructor(name : String, type : String, ox : String) {
-+    constructor(name : String, type : String, ox : String, iv : String) {
-         this.name = name
-         this.type = type
-         this.ox = ox
-+        this.iv = iv
-     }
- 
-     fun toHash() :HashMap<String, Any> {
-@@ -19,6 +21,7 @@
-         hashMap.put("name", name)
-         hashMap.put("type", type)
-         hashMap.put("ox", ox!!)
-+        hashMap.put("iv", iv!!)
-         return hashMap
-     }
- 
-@@ -27,7 +30,9 @@
-             val chat = Chat(
-                 hashMap["name"] as String,
-                 hashMap["type"] as String,
--                hashMap["ox"] as String
-+                hashMap["ox"] as String,
-+                hashMap["iv"] as String
-+
-             )
-             return chat
-         }
-Index: app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.chat.CreateChatActivity\r\nimport com.singularity.ipcaplus.databinding.ActivityAddPeopleBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Profile\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Utilis\r\n\r\nclass AddPeopleActivity: AppCompatActivity() {\r\n\r\n    var users = arrayListOf<Profile>()\r\n    var selectedUsers = arrayListOf<Profile>()\r\n\r\n    private lateinit var binding: ActivityAddPeopleBinding\r\n\r\n    private var userAdapter: RecyclerView.Adapter<*>? = null\r\n    private var userSelectedAdapter: RecyclerView.Adapter<*>? = null\r\n\r\n    private var userLayoutManager: LinearLayoutManager? = null\r\n    private var userSelectedLayoutManager: LinearLayoutManager? = null\r\n\r\n\r\n    val db = Firebase.firestore\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_add_people)\r\n        binding = ActivityAddPeopleBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.backBtn.setOnClickListener {\r\n            finish()\r\n        }\r\n\r\n        // Add people with a chat already created\r\n        if (intent.hasExtra(\"chat_id\")) {\r\n            val chat_id = intent.getStringExtra(\"chat_id\")\r\n            Backend.getAllUsersExceptChatUsers(chat_id!!) {\r\n                users.clear()\r\n                users.addAll(it)\r\n                userAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n            // Continue button\r\n            binding.fabCreateChat.setOnClickListener {\r\n\r\n                Backend.db.collection(\"chat\")\r\n                    .document(chat_id)\r\n                    .get()\r\n                    .addOnSuccessListener { document ->\r\n\r\n                        val chat = Chat(\r\n                            document[\"name\"] as String,\r\n                            document[\"type\"] as String,\r\n                            document[\"ox\"] as String\r\n                        )\r\n\r\n                        val selectedUsersIds = arrayListOf<String>()\r\n                        for(user in selectedUsers) {\r\n                            selectedUsersIds.add(user.id!!)\r\n                        }\r\n\r\n                        Backend.addUsersIntoChat(chat, chat_id, selectedUsersIds) {\r\n                            finish()\r\n                        }\r\n\r\n                    }\r\n\r\n            }\r\n        }\r\n        // Add people and create chat for the first time\r\n        else {\r\n            Backend.getAllUsersExceptCurrent {\r\n                users.clear()\r\n                users.addAll(it)\r\n                userAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n            // Continue button\r\n            binding.fabCreateChat.setOnClickListener {\r\n\r\n                val selectedUsersIds = arrayListOf<String>()\r\n                for(user in selectedUsers) {\r\n                    selectedUsersIds.add(user.id!!)\r\n                }\r\n\r\n                // Add current user to users list\r\n                Backend.getUserProfile(Firebase.auth.currentUser!!.uid) {\r\n                    selectedUsersIds.add(it.id!!)\r\n\r\n                    // Send users list to chat creation\r\n                    val intent = Intent(this, CreateChatActivity::class.java)\r\n                    intent.putExtra(\"users\", selectedUsersIds)\r\n                    intent.putExtra(\"type\", \"group\")\r\n                    startActivity(intent)\r\n                }\r\n            }\r\n        }\r\n\r\n        // Recycler View All Users\r\n        userLayoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)\r\n        binding.recyclerViewUsers.layoutManager = userLayoutManager\r\n        userAdapter = AllUsersAdapter()\r\n        binding.recyclerViewUsers.itemAnimator = DefaultItemAnimator()\r\n        binding.recyclerViewUsers.adapter = userAdapter\r\n\r\n        // Recycler View Selected Users\r\n        userSelectedLayoutManager = LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false)\r\n        binding.recyclerViewUsersSelected.layoutManager = userSelectedLayoutManager\r\n        userSelectedAdapter = SelectedUsersAdapter()\r\n        binding.recyclerViewUsersSelected.itemAnimator = DefaultItemAnimator()\r\n        binding.recyclerViewUsersSelected.adapter = userSelectedAdapter\r\n\r\n    }\r\n\r\n\r\n    inner class AllUsersAdapter : RecyclerView.Adapter<AllUsersAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            return ViewHolder(\r\n                LayoutInflater.from(parent.context).inflate(R.layout.row_user, parent, false)\r\n            )\r\n        }\r\n\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n            holder.v.apply {\r\n                // Variables\r\n                val username = findViewById<TextView>(R.id.textViewProfileName)\r\n                val imageViewUser = findViewById<ImageView>(R.id.imageViewProfile)\r\n\r\n                // Set data\r\n                Utilis.getFile(context, \"profilePictures/${users[position].id}.png\", \"png\") { bitmap ->\r\n                    imageViewUser.setImageBitmap(bitmap)\r\n                }\r\n\r\n                username.text = Utilis.getFirstAndLastName(users[position].name)\r\n\r\n            }\r\n            holder.v.setOnClickListener {\r\n\r\n                selectedUsers.add(users[position])\r\n                users.remove(users[position])\r\n                userSelectedAdapter?.notifyDataSetChanged()\r\n                userAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return users.size\r\n        }\r\n    }\r\n\r\n    inner class SelectedUsersAdapter : RecyclerView.Adapter<SelectedUsersAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            return ViewHolder(\r\n                LayoutInflater.from(parent.context).inflate(R.layout.row_add_pp, parent, false)\r\n            )\r\n        }\r\n\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n            holder.v.apply {\r\n                // Variables\r\n                val username = findViewById<TextView>(R.id.textViewProfileNameAdd)\r\n                val imageViewUser = findViewById<ImageView>(R.id.imageViewProfile)\r\n\r\n                // Set data\r\n                Utilis.getFile(context,\"profilePictures/${selectedUsers[position].id}.png\", \"png\") { bitmap ->\r\n                    imageViewUser.setImageBitmap(bitmap)\r\n                }\r\n\r\n                username.text = Utilis.getFirstAndLastName(selectedUsers[position].name)\r\n\r\n            }\r\n            holder.v.setOnClickListener {\r\n\r\n                users.add(selectedUsers[position])\r\n                selectedUsers.remove(selectedUsers[position])\r\n                userAdapter?.notifyDataSetChanged()\r\n                userSelectedAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return selectedUsers.size\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt b/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt
---- a/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-+++ b/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt	(date 1642078572739)
-@@ -67,7 +67,8 @@
-                         val chat = Chat(
-                             document["name"] as String,
-                             document["type"] as String,
--                            document["ox"] as String
-+                            document["ox"] as String,
-+                            document["iv"] as String
-                         )
- 
-                         val selectedUsersIds = arrayListOf<String>()
-Index: app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.cryptography\r\n\r\nimport android.content.Context\r\nimport android.os.Build\r\nimport android.util.Log\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.security.crypto.EncryptedSharedPreferences\r\nimport androidx.security.crypto.MasterKeys\r\nimport com.google.gson.Gson\r\nimport com.google.gson.GsonBuilder\r\nimport org.bouncycastle.jce.provider.BouncyCastleProvider\r\nimport org.bouncycastle.util.encoders.Base64\r\nimport java.io.UnsupportedEncodingException\r\nimport java.security.InvalidKeyException\r\nimport java.security.NoSuchAlgorithmException\r\nimport java.security.SecureRandom\r\nimport java.security.Security\r\nimport java.util.Objects.hash\r\nimport javax.crypto.*\r\nimport javax.crypto.spec.IvParameterSpec\r\nimport javax.crypto.spec.SecretKeySpec\r\n\r\n\r\n\r\n\r\n\r\nfun encryptMeta(strToEncrypt: String, secret_key: String): String? {\r\n    Security.addProvider(BouncyCastleProvider())\r\n    hash(strToEncrypt)\r\n    var keyBytes: ByteArray\r\n    //val initVector = generateRandomIV()\r\n    val initVector = \"7c5afb00aaecb1a1\"\r\n    val iv = IvParameterSpec(initVector.toByteArray(charset(\"UTF-8\")))\r\n    println(\"AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE $initVector\")\r\n\r\n\r\n    try {\r\n        keyBytes = secret_key.toByteArray(charset(\"UTF8\"))\r\n        val skey = SecretKeySpec(keyBytes, \"AES\")\r\n        val input = strToEncrypt.toByteArray(charset(\"UTF8\"))\r\n\r\n        synchronized(Cipher::class.java) {\r\n            val cipher = Cipher.getInstance(\"AES/CBC/PKCS7Padding\")\r\n            cipher.init(Cipher.ENCRYPT_MODE, skey, iv)\r\n\r\n            val cipherText = ByteArray(cipher.getOutputSize(input.size))\r\n            var ctLength = cipher.update(\r\n                input, 0, input.size,\r\n                cipherText, 0\r\n            )\r\n            ctLength += cipher.doFinal(cipherText, ctLength)\r\n            return String(\r\n                Base64.encode(cipherText)\r\n            )\r\n        }\r\n    } catch (uee: UnsupportedEncodingException) {\r\n        uee.printStackTrace()\r\n    } catch (ibse: IllegalBlockSizeException) {\r\n        ibse.printStackTrace()\r\n    } catch (bpe: BadPaddingException) {\r\n        bpe.printStackTrace()\r\n    } catch (ike: InvalidKeyException) {\r\n        ike.printStackTrace()\r\n    } catch (nspe: NoSuchPaddingException) {\r\n        nspe.printStackTrace()\r\n    } catch (nsae: NoSuchAlgorithmException) {\r\n        nsae.printStackTrace()\r\n    } catch (e: ShortBufferException) {\r\n        e.printStackTrace()\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nfun decryptWithAESmeta(key: String, strToDecrypt: String?): String? {\r\n    Security.addProvider(BouncyCastleProvider())\r\n    var keyBytes: ByteArray\r\n    val initVector = \"7c5afb00aaecb1a1\"\r\n\r\n    try {\r\n        val iv = IvParameterSpec(initVector.toByteArray(charset(\"UTF-8\")))\r\n        keyBytes = key.toByteArray(charset(\"UTF8\"))\r\n        val skey = SecretKeySpec(keyBytes, \"AES\")\r\n        val input = org.bouncycastle.util.encoders.Base64\r\n            .decode(strToDecrypt?.trim { it <= ' ' }?.toByteArray(charset(\"UTF8\")))\r\n\r\n        synchronized(Cipher::class.java) {\r\n            val cipher = Cipher.getInstance(\"AES/CBC/PKCS7Padding\")\r\n            cipher.init(Cipher.DECRYPT_MODE, skey, iv)\r\n\r\n            val plainText = ByteArray(cipher.getOutputSize(input.size))\r\n            var ptLength = cipher.update(input, 0, input.size, plainText, 0)\r\n            ptLength += cipher.doFinal(plainText, ptLength)\r\n            val decryptedString = String(plainText)\r\n            return decryptedString.trim { it <= ' ' }\r\n        }\r\n    } catch (uee: UnsupportedEncodingException) {\r\n        uee.printStackTrace()\r\n    } catch (ibse: IllegalBlockSizeException) {\r\n        ibse.printStackTrace()\r\n    } catch (bpe: BadPaddingException) {\r\n        bpe.printStackTrace()\r\n    } catch (ike: InvalidKeyException) {\r\n        ike.printStackTrace()\r\n    } catch (nspe: NoSuchPaddingException) {\r\n        nspe.printStackTrace()\r\n    } catch (nsae: NoSuchAlgorithmException) {\r\n        nsae.printStackTrace()\r\n    } catch (e: ShortBufferException) {\r\n        e.printStackTrace()\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nfun metaGenrateKey(): String {\r\n    //val secretKey: String = \"662ede816988e58fb6d057d9d85605e0\"\r\n    val keygen = (\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n            + \"0123456789\"\r\n            + \"abcdefghijklmnopqrstuvxyz\")\r\n\r\n    val n = 32\r\n\r\n    // create StringBuffer size of keygen\r\n    val secretKey = StringBuilder(n)\r\n    for (i in 0 until n) {\r\n\r\n        // generate a random number between\r\n        // 0 to keygen variable length\r\n        val index = (keygen.length\r\n                * Math.random()).toInt()\r\n\r\n        // add Character one by one in end of secretKey\r\n        secretKey.append(keygen[index])\r\n\r\n    }\r\n    println(secretKey)\r\n    return secretKey.toString()\r\n}\r\n\r\nfun metaBlock(message: String){\r\n    //val secretKey: String = \"662ede816988e58fb6d057d9d85605e0\"\r\n    val keygen = metaGenrateKey()\r\n\r\n    var meta = encryptMeta(message, keygen)\r\n    println(meta)\r\n\r\n    val message_decripted = decryptWithAESmeta(keygen, meta)\r\n    println(message_decripted)\r\n}\r\n\r\n@RequiresApi(Build.VERSION_CODES.M)\r\nfun saveKeygenOx(context : Context, chatUid : String, keygen: String){\r\n\r\n    val keyGenParameterSpec = MasterKeys.AES256_GCM_SPEC\r\n    val masterKeyAlias = MasterKeys.getOrCreate(keyGenParameterSpec)\r\n    val sharedPreferences = EncryptedSharedPreferences.create(\r\n        \"meta_shared_preferences\",\r\n        masterKeyAlias,\r\n        context,\r\n        EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,\r\n        EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM\r\n    )\r\n\r\n    // storing a value\r\n    sharedPreferences\r\n        .edit()\r\n        .putString(chatUid, keygen)\r\n        .apply()\r\n}\r\n\r\n@RequiresApi(Build.VERSION_CODES.M)\r\nfun getMetaOx(context: Context, chatUid: String): String? {\r\n\r\n    val keyGenParameterSpec = MasterKeys.AES256_GCM_SPEC\r\n    val masterKeyAlias = MasterKeys.getOrCreate(keyGenParameterSpec)\r\n    val sharedPreferences = EncryptedSharedPreferences.create(\r\n        \"meta_shared_preferences\",\r\n        masterKeyAlias,\r\n        context,\r\n        EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,\r\n        EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM\r\n    )\r\n\r\n    // reading a value\r\n    println(sharedPreferences.getString(chatUid, \"\"))\r\n    return sharedPreferences.getString(chatUid, \"\") // -> \"some_data\"\r\n}\r\n\r\nfun generateRandomIV(): String {\r\n    val ranGen = SecureRandom()\r\n    val aesKey = ByteArray(16)\r\n    ranGen.nextBytes(aesKey)\r\n    val result = StringBuffer()\r\n    for (b in aesKey) {\r\n        result.append(String.format(\"%02x\", b))\r\n    }\r\n    return if (16 > result.toString().length) {\r\n        result.toString()\r\n    } else {\r\n        result.toString().substring(0, 16)\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt b/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt
---- a/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-+++ b/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt	(date 1642078199573)
-@@ -24,12 +24,12 @@
- 
- 
- 
--fun encryptMeta(strToEncrypt: String, secret_key: String): String? {
-+fun encryptMeta(strToEncrypt: String, secret_key: String, initVector : String): String? {
-     Security.addProvider(BouncyCastleProvider())
-     hash(strToEncrypt)
-     var keyBytes: ByteArray
-     //val initVector = generateRandomIV()
--    val initVector = "7c5afb00aaecb1a1"
-+    //val initVector = "7c5afb00aaecb1a1"
-     val iv = IvParameterSpec(initVector.toByteArray(charset("UTF-8")))
-     println("AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE $initVector")
- 
-@@ -72,10 +72,10 @@
-     return null
- }
- 
--fun decryptWithAESmeta(key: String, strToDecrypt: String?): String? {
-+fun decryptWithAESmeta(key: String, strToDecrypt: String?, initVector : String): String? {
-     Security.addProvider(BouncyCastleProvider())
-     var keyBytes: ByteArray
--    val initVector = "7c5afb00aaecb1a1"
-+    //val initVector = "7c5afb00aaecb1a1"
- 
-     try {
-         val iv = IvParameterSpec(initVector.toByteArray(charset("UTF-8")))
-@@ -137,7 +137,7 @@
-     println(secretKey)
-     return secretKey.toString()
- }
--
-+/*
- fun metaBlock(message: String){
-     //val secretKey: String = "662ede816988e58fb6d057d9d85605e0"
-     val keygen = metaGenrateKey()
-@@ -147,7 +147,7 @@
- 
-     val message_decripted = decryptWithAESmeta(keygen, meta)
-     println(message_decripted)
--}
-+}*/
- 
- @RequiresApi(Build.VERSION_CODES.M)
- fun saveKeygenOx(context : Context, chatUid : String, keygen: String){
-Index: app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.utils\r\n\r\nimport android.net.Uri\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.firebase.storage.FirebaseStorage\r\nimport com.google.firebase.storage.ktx.storage\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.models.*\r\nimport org.json.JSONArray\r\nimport java.io.File\r\n\r\nobject Backend {\r\n\r\n    val db = Firebase.firestore\r\n\r\n    /*\r\n       ------------------------------------------------ Events ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all events during the month in the firebase to an list\r\n       @month = selected month\r\n       @callBack = return the list\r\n    */\r\n    fun getAllMonthEvents(month: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        // Get all user chat ids\r\n        val chatIds = arrayListOf<String>()\r\n        getAllUserChatIds {\r\n            chatIds.addAll(it)\r\n\r\n            // Search in all chats\r\n            for (id in chatIds) {\r\n                db.collection(\"chat\")\r\n                    .document(id)\r\n                    .collection(\"event\")\r\n                    .addSnapshotListener { documents, _ ->\r\n\r\n                        documents?.let {\r\n\r\n                            for (document in documents) {\r\n                                val event = EventCalendar.fromHash(document)\r\n                                event.id = document.id\r\n\r\n                                val date = Utilis.getDate(event.datetime.seconds * 1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                                if (month == Utilis.getMonthById(Utilis.getMonth(date).toInt())) {\r\n                                    events.add(event)\r\n                                }\r\n                            }\r\n                            callBack(events)\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private fun getAllUserChatIds(callBack: (List<String>)->Unit) {\r\n\r\n        val chatIds = arrayListOf<String>()\r\n\r\n        // Get Group Chats Ids\r\n        db.collection(\"profile\").document(Firebase.auth.currentUser!!.uid).collection(\"chat\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in it) {\r\n                        chatIds.add(document.id)\r\n                    }\r\n\r\n                    callBack(chatIds)\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the month in the firebase to an list\r\n       @month = selected month\r\n       @callBack = return the list\r\n    */\r\n    fun getAllChatMonthEvents(month: String, chat_id: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        db.collection(\"chat\")\r\n            .document(chat_id)\r\n            .collection(\"event\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val event = EventCalendar.fromHash(document)\r\n                        event.id = document.id\r\n\r\n                        val date = Utilis.getDate(\r\n                            event.datetime.seconds * 1000,\r\n                            \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                        )\r\n                        if (month == Utilis.getMonthById(Utilis.getMonth(date).toInt())) {\r\n                            events.add(event)\r\n                        }\r\n                    }\r\n\r\n                    callBack(events)\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the day in the firebase to an list\r\n       @day = selected day\r\n       @callBack = return the list\r\n    */\r\n    fun getAllChatMonthDayEvents(month: String, day: Int, chat_id: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        db.collection(\"chat\")\r\n            .document(chat_id)\r\n            .collection(\"event\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val event = EventCalendar.fromHash(document)\r\n                        event.id = document.id\r\n\r\n                        val date = Utilis.getDate(\r\n                            event.datetime.seconds * 1000,\r\n                            \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                        )\r\n                        if (day == Utilis.getDay(date).toInt() && month == Utilis.getMonthById(\r\n                                Utilis.getMonth(date).toInt()\r\n                            )\r\n                        ) {\r\n                            events.add(event)\r\n                        }\r\n                    }\r\n\r\n                    callBack(events)\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the day in the firebase to an list\r\n       @day = selected day\r\n       @callBack = return the list\r\n    */\r\n    fun getAllMonthDayEvents(month: String, day: Int, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        // Get all user chat ids\r\n        val chatIds = arrayListOf<String>()\r\n        getAllUserChatIds {\r\n            chatIds.addAll(it)\r\n\r\n            // Search in all chats\r\n            for (id in chatIds) {\r\n                db.collection(\"chat\")\r\n                    .document(id)\r\n                    .collection(\"event\")\r\n                    .addSnapshotListener { documents, _ ->\r\n\r\n                        documents?.let {\r\n\r\n                            for (document in documents) {\r\n                                val event = EventCalendar.fromHash(document)\r\n                                event.id = document.id\r\n\r\n                                val date = Utilis.getDate(event.datetime.seconds * 1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                                if (day == Utilis.getDay(date).toInt() && month == Utilis.getMonthById(\r\n                                        Utilis.getMonth(date).toInt())\r\n                                ) {\r\n                                    events.add(event)\r\n                                }\r\n                            }\r\n\r\n                            callBack(events)\r\n                        }\r\n\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    fun deleteEvent(chatID: String, eventID: String) {\r\n\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"event\")\r\n            .document(eventID)\r\n            .delete()\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Schedule ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all events in the firebase to an list\r\n       @callBack = return the list\r\n    */\r\n    fun getDayCourseSubjects(day: String, courseId: String, callBack: (List<Subject>)->Unit) {\r\n\r\n        val subjects = arrayListOf<Subject>()\r\n        val subjectsWithBreaks = arrayListOf<Subject>()\r\n\r\n        db.collection(\"course\").document(courseId).collection(\"subject\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n\r\n                    // Add every subject to the list\r\n                    for (document in documents) {\r\n                        val subject = Subject.fromHash(document)\r\n                        if (day == subject.day) {\r\n                            subjects.add(subject)\r\n                        }\r\n                    }\r\n\r\n                    // Order the subjects by time\r\n                    for (i in 0 until subjects.size) {\r\n                        for (j in 0 until subjects.size - 1) {\r\n\r\n                            if (Utilis.convertHoursStringToInt(subjects[j].start_time) > Utilis.convertHoursStringToInt(\r\n                                    subjects[j + 1].start_time\r\n                                )\r\n                            ) {\r\n                                val temp = subjects[j]\r\n                                subjects[j] = subjects[j + 1]\r\n                                subjects[j + 1] = temp\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Add Break Times Between Classes\r\n                    for (i in 0 until subjects.size) {\r\n                        if (i % 2 == 0) {\r\n                            subjectsWithBreaks.add(subjects[i])\r\n                        }\r\n                        else {\r\n                            val diff = Utilis.convertHoursStringToInt(subjects[i].start_time) - Utilis.convertHoursStringToInt(\r\n                                subjects[i - 1].end_time\r\n                            )\r\n                            subjectsWithBreaks.add(Subject(\"breaktime\", diff.toString()))\r\n                            subjectsWithBreaks.add(subjects[i])\r\n                        }\r\n                    }\r\n\r\n                    callBack(subjectsWithBreaks)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns the user course by callback\r\n       @id = user uid\r\n    */\r\n    fun getUserCourses(uid: String, callBack:(String)->Unit) {\r\n\r\n        db.collection(\"profile\")\r\n            .document(uid)\r\n            .collection(\"course\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    var courseId = \"\"\r\n                    for (document in documents)\r\n                        courseId = document.id\r\n\r\n                    callBack(courseId)\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns the user course by callback\r\n       @id = user uid\r\n    */\r\n    fun getUserCoursesIds(uid: String, courseTag: String, callBack:(List<String>)->Unit) {\r\n\r\n        val courseIds = arrayListOf<String>()\r\n\r\n        db.collection(\"course\")\r\n            .whereEqualTo(\"tag\", courseTag)\r\n            .get()\r\n            .addOnSuccessListener { documents ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents)\r\n                        courseIds.add(document.id)\r\n\r\n                    callBack(courseIds)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    fun setUserCourses(userID: String, courseID: String) {\r\n\r\n        val profile = HashMap<String, Any>()\r\n        db.collection(\"profile\")\r\n            .document(userID)\r\n            .collection(\"course\")\r\n            .document(courseID)\r\n            .set(profile)\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Contacts ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all contacts in the firebase to an list\r\n       @callBack = return the list\r\n    */\r\n    fun getAllContacts(callBack: (List<Contact>)->Unit) {\r\n\r\n        val contacts = arrayListOf<Contact>()\r\n\r\n        db.collection(\"contacts\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val contact = Contact.fromHash(document)\r\n                        contacts.add(contact)\r\n                    }\r\n\r\n                    callBack(contacts)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Profile ------------------------------------------------\r\n    */\r\n\r\n    fun getUserProfile(userId: String, callBack:(Profile)->Unit) {\r\n\r\n        var profile = Profile()\r\n\r\n        db.collection(\"profile\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n\r\n                        if (document.id == userId) {\r\n                            profile = Profile.fromHash(document)\r\n                            profile.id = document.id\r\n                        }\r\n                    }\r\n\r\n                    callBack(profile)\r\n                }\r\n            }\r\n    }\r\n\r\n    fun getAllUsers (callBack:(List<Profile>)->Unit) {\r\n        val profiles = arrayListOf<Profile>()\r\n\r\n        db.collection(\"profile\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val profile = Profile.fromHash(document)\r\n                        profile.id = document.id\r\n                        profiles.add(profile)\r\n                    }\r\n                }\r\n\r\n                callBack(profiles)\r\n            }\r\n    }\r\n\r\n    fun getAllUsersExceptCurrent (callBack:(List<Profile>)->Unit) {\r\n        val profiles = arrayListOf<Profile>()\r\n\r\n        db.collection(\"profile\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val profile = Profile.fromHash(document)\r\n\r\n                        if (Firebase.auth.currentUser!!.uid != document.id) {\r\n                            profile.id = document.id\r\n                            profiles.add(profile)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                callBack(profiles)\r\n            }\r\n    }\r\n\r\n\r\n    fun getAllUsersExceptChatUsers (chatID: String, callBack:(List<Profile>)->Unit) {\r\n\r\n        val currentUserIds = arrayListOf<String>()\r\n        val profiles = arrayListOf<Profile>()\r\n\r\n        // Get current chat users ids\r\n        getChatUsers(chatID) {\r\n            for (user in it)\r\n                currentUserIds.add(user.id!!)\r\n\r\n            db.collection(\"profile\")\r\n                .addSnapshotListener { documents, _ ->\r\n                    documents?.let {\r\n\r\n                        for (document in documents) {\r\n                            val profile = Profile.fromHash(document)\r\n\r\n                            // Verify if user is not in the chat\r\n                            var found = false\r\n                            for (id in currentUserIds) {\r\n                                if (id == document.id)\r\n                                    found = true\r\n                            }\r\n\r\n                            if (!found) {\r\n                                profile.id = document.id\r\n                                profiles.add(profile)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    callBack(profiles)\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    fun changeUserChatAdminStatus(chatId: String, userId: String, status: Boolean) {\r\n\r\n        db.collection(\"chat\")\r\n            .document(chatId)\r\n            .collection(\"user\")\r\n            .document(userId)\r\n            .update(\"admin\", status)\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Chats ------------------------------------------------\r\n    */\r\n\r\n\r\n    fun getChatUsers(chatID: String, callBack: (List<Profile>)->Unit) {\r\n\r\n        val userIds = arrayListOf<String>()\r\n        val adminIds = arrayListOf<String>()\r\n        val users = arrayListOf<Profile>()\r\n\r\n        // Get the ids of the users in the chat\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        userIds.add(document.id)\r\n\r\n                        if (document[\"admin\"] != true)\r\n                            adminIds.add(document.id)\r\n\r\n                    }\r\n                }\r\n\r\n                // Find the data for each id\r\n                db.collection(\"profile\")\r\n                    .addSnapshotListener { documents2, _ ->\r\n                        documents2?.let {\r\n                            for (document in documents2) {\r\n                                for (id in userIds) {\r\n                                    if (document.id == id) {\r\n                                        val profile = Profile.fromHash(document)\r\n                                        profile.id = document.id\r\n                                        users.add(profile)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        // Get Admins\r\n                        for (u in users) {\r\n                            for (a in adminIds) {\r\n                                if (u.id == a) {\r\n                                    u.isAdmin = true\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        callBack(users)\r\n                    }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    fun getChatUsersUids(chatID: String, callBack: (List<String>) -> Unit){\r\n        var userIds = arrayListOf<String>()\r\n\r\n        // Get the ids of the users in the chat\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        userIds.add(document.id)\r\n                    }\r\n                }\r\n\r\n                callBack(userIds)\r\n            }\r\n    }\r\n\r\n\r\n    fun changeChatName(chatID: String, newName: String) {\r\n\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .update(\"name\", newName)\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns last chat message by chat id\r\n       @callBack = return the message\r\n    */\r\n    fun getLastMessageByChatID(chatID: String, callBack: (Message?)->Unit) {\r\n\r\n        var message : Message? = null\r\n\r\n        db.collection(\"chat\").document(\"${chatID}\").collection(\"message\")\r\n            .orderBy(\"time\", Query.Direction.DESCENDING).limit(1)\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        message = Message.fromHash(document)\r\n                        }\r\n                    }\r\n\r\n                    callBack(message)\r\n                }\r\n\r\n    }\r\n\r\n\r\n    fun getChatAdminIds(chatID: String, callBack: (List<String>)->Unit) {\r\n\r\n        val adminIds = arrayListOf<String>()\r\n\r\n        // Get Admins\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n\r\n                        if (document[\"admin\"] == true)\r\n                            adminIds.add(document.id)\r\n\r\n                    }\r\n\r\n                    callBack(adminIds)\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n\r\n    fun removeUserFromChat(chatId: String, userId: String) {\r\n\r\n        // remover user from chat user list\r\n        db.collection(\"chat\")\r\n            .document(chatId)\r\n            .collection(\"user\")\r\n            .document(userId)\r\n            .delete()\r\n\r\n        // remove chat from user chat list\r\n        db.collection(\"profile\")\r\n            .document(userId)\r\n            .collection(\"chat\")\r\n            .document(chatId)\r\n            .delete()\r\n    }\r\n\r\n\r\n    fun addUsersIntoChat(chat: Chat, chatId: String, usersId: ArrayList<String>, callBack: ()->Unit) {\r\n\r\n        for (userId in usersId) {\r\n\r\n            // Create chat in user profile\r\n            db.collection(\"profile\")\r\n                .document(userId)\r\n                .collection(\"chat\")\r\n                .document(chatId)\r\n                .set(chat)\r\n                .addOnCompleteListener {\r\n\r\n                    val profile = HashMap<String, Any>()\r\n                    db.collection(\"chat\")\r\n                        .document(chatId)\r\n                        .collection(\"user\")\r\n                        .document(userId)\r\n                        .set(profile)\r\n                        .addOnCompleteListener {\r\n                            callBack()\r\n                        }\r\n\r\n                }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    fun deleteChat(chatId: String, callback: ()->Unit) {\r\n\r\n        val userIds = arrayListOf<String>()\r\n\r\n        // get all chat members ids\r\n        db.collection(\"chat\")\r\n            .document(chatId)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        userIds.add(document.id)\r\n                    }\r\n\r\n                    // <------------------------------------------------------- Missing here\r\n\r\n                    // delete chat\r\n                    /*\r\n                    db.collection(\"chat\")\r\n                        .document(chatId)\r\n                        .delete()\r\n*/\r\n\r\n                    // delete chat references in members\r\n                    for (i in 0 until userIds.size) {\r\n\r\n                        db.collection(\"profile\")\r\n                            .document(userIds[i])\r\n                            .collection(\"chat\")\r\n                            .document(chatId)\r\n                            .delete()\r\n                            .addOnCompleteListener {\r\n                                // If its the last callback refresh the activity\r\n                                if (i == userIds.size - 1)\r\n                                    callback()\r\n                            }\r\n\r\n                    }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    fun getAllDirectChatIdsByUser(userId: String, callBack: (List<String?>) -> Unit){\r\n\r\n        var chatIds = arrayListOf<String?>()\r\n\r\n        // Get all profile chat ids\r\n        db.collection(\"profile\")\r\n            .document(userId)\r\n            .collection(\"chat\")\r\n            .whereEqualTo(\"type\", \"chat\")\r\n            .get()\r\n            .addOnSuccessListener { documents ->\r\n                for (document in documents) {\r\n                    chatIds.add(document.id)\r\n                }\r\n\r\n                println(\"DEntroooo\" + chatIds)\r\n                callBack(chatIds)\r\n            }\r\n\r\n    }\r\n\r\n    fun getDirectChatById(chatIds: List<String?>, userId: String, callBack: (String?)-> Unit) {\r\n\r\n        var chatId : String? = null\r\n\r\n        for (id in chatIds) {\r\n            db.collection(\"chat\")\r\n                .document(id!!)\r\n                .collection(\"user\")\r\n                .get()\r\n                .addOnSuccessListener { documents ->\r\n                    for(document in documents) {\r\n                        if(document.id == userId){\r\n                            chatId = id\r\n                        }\r\n                    }\r\n\r\n                    println(\"ACABOU2---------------------------------------\")\r\n                    callBack(chatId)\r\n                }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Register Manipulation ------------------------------------------------\r\n    */\r\n\r\n    fun getIpcaData(email: String, callBack: (Profile?)->Unit) {\r\n\r\n        var profile : Profile? = null\r\n\r\n        db.collection(\"ipca_data\")\r\n            .whereEqualTo(\"email\", email)\r\n            .get()\r\n            .addOnSuccessListener { documents ->\r\n\r\n                for (document in documents) {\r\n                    profile = Profile.fromHash(document)\r\n                }\r\n\r\n                callBack(profile)\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Files ------------------------------------------------\r\n    */\r\n\r\n    fun getAllChatFolderFiles(path: String, callBack: (List<FirebaseFile>) -> Unit) {\r\n\r\n        val files = arrayListOf<FirebaseFile>()\r\n        val listRef = Firebase.storage.reference.child(path)\r\n\r\n        // Find all the prefixes and items.\r\n        listRef.listAll().addOnSuccessListener {\r\n\r\n            for (i in it.prefixes) {\r\n                files.add(FirebaseFile(i.name, R.drawable.ic_folder))\r\n            }\r\n\r\n            for (i in it.items) {\r\n                val icon = Utilis.getFileIcon(i.name)\r\n                if (icon != -1) {\r\n                    val file = FirebaseFile(i.name, icon)\r\n                    files.add(file)\r\n                }\r\n            }\r\n\r\n            callBack(files)\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n      ------------------------------------------------ Files ------------------------------------------------\r\n   */\r\n\r\n\r\n    fun deleteAllFilesInsideFolder(filePath: String, callback: ()->Unit) {\r\n\r\n        val storage = Firebase.storage\r\n        val listRef = storage.reference.child(filePath)\r\n\r\n        listRef.listAll()\r\n            .addOnSuccessListener {\r\n\r\n                it.items.forEach { item ->\r\n                    item.delete()\r\n                        .addOnCompleteListener {\r\n                            callback()\r\n                        }\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    fun getFileUrl(filePath: String, callback: (Uri)->Unit) {\r\n\r\n        val storageRef = FirebaseStorage.getInstance().reference.child(filePath)\r\n\r\n        storageRef.downloadUrl.addOnCompleteListener {\r\n            callback(it.result!!)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    fun postTokenAddress(tokenAdress: String, uid: String){\r\n        println(tokenAdress)\r\n        println(uid)\r\n        var token = HashMap<String, String>()\r\n        db.collection(\"profile\")\r\n            .document(uid)\r\n            .collection(\"tokens\")\r\n            .document(tokenAdress)\r\n            .set(token)\r\n    }\r\n\r\n    fun getAllTokens(uid: String, callBack: (List<String>) -> Unit){\r\n        val tokens = arrayListOf<String>()\r\n\r\n        db.collection(\"profile\").document(uid).collection(\"tokens\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                            tokens.add(document.id)\r\n                    }\r\n\r\n                    callBack(tokens)\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    fun createJsonArrayString(array: List<String>): JSONArray {\r\n        return JSONArray(array)\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt b/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt
---- a/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-+++ b/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt	(date 1642079549056)
-@@ -866,4 +866,22 @@
-     fun createJsonArrayString(array: List<String>): JSONArray {
-         return JSONArray(array)
-     }
-+
-+    fun getIv(chat_id: String, callBack: (String?)->Unit) {
-+
-+        var iv : String? = null
-+
-+        db.collection("chat")
-+            .get()
-+            .addOnSuccessListener { documents ->
-+                for(document in documents) {
-+                    if (document.id == chat_id) {
-+                        val chat = Chat.fromHash(document)
-+                        iv = chat.iv.toString()
-+                    }
-+                }
-+                callBack(iv)
-+            }
-+    }
-+
- }
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_12_2022_11_58_PM__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_12_2022_11_58_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_1_12_2022_11_58_PM__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_1_12_2022_11_58_PM__Default_Changelist_.xml	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
+++ /dev/null	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_1_12_2022_11_58_PM_[Default_Changelist]" date="1642031916396" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_1_12_2022_11_58_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 1/12/2022 11:58 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM__Default_Changelist_.xml	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
+++ /dev/null	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]" date="1642080053964" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 1/13/2022 1:20 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_15_2022_10_29_PM_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_15_2022_10_29_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_1_15_2022_10_29_PM_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_1_15_2022_10_29_PM_[Default_Changelist]/shelved.patch	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
+++ /dev/null	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
@@ -1,3692 +0,0 @@
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_8_2022_12_49_AM_[Default_Changelist]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_8_2022_12_49_AM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_1_8_2022_12_49_AM_[Default_Changelist]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_1_8_2022_12_49_AM_[Default_Changelist]/shelved.patch	(revision 6ef8a7d344cca7849019506e2d9194d4a6c37199)
-+++ /dev/null	(revision 6ef8a7d344cca7849019506e2d9194d4a6c37199)
-@@ -1,3659 +0,0 @@
--Index: app/src/main/java/com/singularity/ipcaplus/drawer/DrawerActivty.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.singularity.ipcaplus.drawer\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.MenuItem\r\nimport android.view.WindowManager\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.WelcomeActivity\r\nimport com.singularity.ipcaplus.utils.PreferenceHelper.email\r\nimport com.singularity.ipcaplus.utils.PreferenceHelper.password\r\nimport com.singularity.ipcaplus.utils.PreferenceHelper.userId\r\nimport com.singularity.ipcaplus.chat.SearchActivity\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityDrawerActivtyBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.PreferenceHelper\r\nimport com.singularity.ipcaplus.utils.UserLoggedIn\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport kotlin.random.Random\r\nimport androidx.core.view.ViewCompat\r\n\r\nimport androidx.core.app.ActivityOptionsCompat\r\nimport com.singularity.ipcaplus.AddButtonActivity\r\nimport com.singularity.ipcaplus.chat.CreateChatActivity\r\nimport com.singularity.ipcaplus.databinding.ActivityProfileBinding\r\nimport com.singularity.ipcaplus.utils.Backend\r\n\r\n\r\nclass DrawerActivty : AppCompatActivity() {\r\n\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var binding: ActivityDrawerActivtyBinding\r\n    private lateinit var binding2: ActivityProfileBinding\r\n    val db = Firebase.firestore\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityDrawerActivtyBinding.inflate(layoutInflater)\r\n       // binding2 = ActivityProfileBinding.inflate(layoutInflater)\r\n\r\n        setContentView(binding.root)\r\n\r\n       /* var imageView = binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile)\r\n        var imageView2 = binding2.imageViewProfile.id*/\r\n\r\n        binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile).setOnClickListener {\r\n\r\n            /*val options = ActivityOptionsCompat.makeSceneTransitionAnimation(\r\n                this,\r\n                imageView,\r\n                imageView2.toString()\r\n            )*/\r\n\r\n            val intent = Intent(this, ProfileActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        Utilis.getFile(this,\"profilePictures/\" + Firebase.auth.uid + \".png\", \"png\") { bitmap ->\r\n            binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile).setImageBitmap(bitmap)\r\n        }\r\n        if(!UserLoggedIn.name.isNullOrEmpty()){\r\n            val name = Utilis.getFirstAndLastName(UserLoggedIn.name!!)\r\n            binding.navView.getHeaderView(0).findViewById<TextView>(R.id.textView3).text = name\r\n            binding.navView.getHeaderView(0).findViewById<TextView>(R.id.emailTextView).text = UserLoggedIn.email\r\n        }\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n        window.setFlags(\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n\r\n        binding.appBarMain.fabAddChat.setOnClickListener { view ->\r\n            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show()\r\n        }\r\n        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.nav_home\r\n            ), drawerLayout\r\n        )\r\n\r\n        // Generate key for chats\r\n        val keygen = metaGenrateKey()\r\n\r\n        // Criação de Chat\r\n        binding.appBarMain.fabAddChat.setOnClickListener {\r\n\r\n            val intent = Intent(this, AddButtonActivity::class.java)\r\n            startActivity(intent)\r\n\r\n            /*\r\n            val chat = Chat(\r\n                \"Chat Teste \" + Random.nextInt(256),\r\n                \"chat\",\r\n                keygen\r\n            )\r\n            // Build encryptation data of first message send by the system\r\n            var meta = encryptMeta(\"This is an Alpha Chat, bugs are expected,\" +\r\n                    \" please report them if you found some. Welcome to Singularity!\", keygen)\r\n            val id_amigo = \"Y90PjGQmLsMrxLicWkirOKpPSOx2\"\r\n            val message = Message(\r\n                \"system\",\r\n                meta.toString(),\r\n                \"2021-12-22\",\r\n                Timestamp.now(),\r\n                \"\"\r\n\r\n            )\r\n            db.collection(\"chat\")\r\n                .add(chat.toHash())\r\n                .addOnSuccessListener { documentReference ->\r\n                    db.collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .collection(\"message\")\r\n                        .add(message.toHash())\r\n                    db.collection(\"profile\")\r\n                        .document(\"${Firebase.auth.currentUser!!.uid}\")\r\n                        .collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .set(chat)\r\n                    db.collection(\"profile\")\r\n                        .document(id_amigo)\r\n                        .collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .set(chat)\r\n\r\n                }\r\n                .addOnFailureListener { e ->\r\n                    Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                }*/\r\n\r\n        }\r\n\r\n        // Log Out Button\r\n        binding.logoutLayout.setOnClickListener {\r\n\r\n            val prefs = PreferenceHelper.customPreference(this, \"User_data\")\r\n            prefs.password = null\r\n            prefs.email = null\r\n            prefs.userId = null\r\n\r\n            val intent = Intent(this, WelcomeActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        // Passing each fragment ID as a set of Ids\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n\r\n    }\r\n\r\n\r\n    /*\r\n        Refresh Activity Content\r\n    */\r\n    override fun onResume() {\r\n        super.onResume()\r\n\r\n        Utilis.getFile(this,\"profilePictures/\" + Firebase.auth.uid!! + \".png\", \"png\") { bitmap ->\r\n            binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile).setImageBitmap(bitmap)\r\n        }\r\n    }\r\n\r\n\r\n        override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        menuInflater.inflate(R.menu.drawer, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        // Handle item selection\r\n        return when (item.itemId) {\r\n            R.id.search_btn -> {\r\n                val intent = Intent(this, SearchActivity::class.java)\r\n                startActivity(intent)\r\n\r\n                true\r\n            }\r\n            else -> super.onOptionsItemSelected(item)\r\n        }\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/singularity/ipcaplus/drawer/DrawerActivty.kt b/app/src/main/java/com/singularity/ipcaplus/drawer/DrawerActivty.kt
----- a/app/src/main/java/com/singularity/ipcaplus/drawer/DrawerActivty.kt	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ b/app/src/main/java/com/singularity/ipcaplus/drawer/DrawerActivty.kt	(date 1641250023852)
--@@ -10,6 +10,7 @@
-- import android.view.WindowManager
-- import android.widget.ImageView
-- import android.widget.TextView
--+import android.widget.Toast
-- import androidx.drawerlayout.widget.DrawerLayout
-- import androidx.navigation.findNavController
-- import androidx.navigation.ui.AppBarConfiguration
--@@ -40,6 +41,8 @@
-- import androidx.core.view.ViewCompat
-- 
-- import androidx.core.app.ActivityOptionsCompat
--+import com.google.android.gms.tasks.OnCompleteListener
--+import com.google.firebase.messaging.FirebaseMessaging
-- import com.singularity.ipcaplus.AddButtonActivity
-- import com.singularity.ipcaplus.chat.CreateChatActivity
-- import com.singularity.ipcaplus.databinding.ActivityProfileBinding
--@@ -115,47 +118,6 @@
--             val intent = Intent(this, AddButtonActivity::class.java)
--             startActivity(intent)
-- 
---            /*
---            val chat = Chat(
---                "Chat Teste " + Random.nextInt(256),
---                "chat",
---                keygen
---            )
---            // Build encryptation data of first message send by the system
---            var meta = encryptMeta("This is an Alpha Chat, bugs are expected," +
---                    " please report them if you found some. Welcome to Singularity!", keygen)
---            val id_amigo = "Y90PjGQmLsMrxLicWkirOKpPSOx2"
---            val message = Message(
---                "system",
---                meta.toString(),
---                "2021-12-22",
---                Timestamp.now(),
---                ""
---
---            )
---            db.collection("chat")
---                .add(chat.toHash())
---                .addOnSuccessListener { documentReference ->
---                    db.collection("chat")
---                        .document("${documentReference.id}")
---                        .collection("message")
---                        .add(message.toHash())
---                    db.collection("profile")
---                        .document("${Firebase.auth.currentUser!!.uid}")
---                        .collection("chat")
---                        .document("${documentReference.id}")
---                        .set(chat)
---                    db.collection("profile")
---                        .document(id_amigo)
---                        .collection("chat")
---                        .document("${documentReference.id}")
---                        .set(chat)
---
---                }
---                .addOnFailureListener { e ->
---                    Log.w(ContentValues.TAG, "Error adding document", e)
---                }*/
---
--         }
-- 
--         // Log Out Button
--@@ -174,6 +136,32 @@
--         setupActionBarWithNavController(navController, appBarConfiguration)
--         navView.setupWithNavController(navController)
-- 
--+        /*FirebaseMessaging.getInstance().token.addOnCompleteListener(OnCompleteListener { task ->
--+            if (!task.isSuccessful) {
--+                Log.w(ContentValues.TAG, "Fetching FCM registration token failed", task.exception)
--+                return@OnCompleteListener
--+            }
--+
--+            // Get new FCM registration token
--+            var fcmToken = task.result
--+
--+            // Log and toast
--+            Log.d(ContentValues.TAG, "O FCM é $fcmToken")
--+            Toast.makeText(this, "O FCM é $fcmToken", Toast.LENGTH_SHORT).show()
--+        })
--+
--+        db.collection("profile").document(Firebase.auth.currentUser!!.uid).collection("tokens")
--+            .add(message.toHash())
--+            .addOnSuccessListener { documentReference ->
--+                Log.d(ContentValues.TAG, "DocumentSnapshot added with ID: ${documentReference.id}")
--+
--+            }
--+            .addOnFailureListener { e ->
--+                Log.w(ContentValues.TAG, "Error adding document", e)
--+            }
--+
--+        binding.editTextMessage.text.clear()*/
--+
--     }
-- 
-- 
--Index: app/src/main/java/com/singularity/ipcaplus/utils/MyFirebaseMessagingService.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.singularity.ipcaplus.utils\r\n\r\nimport android.app.NotificationChannel\r\nimport android.app.NotificationManager\r\nimport android.app.PendingIntent\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.media.RingtoneManager\r\nimport android.os.Build\r\nimport android.util.Log\r\nimport androidx.core.app.NotificationCompat\r\nimport com.google.firebase.messaging.FirebaseMessagingService\r\nimport com.google.firebase.messaging.RemoteMessage\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.drawer.DrawerActivty\r\nimport java.lang.Exception\r\n\r\n\r\nclass MyFirebaseMessagingService : FirebaseMessagingService() {\r\n\r\n    override fun onMessageReceived(remoteMessage: RemoteMessage) {\r\n\r\n\r\n        // TODO(developer): Handle FCM messages here.\r\n        // Not getting messages here? See why this may be: https://goo.gl/39bRNJ\r\n        Log.d(TAG, \"From: ${remoteMessage.from}\")\r\n\r\n        // Check if message contains a data payload.\r\n        if (remoteMessage.data.isNotEmpty()) {\r\n            Log.d(TAG, \"Message data payload: ${remoteMessage.data}\")\r\n\r\n            if (/* Check if data needs to be processed by long running job */ true) {\r\n                // For long-running tasks (10 seconds or more) use WorkManager.\r\n                scheduleJob()\r\n            } else {\r\n                // Handle message within 10 seconds\r\n                handleNow()\r\n            }\r\n        }\r\n\r\n        // Check if message contains a notification payload.\r\n        remoteMessage.notification?.let {\r\n            Log.d(TAG, \"Message Notification Body: ${it.body}\")\r\n\r\n            it.body?.let { it1 ->\r\n                broadcastContentReady(applicationContext, it1)\r\n\r\n            }\r\n        }\r\n\r\n        // Also if you intend on generating your own notifications as a result of a received FCM\r\n        // message, here is where that should be initiated. See sendNotification method below.\r\n    }\r\n\r\n    fun broadcastContentReady(context: Context, message:String) {\r\n        val intent = Intent(BROADCAST_NEW_NOTIFICATION)\r\n        try {\r\n            intent.putExtra(NOTIFICATION_MESSAGE, message)\r\n            context.sendBroadcast(intent)\r\n        } catch (e: Exception) {\r\n            //Log Message\r\n        }\r\n    }\r\n\r\n\r\n    // [END receive_message]\r\n\r\n    // [START on_new_token]\r\n    /**\r\n     * Called if the FCM registration token is updated. This may occur if the security of\r\n     * the previous token had been compromised. Note that this is called when the\r\n     * FCM registration token is initially generated so this is where you would retrieve the token.\r\n     */\r\n    override fun onNewToken(token: String) {\r\n        Log.d(TAG, \"Refreshed token: $token\")\r\n\r\n        // If you want to send messages to this application instance or\r\n        // manage this apps subscriptions on the server side, send the\r\n        // FCM registration token to your app server.\r\n        sendRegistrationToServer(token)\r\n    }\r\n    // [END on_new_token]\r\n\r\n    /**\r\n     * Schedule async work using WorkManager.\r\n     */\r\n    private fun scheduleJob() {\r\n        // [START dispatch_job]\r\n        //val work = OneTimeWorkRequest.Builder(MyWorker::class.java).build()\r\n        //WorkManager.getInstance(this).beginWith(work).enqueue()\r\n        // [END dispatch_job]\r\n    }\r\n\r\n    /**\r\n     * Handle time allotted to BroadcastReceivers.\r\n     */\r\n    private fun handleNow() {\r\n        Log.d(TAG, \"Short lived task is done.\")\r\n    }\r\n\r\n    /**\r\n     * Persist token to third-party servers.\r\n     *\r\n     * Modify this method to associate the user's FCM registration token with any server-side account\r\n     * maintained by your application.\r\n     *\r\n     * @param token The new token.\r\n     */\r\n    private fun sendRegistrationToServer(token: String?) {\r\n        // TODO: Implement this method to send token to your app server.\r\n        Log.d(TAG, \"sendRegistrationTokenToServer($token)\")\r\n    }\r\n\r\n    /**\r\n     * Create and show a simple notification containing the received FCM message.\r\n     *\r\n     * @param messageBody FCM message body received.\r\n     */\r\n    private fun sendNotification(messageBody: String) {\r\n        val intent = Intent(this, DrawerActivty::class.java)\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)\r\n        val pendingIntent = PendingIntent.getActivity(this, 0 /* Request code */, intent,\r\n            PendingIntent.FLAG_ONE_SHOT)\r\n\r\n        val channelId = getString(R.string.default_notification_channel_id)\r\n        val defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION)\r\n        val notificationBuilder = NotificationCompat.Builder(this, channelId)\r\n            .setSmallIcon(R.drawable.ic_contact_icon)\r\n            .setContentTitle(\"IPCA+\")\r\n            .setContentText(messageBody)\r\n            .setAutoCancel(true)\r\n            .setSound(defaultSoundUri)\r\n            .setContentIntent(pendingIntent)\r\n\r\n        val notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager\r\n\r\n        // Since android Oreo notification channel is needed.\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            val channel = NotificationChannel(channelId,\r\n                \"Channel human readable title\",\r\n                NotificationManager.IMPORTANCE_DEFAULT)\r\n            notificationManager.createNotificationChannel(channel)\r\n        }\r\n\r\n        notificationManager.notify(0 /* ID of notification */, notificationBuilder.build())\r\n    }\r\n\r\n    companion object {\r\n\r\n        private const val TAG = \"MyFirebaseMsgService\"\r\n        const val BROADCAST_NEW_NOTIFICATION = \"ipca.example.photoshare.notification\"\r\n        const val NOTIFICATION_MESSAGE = \"ipca.example.photoshare.notification.message\"\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/singularity/ipcaplus/utils/MyFirebaseMessagingService.kt b/app/src/main/java/com/singularity/ipcaplus/utils/MyFirebaseMessagingService.kt
----- a/app/src/main/java/com/singularity/ipcaplus/utils/MyFirebaseMessagingService.kt	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ b/app/src/main/java/com/singularity/ipcaplus/utils/MyFirebaseMessagingService.kt	(date 1641251298185)
--@@ -1,154 +1,143 @@
-- package com.singularity.ipcaplus.utils
-- 
--+
--+import android.app.Notification
-- import android.app.NotificationChannel
-- import android.app.NotificationManager
-- import android.app.PendingIntent
---import android.content.Context
-- import android.content.Intent
-- import android.media.RingtoneManager
-- import android.os.Build
---import android.util.Log
--+import androidx.annotation.RequiresApi
-- import androidx.core.app.NotificationCompat
--+import androidx.core.content.res.ResourcesCompat
--+import com.google.firebase.database.FirebaseDatabase
--+import com.singularity.ipcaplus.AppConstants
--+import com.singularity.ipcaplus.R
--+import com.singularity.ipcaplus.drawer.DrawerActivty
-- import com.google.firebase.messaging.FirebaseMessagingService
-- import com.google.firebase.messaging.RemoteMessage
---import com.singularity.ipcaplus.R
---import com.singularity.ipcaplus.drawer.DrawerActivty
---import java.lang.Exception
--+import com.singularity.ipcaplus.utils.Utilis.getUID
--+import java.util.*
--+import kotlin.collections.HashMap
-- 
-- 
-- class MyFirebaseMessagingService : FirebaseMessagingService() {
--+    override fun onNewToken(token: String) {
--+        super.onNewToken(token)
--+        //updateToken(token)
--+    }
--+/*
-- 
--     override fun onMessageReceived(remoteMessage: RemoteMessage) {
---
--+        super.onMessageReceived(remoteMessage)
-- 
---        // TODO(developer): Handle FCM messages here.
---        // Not getting messages here? See why this may be: https://goo.gl/39bRNJ
---        Log.d(TAG, "From: ${remoteMessage.from}")
---
---        // Check if message contains a data payload.
--         if (remoteMessage.data.isNotEmpty()) {
---            Log.d(TAG, "Message data payload: ${remoteMessage.data}")
--+
--+            val map: Map<String, String> = remoteMessage.data
--+
--+            val title = map["title"]
--+            val message = map["message"]
--+            val hisId = map["hisId"]
--+            val hisImage = map["hisImage"]
--+            val chatId = map["chatId"]
--+
--+            if (Build.VERSION.SDK_INT > Build.VERSION_CODES.O)
--+                createOreoNotification(title!!, message!!, hisId!!, hisImage!!, chatId!!)
--+            else createNormalNotification(title!!, message!!, hisId!!, hisImage!!, chatId!!)
-- 
---            if (/* Check if data needs to be processed by long running job */ true) {
---                // For long-running tasks (10 seconds or more) use WorkManager.
---                scheduleJob()
---            } else {
---                // Handle message within 10 seconds
---                handleNow()
---            }
---        }
--+        }
--+
--+
--+    }
-- 
---        // Check if message contains a notification payload.
---        remoteMessage.notification?.let {
---            Log.d(TAG, "Message Notification Body: ${it.body}")
-- 
---            it.body?.let { it1 ->
---                broadcastContentReady(applicationContext, it1)
--+    private fun updateToken(token: String) {
-- 
---            }
---        }
--+        val databaseReference =
--+            FirebaseDatabase.getInstance().getReference("Users").child(getUID()!!)
--+        val map: MutableMap<String, Any> = HashMap()
--+        map["token"] = token
--+        databaseReference.updateChildren(map)
--+
--+    }
-- 
---        // Also if you intend on generating your own notifications as a result of a received FCM
---        // message, here is where that should be initiated. See sendNotification method below.
---    }
--+    private fun createNormalNotification(
--+        title: String,
--+        message: String,
--+        hisId: String,
--+        hisImage: String,
--+        chatId: String
--+    ) {
--+
--+        val uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION)
-- 
---    fun broadcastContentReady(context: Context, message:String) {
---        val intent = Intent(BROADCAST_NEW_NOTIFICATION)
---        try {
---            intent.putExtra(NOTIFICATION_MESSAGE, message)
---            context.sendBroadcast(intent)
---        } catch (e: Exception) {
---            //Log Message
---        }
---    }
--+        val builder = NotificationCompat.Builder(this, AppConstants.CHANNEL_ID)
--+        builder.setContentTitle(title)
--+            .setContentText(message)
--+            .setPriority(NotificationCompat.PRIORITY_HIGH)
--+            .setSmallIcon(R.drawable.ic_launcher_foreground)
--+            .setAutoCancel(true)
--+            .setColor(ResourcesCompat.getColor(resources, R.color.green_200, null))
--+            .setSound(uri)
-- 
--+        val intent = Intent(this, DrawerActivty::class.java)
-- 
---    // [END receive_message]
--+        intent.putExtra("hisId", hisId)
--+        intent.putExtra("hisImage", hisImage)
--+        intent.putExtra("chatId", chatId)
--+        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
-- 
---    // [START on_new_token]
---    /**
---     * Called if the FCM registration token is updated. This may occur if the security of
---     * the previous token had been compromised. Note that this is called when the
---     * FCM registration token is initially generated so this is where you would retrieve the token.
---     */
---    override fun onNewToken(token: String) {
---        Log.d(TAG, "Refreshed token: $token")
--+        val pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_ONE_SHOT)
--+        builder.setContentIntent(pendingIntent)
--+        val manager = getSystemService(NOTIFICATION_SERVICE) as NotificationManager
--+        manager.notify(Random().nextInt(85 - 65), builder.build())
-- 
---        // If you want to send messages to this application instance or
---        // manage this apps subscriptions on the server side, send the
---        // FCM registration token to your app server.
---        sendRegistrationToServer(token)
--     }
---    // [END on_new_token]
-- 
---    /**
---     * Schedule async work using WorkManager.
---     */
---    private fun scheduleJob() {
---        // [START dispatch_job]
---        //val work = OneTimeWorkRequest.Builder(MyWorker::class.java).build()
---        //WorkManager.getInstance(this).beginWith(work).enqueue()
---        // [END dispatch_job]
---    }
--+    @RequiresApi(Build.VERSION_CODES.O)
--+    private fun createOreoNotification(
--+        title: String,
--+        message: String,
--+        hisId: String,
--+        hisImage: String,
--+        chatId: String
--+    ) {
--+
--+        val channel = NotificationChannel(
--+            AppConstants.CHANNEL_ID,
--+            "Message",
--+            NotificationManager.IMPORTANCE_HIGH
--+        )
-- 
---    /**
---     * Handle time allotted to BroadcastReceivers.
---     */
---    private fun handleNow() {
---        Log.d(TAG, "Short lived task is done.")
---    }
--+        channel.setShowBadge(true)
--+        channel.enableLights(true)
--+        channel.enableVibration(true)
--+        channel.lockscreenVisibility = Notification.VISIBILITY_PRIVATE
-- 
---    /**
---     * Persist token to third-party servers.
---     *
---     * Modify this method to associate the user's FCM registration token with any server-side account
---     * maintained by your application.
---     *
---     * @param token The new token.
---     */
---    private fun sendRegistrationToServer(token: String?) {
---        // TODO: Implement this method to send token to your app server.
---        Log.d(TAG, "sendRegistrationTokenToServer($token)")
---    }
--+        val manager = getSystemService(NOTIFICATION_SERVICE) as NotificationManager
--+        manager.createNotificationChannel(channel)
-- 
---    /**
---     * Create and show a simple notification containing the received FCM message.
---     *
---     * @param messageBody FCM message body received.
---     */
---    private fun sendNotification(messageBody: String) {
--         val intent = Intent(this, DrawerActivty::class.java)
--+
--+        intent.putExtra("hisId", hisId)
--+        intent.putExtra("hisImage", hisImage)
--+        intent.putExtra("chatId", chatId)
--         intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
---        val pendingIntent = PendingIntent.getActivity(this, 0 /* Request code */, intent,
---            PendingIntent.FLAG_ONE_SHOT)
-- 
---        val channelId = getString(R.string.default_notification_channel_id)
---        val defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION)
---        val notificationBuilder = NotificationCompat.Builder(this, channelId)
---            .setSmallIcon(R.drawable.ic_contact_icon)
---            .setContentTitle("IPCA+")
---            .setContentText(messageBody)
--+        val pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_ONE_SHOT)
--+
--+        val notification = Notification.Builder(this, AppConstants.CHANNEL_ID)
--+            .setContentTitle(title)
--+            .setContentText(message)
--+            .setSmallIcon(R.drawable.ic_launcher_foreground)
--             .setAutoCancel(true)
---            .setSound(defaultSoundUri)
--+            .setColor(ResourcesCompat.getColor(resources, R.color.green_200, null))
--             .setContentIntent(pendingIntent)
---
---        val notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
--+            .build()
-- 
---        // Since android Oreo notification channel is needed.
---        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
---            val channel = NotificationChannel(channelId,
---                "Channel human readable title",
---                NotificationManager.IMPORTANCE_DEFAULT)
---            notificationManager.createNotificationChannel(channel)
---        }
--+        manager.notify(100, notification)
--+    }*/
-- 
---        notificationManager.notify(0 /* ID of notification */, notificationBuilder.build())
---    }
-- 
---    companion object {
---
---        private const val TAG = "MyFirebaseMsgService"
---        const val BROADCAST_NEW_NOTIFICATION = "ipca.example.photoshare.notification"
---        const val NOTIFICATION_MESSAGE = "ipca.example.photoshare.notification.message"
---    }
-- }
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_7_10_PM__Default_Changelist_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_7_10_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_7_10_PM__Default_Changelist_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_7_10_PM__Default_Changelist_.xml	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_12_28_2021_7_10_PM_[Default_Changelist]" date="1640718736244" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_7_10_PM_[Default_Changelist]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/28/2021 7:10 PM [Default Changelist]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM_[Default_Changelist]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM_[Default_Changelist]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM_[Default_Changelist]/shelved.patch	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,115 +0,0 @@
---Index: app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.SharedPreferences\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.WindowManager\r\nimport android.widget.ImageView\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.PreferenceHelper.email\r\nimport com.singularity.ipcaplus.PreferenceHelper.password\r\nimport com.singularity.ipcaplus.PreferenceHelper.userId\r\nimport com.singularity.ipcaplus.calendar.AddEventActivity\r\nimport com.singularity.ipcaplus.databinding.ActivityDrawerActivtyBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.profile.ProfileActivity\r\nimport java.util.concurrent.TimeUnit\r\nimport kotlin.random.Random\r\n\r\n\r\nclass DrawerActivty : AppCompatActivity() {\r\n\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var binding: ActivityDrawerActivtyBinding\r\n\r\n    val db = Firebase.firestore\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityDrawerActivtyBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile).setOnClickListener {\r\n\r\n            val intent = Intent(this, ProfileActivity::class.java)\r\n            startActivity(intent)\r\n\r\n        }\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n        window.setFlags(\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n\r\n        binding.appBarMain.fabAddChat.setOnClickListener { view ->\r\n            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show()\r\n        }\r\n        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        val stampCurrent = System.currentTimeMillis()\r\n        val stampSec = TimeUnit.MILLISECONDS.toSeconds(stampCurrent)\r\n        val stampNano = TimeUnit.MILLISECONDS.toNanos(stampCurrent).toInt()\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.nav_home\r\n            ), drawerLayout\r\n        )\r\n\r\n        // Criação de Chat\r\n        binding.appBarMain.fabAddChat.setOnClickListener {\r\n            val chat = Chat(\r\n                \"Chat Teste \" + Random.nextInt(256),\r\n                \"chat\"\r\n\r\n            )\r\n            val message = Message(\r\n                \"system\",\r\n                \"This is an Alpha Chat, bugs are expected, please report them if you found some. Welcome to Singularity!\",\r\n                \"2021-12-22\",\r\n                Timestamp.now(),\r\n                \"\"\r\n\r\n            )\r\n            db.collection(\"chat\")\r\n                .add(chat.toHash())\r\n                .addOnSuccessListener { documentReference ->\r\n                    db.collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .collection(\"message\")\r\n                        .add(message.toHash())\r\n                    db.collection(\"profile\")\r\n                        .document(\"${Firebase.auth.currentUser!!.uid}\")\r\n                        .collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .set(chat)\r\n\r\n                }\r\n                .addOnFailureListener { e ->\r\n                    Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                }\r\n\r\n        }\r\n\r\n        // Log Out Button\r\n        binding.logoutLayout.setOnClickListener {\r\n\r\n            val prefs = PreferenceHelper.customPreference(this, \"User_data\")\r\n            prefs.password = null\r\n            prefs.email = null\r\n            prefs.userId = null\r\n\r\n            val intent = Intent(this, WelcomeActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n\r\n        // Passing each fragment ID as a set of Ids\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        menuInflater.inflate(R.menu.drawer, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
------ a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(revision 94adac9c4d1446b5b44892110de1ee705a5ef903)
---+++ b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(date 1640607043249)
---@@ -130,6 +130,7 @@
---         setupActionBarWithNavController(navController, appBarConfiguration)
---         navView.setupWithNavController(navController)
--- 
---+
---     }
--- 
---     override fun onCreateOptionsMenu(menu: Menu): Boolean {
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch
---new file mode 100644
------ /dev/null	(date 1640603575056)
---+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch	(date 1640603575056)
---@@ -0,0 +1,47 @@
---+Index: app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---+IDEA additional info:
---+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport java.util.Base64\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.WindowManager\r\nimport android.widget.ImageView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.calendar.AddEventActivity\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityDrawerActivtyBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.profile.ProfileActivity\r\nimport java.lang.StringBuilder\r\nimport java.util.Base64.getEncoder\r\nimport java.util.concurrent.TimeUnit\r\nimport javax.crypto.KeyGenerator\r\nimport javax.crypto.SecretKey\r\nimport kotlin.random.Random\r\n\r\n\r\nclass DrawerActivty : AppCompatActivity() {\r\n\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var binding: ActivityDrawerActivtyBinding\r\n\r\n    val db = Firebase.firestore\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityDrawerActivtyBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile).setOnClickListener {\r\n\r\n            val intent = Intent(this, ProfileActivity::class.java)\r\n            startActivity(intent)\r\n\r\n        }\r\n\r\n        //val secretKey: String = \"662ede816988e58fb6d057d9d85605e0\"\r\n\r\n        /*val message = \"Hello Welcome to Solanium Dr.Diogo\"\r\n        var meta = encryptMeta(message, keygen)\r\n        println(meta)\r\n\r\n        val message_decripted = decryptWithAESmeta(keygen, meta)\r\n        println(message_decripted)*/\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n        window.setFlags(\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n\r\n        binding.appBarMain.fabAddChat.setOnClickListener { view ->\r\n            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show()\r\n        }\r\n        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        val stampCurrent = System.currentTimeMillis()\r\n        val stampSec = TimeUnit.MILLISECONDS.toSeconds(stampCurrent)\r\n        val stampNano = TimeUnit.MILLISECONDS.toNanos(stampCurrent).toInt()\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.nav_home\r\n            ), drawerLayout\r\n        )\r\n\r\n        // Criação de Chat\r\n        binding.appBarMain.fabAddChat.setOnClickListener {\r\n\r\n            /*val keygen = metaGenrateKey()\r\n\r\n            val intent = Intent(this, ChatActivity::class.java)\r\n            intent.putExtra(\"keygen\", keygen)\r\n            startActivity(intent)*/\r\n\r\n            val chat = Chat(\r\n                \"Chat Teste \" + Random.nextInt(256),\r\n                \"chat\"\r\n            )\r\n\r\n            var meta = encryptMeta(\"This is an Alpha Chat, bugs are expected, please report them if you found some. Welcome to Singularity!\", \"662ede816988e58fb6d057d9d85605e0\")\r\n            val message = Message(\r\n                \"system\",\r\n                meta.toString(),\r\n                \"2021-12-22\",\r\n                Timestamp.now(),\r\n                \"\"\r\n\r\n            )\r\n            db.collection(\"chat\")\r\n                .add(chat.toHash())\r\n                .addOnSuccessListener { documentReference ->\r\n                    db.collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .collection(\"message\")\r\n                        .add(message.toHash())\r\n                    db.collection(\"profile\")\r\n                        .document(\"${Firebase.auth.currentUser!!.uid}\")\r\n                        .collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .set(chat)\r\n\r\n                }\r\n                .addOnFailureListener { e ->\r\n                    Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                }\r\n\r\n        }\r\n        // Passing each fragment ID as a set of Ids\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        menuInflater.inflate(R.menu.drawer, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n}
---+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+<+>UTF-8
---+===================================================================
---+diff --git a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---+--- a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(revision db6f0662753bfe0d8d9a8102dae42e6ff910c141)
---++++ b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(date 1640484576403)
---+@@ -31,11 +31,8 @@
---+ import com.singularity.ipcaplus.models.Chat
---+ import com.singularity.ipcaplus.models.Message
---+ import com.singularity.ipcaplus.profile.ProfileActivity
---+-import java.lang.StringBuilder
---+-import java.util.Base64.getEncoder
---+ import java.util.concurrent.TimeUnit
---+ import javax.crypto.KeyGenerator
---+-import javax.crypto.SecretKey
---+ import kotlin.random.Random
---+ 
---+ 
---+Index: .idea/deploymentTargetDropDown.xml
---+IDEA additional info:
---+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\diogo\\.android\\avd\\Pixel_5_API_27.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2021-12-20T17:50:43.965935700Z\" />\r\n  </component>\r\n</project>
---+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+<+>UTF-8
---+===================================================================
---+diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
---+--- a/.idea/deploymentTargetDropDown.xml	(revision db6f0662753bfe0d8d9a8102dae42e6ff910c141)
---++++ b/.idea/deploymentTargetDropDown.xml	(date 1640484631324)
---+@@ -7,11 +7,11 @@
---+         <deviceKey>
---+           <Key>
---+             <type value="VIRTUAL_DEVICE_PATH" />
---+-            <value value="C:\Users\diogo\.android\avd\Pixel_5_API_27.avd" />
---++            <value value="C:\Users\diogo\.android\avd\Pixel_3_API_27.avd" />
---+           </Key>
---+         </deviceKey>
---+       </Target>
---+     </targetSelectedWithDropDown>
---+-    <timeTargetWasSelectedWithDropDown value="2021-12-20T17:50:43.965935700Z" />
---++    <timeTargetWasSelectedWithDropDown value="2021-12-26T02:10:29.711791600Z" />
---+   </component>
---+ </project>
---+\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml
---new file mode 100644
------ /dev/null	(date 1640603694749)
---+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml	(date 1640603694749)
---@@ -0,0 +1,4 @@
---+<changelist name="Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]" date="1640603683316" recycled="true" deleted="true">
---+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch" />
---+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/27/2021 11:12 AM [Default Changelist]" />
---+</changelist>
---\ No newline at end of file
---Index: .idea/deploymentTargetDropDown.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\diogo\\.android\\avd\\Pixel_5_API_27.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2021-12-20T17:50:43.965935700Z\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
------ a/.idea/deploymentTargetDropDown.xml	(revision 94adac9c4d1446b5b44892110de1ee705a5ef903)
---+++ b/.idea/deploymentTargetDropDown.xml	(date 1640603683277)
---@@ -7,11 +7,11 @@
---         <deviceKey>
---           <Key>
---             <type value="VIRTUAL_DEVICE_PATH" />
----            <value value="C:\Users\diogo\.android\avd\Pixel_5_API_27.avd" />
---+            <value value="C:\Users\diogo\.android\avd\Pixel_3_API_27.avd" />
---           </Key>
---         </deviceKey>
---       </Target>
---     </targetSelectedWithDropDown>
----    <timeTargetWasSelectedWithDropDown value="2021-12-20T17:50:43.965935700Z" />
---+    <timeTargetWasSelectedWithDropDown value="2021-12-26T02:10:29.711791600Z" />
---   </component>
--- </project>
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_3_06_PM__Default_Changelist_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_3_06_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_3_06_PM__Default_Changelist_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_3_06_PM__Default_Changelist_.xml	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_12_27_2021_3_06_PM_[Default_Changelist]" date="1640617599712" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_3_06_PM_[Default_Changelist]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/27/2021 3:06 PM [Default Changelist]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_11_PM_[Default_Changelist]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_11_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_11_PM_[Default_Changelist]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_11_PM_[Default_Changelist]/shelved.patch	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,255 +0,0 @@
---Index: app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.SharedPreferences\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.WindowManager\r\nimport android.widget.ImageView\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.PreferenceHelper.email\r\nimport com.singularity.ipcaplus.PreferenceHelper.password\r\nimport com.singularity.ipcaplus.PreferenceHelper.userId\r\nimport com.singularity.ipcaplus.calendar.AddEventActivity\r\nimport com.singularity.ipcaplus.databinding.ActivityDrawerActivtyBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.profile.ProfileActivity\r\nimport java.util.concurrent.TimeUnit\r\nimport kotlin.random.Random\r\n\r\n\r\nclass DrawerActivty : AppCompatActivity() {\r\n\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var binding: ActivityDrawerActivtyBinding\r\n\r\n    val db = Firebase.firestore\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityDrawerActivtyBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile).setOnClickListener {\r\n\r\n            val intent = Intent(this, ProfileActivity::class.java)\r\n            startActivity(intent)\r\n\r\n        }\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n        window.setFlags(\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n\r\n        binding.appBarMain.fabAddChat.setOnClickListener { view ->\r\n            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show()\r\n        }\r\n        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        val stampCurrent = System.currentTimeMillis()\r\n        val stampSec = TimeUnit.MILLISECONDS.toSeconds(stampCurrent)\r\n        val stampNano = TimeUnit.MILLISECONDS.toNanos(stampCurrent).toInt()\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.nav_home\r\n            ), drawerLayout\r\n        )\r\n\r\n        // Criação de Chat\r\n        binding.appBarMain.fabAddChat.setOnClickListener {\r\n            val chat = Chat(\r\n                \"Chat Teste \" + Random.nextInt(256),\r\n                \"chat\"\r\n\r\n            )\r\n            val message = Message(\r\n                \"system\",\r\n                \"This is an Alpha Chat, bugs are expected, please report them if you found some. Welcome to Singularity!\",\r\n                \"2021-12-22\",\r\n                Timestamp.now(),\r\n                \"\"\r\n\r\n            )\r\n            db.collection(\"chat\")\r\n                .add(chat.toHash())\r\n                .addOnSuccessListener { documentReference ->\r\n                    db.collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .collection(\"message\")\r\n                        .add(message.toHash())\r\n                    db.collection(\"profile\")\r\n                        .document(\"${Firebase.auth.currentUser!!.uid}\")\r\n                        .collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .set(chat)\r\n\r\n                }\r\n                .addOnFailureListener { e ->\r\n                    Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                }\r\n\r\n        }\r\n\r\n        // Log Out Button\r\n        binding.logoutLayout.setOnClickListener {\r\n\r\n            val prefs = PreferenceHelper.customPreference(this, \"User_data\")\r\n            prefs.password = null\r\n            prefs.email = null\r\n            prefs.userId = null\r\n\r\n            val intent = Intent(this, WelcomeActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n\r\n        // Passing each fragment ID as a set of Ids\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        menuInflater.inflate(R.menu.drawer, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
------ a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(revision 8dc1056a94ce651214eaf46bac161cbcb2a45bf0)
---+++ b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(date 1640607045782)
---@@ -130,6 +130,7 @@
---         setupActionBarWithNavController(navController, appBarConfiguration)
---         navView.setupWithNavController(navController)
--- 
---+
---     }
--- 
---     override fun onCreateOptionsMenu(menu: Menu): Boolean {
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM__Default_Changelist_.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM__Default_Changelist_.xml
---new file mode 100644
------ /dev/null	(date 1640607060734)
---+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM__Default_Changelist_.xml	(date 1640607060734)
---@@ -0,0 +1,4 @@
---+<changelist name="Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM_[Default_Changelist]" date="1640607045965" recycled="true" deleted="true">
---+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM_[Default_Changelist]/shelved.patch" />
---+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/27/2021 12:10 PM [Default Changelist]" />
---+</changelist>
---\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml
---new file mode 100644
------ /dev/null	(date 1640607060741)
---+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml	(date 1640607060741)
---@@ -0,0 +1,4 @@
---+<changelist name="Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]" date="1640603683316" recycled="true" deleted="true">
---+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch" />
---+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/27/2021 11:12 AM [Default Changelist]" />
---+</changelist>
---\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch
---new file mode 100644
------ /dev/null	(date 1640607045791)
---+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch	(date 1640607045791)
---@@ -0,0 +1,47 @@
---+Index: app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---+IDEA additional info:
---+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport java.util.Base64\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.WindowManager\r\nimport android.widget.ImageView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.calendar.AddEventActivity\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityDrawerActivtyBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.profile.ProfileActivity\r\nimport java.lang.StringBuilder\r\nimport java.util.Base64.getEncoder\r\nimport java.util.concurrent.TimeUnit\r\nimport javax.crypto.KeyGenerator\r\nimport javax.crypto.SecretKey\r\nimport kotlin.random.Random\r\n\r\n\r\nclass DrawerActivty : AppCompatActivity() {\r\n\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var binding: ActivityDrawerActivtyBinding\r\n\r\n    val db = Firebase.firestore\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityDrawerActivtyBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile).setOnClickListener {\r\n\r\n            val intent = Intent(this, ProfileActivity::class.java)\r\n            startActivity(intent)\r\n\r\n        }\r\n\r\n        //val secretKey: String = \"662ede816988e58fb6d057d9d85605e0\"\r\n\r\n        /*val message = \"Hello Welcome to Solanium Dr.Diogo\"\r\n        var meta = encryptMeta(message, keygen)\r\n        println(meta)\r\n\r\n        val message_decripted = decryptWithAESmeta(keygen, meta)\r\n        println(message_decripted)*/\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n        window.setFlags(\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n\r\n        binding.appBarMain.fabAddChat.setOnClickListener { view ->\r\n            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show()\r\n        }\r\n        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        val stampCurrent = System.currentTimeMillis()\r\n        val stampSec = TimeUnit.MILLISECONDS.toSeconds(stampCurrent)\r\n        val stampNano = TimeUnit.MILLISECONDS.toNanos(stampCurrent).toInt()\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.nav_home\r\n            ), drawerLayout\r\n        )\r\n\r\n        // Criação de Chat\r\n        binding.appBarMain.fabAddChat.setOnClickListener {\r\n\r\n            /*val keygen = metaGenrateKey()\r\n\r\n            val intent = Intent(this, ChatActivity::class.java)\r\n            intent.putExtra(\"keygen\", keygen)\r\n            startActivity(intent)*/\r\n\r\n            val chat = Chat(\r\n                \"Chat Teste \" + Random.nextInt(256),\r\n                \"chat\"\r\n            )\r\n\r\n            var meta = encryptMeta(\"This is an Alpha Chat, bugs are expected, please report them if you found some. Welcome to Singularity!\", \"662ede816988e58fb6d057d9d85605e0\")\r\n            val message = Message(\r\n                \"system\",\r\n                meta.toString(),\r\n                \"2021-12-22\",\r\n                Timestamp.now(),\r\n                \"\"\r\n\r\n            )\r\n            db.collection(\"chat\")\r\n                .add(chat.toHash())\r\n                .addOnSuccessListener { documentReference ->\r\n                    db.collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .collection(\"message\")\r\n                        .add(message.toHash())\r\n                    db.collection(\"profile\")\r\n                        .document(\"${Firebase.auth.currentUser!!.uid}\")\r\n                        .collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .set(chat)\r\n\r\n                }\r\n                .addOnFailureListener { e ->\r\n                    Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                }\r\n\r\n        }\r\n        // Passing each fragment ID as a set of Ids\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        menuInflater.inflate(R.menu.drawer, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n}
---+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+<+>UTF-8
---+===================================================================
---+diff --git a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---+--- a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(revision db6f0662753bfe0d8d9a8102dae42e6ff910c141)
---++++ b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(date 1640484576403)
---+@@ -31,11 +31,8 @@
---+ import com.singularity.ipcaplus.models.Chat
---+ import com.singularity.ipcaplus.models.Message
---+ import com.singularity.ipcaplus.profile.ProfileActivity
---+-import java.lang.StringBuilder
---+-import java.util.Base64.getEncoder
---+ import java.util.concurrent.TimeUnit
---+ import javax.crypto.KeyGenerator
---+-import javax.crypto.SecretKey
---+ import kotlin.random.Random
---+ 
---+ 
---+Index: .idea/deploymentTargetDropDown.xml
---+IDEA additional info:
---+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\diogo\\.android\\avd\\Pixel_5_API_27.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2021-12-20T17:50:43.965935700Z\" />\r\n  </component>\r\n</project>
---+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+<+>UTF-8
---+===================================================================
---+diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
---+--- a/.idea/deploymentTargetDropDown.xml	(revision db6f0662753bfe0d8d9a8102dae42e6ff910c141)
---++++ b/.idea/deploymentTargetDropDown.xml	(date 1640484631324)
---+@@ -7,11 +7,11 @@
---+         <deviceKey>
---+           <Key>
---+             <type value="VIRTUAL_DEVICE_PATH" />
---+-            <value value="C:\Users\diogo\.android\avd\Pixel_5_API_27.avd" />
---++            <value value="C:\Users\diogo\.android\avd\Pixel_3_API_27.avd" />
---+           </Key>
---+         </deviceKey>
---+       </Target>
---+     </targetSelectedWithDropDown>
---+-    <timeTargetWasSelectedWithDropDown value="2021-12-20T17:50:43.965935700Z" />
---++    <timeTargetWasSelectedWithDropDown value="2021-12-26T02:10:29.711791600Z" />
---+   </component>
---+ </project>
---+\ No newline at end of file
---Index: .idea/deploymentTargetDropDown.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\diogo\\.android\\avd\\Pixel_5_API_27.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2021-12-20T17:50:43.965935700Z\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
------ a/.idea/deploymentTargetDropDown.xml	(revision 8dc1056a94ce651214eaf46bac161cbcb2a45bf0)
---+++ b/.idea/deploymentTargetDropDown.xml	(date 1640607045802)
---@@ -7,11 +7,11 @@
---         <deviceKey>
---           <Key>
---             <type value="VIRTUAL_DEVICE_PATH" />
----            <value value="C:\Users\diogo\.android\avd\Pixel_5_API_27.avd" />
---+            <value value="C:\Users\diogo\.android\avd\Pixel_3_API_27.avd" />
---           </Key>
---         </deviceKey>
---       </Target>
---     </targetSelectedWithDropDown>
----    <timeTargetWasSelectedWithDropDown value="2021-12-20T17:50:43.965935700Z" />
---+    <timeTargetWasSelectedWithDropDown value="2021-12-26T02:10:29.711791600Z" />
---   </component>
--- </project>
---\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM_[Default_Changelist]/shelved.patch
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM_[Default_Changelist]/shelved.patch
---new file mode 100644
------ /dev/null	(date 1640607045101)
---+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_12_10_PM_[Default_Changelist]/shelved.patch	(date 1640607045101)
---@@ -0,0 +1,115 @@
---+Index: app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---+IDEA additional info:
---+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.SharedPreferences\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.WindowManager\r\nimport android.widget.ImageView\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.PreferenceHelper.email\r\nimport com.singularity.ipcaplus.PreferenceHelper.password\r\nimport com.singularity.ipcaplus.PreferenceHelper.userId\r\nimport com.singularity.ipcaplus.calendar.AddEventActivity\r\nimport com.singularity.ipcaplus.databinding.ActivityDrawerActivtyBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.profile.ProfileActivity\r\nimport java.util.concurrent.TimeUnit\r\nimport kotlin.random.Random\r\n\r\n\r\nclass DrawerActivty : AppCompatActivity() {\r\n\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var binding: ActivityDrawerActivtyBinding\r\n\r\n    val db = Firebase.firestore\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityDrawerActivtyBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile).setOnClickListener {\r\n\r\n            val intent = Intent(this, ProfileActivity::class.java)\r\n            startActivity(intent)\r\n\r\n        }\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n        window.setFlags(\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n\r\n        binding.appBarMain.fabAddChat.setOnClickListener { view ->\r\n            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show()\r\n        }\r\n        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        val stampCurrent = System.currentTimeMillis()\r\n        val stampSec = TimeUnit.MILLISECONDS.toSeconds(stampCurrent)\r\n        val stampNano = TimeUnit.MILLISECONDS.toNanos(stampCurrent).toInt()\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.nav_home\r\n            ), drawerLayout\r\n        )\r\n\r\n        // Criação de Chat\r\n        binding.appBarMain.fabAddChat.setOnClickListener {\r\n            val chat = Chat(\r\n                \"Chat Teste \" + Random.nextInt(256),\r\n                \"chat\"\r\n\r\n            )\r\n            val message = Message(\r\n                \"system\",\r\n                \"This is an Alpha Chat, bugs are expected, please report them if you found some. Welcome to Singularity!\",\r\n                \"2021-12-22\",\r\n                Timestamp.now(),\r\n                \"\"\r\n\r\n            )\r\n            db.collection(\"chat\")\r\n                .add(chat.toHash())\r\n                .addOnSuccessListener { documentReference ->\r\n                    db.collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .collection(\"message\")\r\n                        .add(message.toHash())\r\n                    db.collection(\"profile\")\r\n                        .document(\"${Firebase.auth.currentUser!!.uid}\")\r\n                        .collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .set(chat)\r\n\r\n                }\r\n                .addOnFailureListener { e ->\r\n                    Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                }\r\n\r\n        }\r\n\r\n        // Log Out Button\r\n        binding.logoutLayout.setOnClickListener {\r\n\r\n            val prefs = PreferenceHelper.customPreference(this, \"User_data\")\r\n            prefs.password = null\r\n            prefs.email = null\r\n            prefs.userId = null\r\n\r\n            val intent = Intent(this, WelcomeActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n\r\n        // Passing each fragment ID as a set of Ids\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        menuInflater.inflate(R.menu.drawer, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n}
---+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+<+>UTF-8
---+===================================================================
---+diff --git a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---+--- a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(revision 94adac9c4d1446b5b44892110de1ee705a5ef903)
---++++ b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(date 1640607043249)
---+@@ -130,6 +130,7 @@
---+         setupActionBarWithNavController(navController, appBarConfiguration)
---+         navView.setupWithNavController(navController)
---+ 
---++
---+     }
---+ 
---+     override fun onCreateOptionsMenu(menu: Menu): Boolean {
---+Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch
---+IDEA additional info:
---+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+<+>UTF-8
---+===================================================================
---+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch
---+new file mode 100644
---+--- /dev/null	(date 1640603575056)
---++++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch	(date 1640603575056)
---+@@ -0,0 +1,47 @@
---++Index: app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---++IDEA additional info:
---++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---++<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport java.util.Base64\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.WindowManager\r\nimport android.widget.ImageView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.calendar.AddEventActivity\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityDrawerActivtyBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.profile.ProfileActivity\r\nimport java.lang.StringBuilder\r\nimport java.util.Base64.getEncoder\r\nimport java.util.concurrent.TimeUnit\r\nimport javax.crypto.KeyGenerator\r\nimport javax.crypto.SecretKey\r\nimport kotlin.random.Random\r\n\r\n\r\nclass DrawerActivty : AppCompatActivity() {\r\n\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var binding: ActivityDrawerActivtyBinding\r\n\r\n    val db = Firebase.firestore\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityDrawerActivtyBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile).setOnClickListener {\r\n\r\n            val intent = Intent(this, ProfileActivity::class.java)\r\n            startActivity(intent)\r\n\r\n        }\r\n\r\n        //val secretKey: String = \"662ede816988e58fb6d057d9d85605e0\"\r\n\r\n        /*val message = \"Hello Welcome to Solanium Dr.Diogo\"\r\n        var meta = encryptMeta(message, keygen)\r\n        println(meta)\r\n\r\n        val message_decripted = decryptWithAESmeta(keygen, meta)\r\n        println(message_decripted)*/\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n        window.setFlags(\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n\r\n        binding.appBarMain.fabAddChat.setOnClickListener { view ->\r\n            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show()\r\n        }\r\n        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        val stampCurrent = System.currentTimeMillis()\r\n        val stampSec = TimeUnit.MILLISECONDS.toSeconds(stampCurrent)\r\n        val stampNano = TimeUnit.MILLISECONDS.toNanos(stampCurrent).toInt()\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.nav_home\r\n            ), drawerLayout\r\n        )\r\n\r\n        // Criação de Chat\r\n        binding.appBarMain.fabAddChat.setOnClickListener {\r\n\r\n            /*val keygen = metaGenrateKey()\r\n\r\n            val intent = Intent(this, ChatActivity::class.java)\r\n            intent.putExtra(\"keygen\", keygen)\r\n            startActivity(intent)*/\r\n\r\n            val chat = Chat(\r\n                \"Chat Teste \" + Random.nextInt(256),\r\n                \"chat\"\r\n            )\r\n\r\n            var meta = encryptMeta(\"This is an Alpha Chat, bugs are expected, please report them if you found some. Welcome to Singularity!\", \"662ede816988e58fb6d057d9d85605e0\")\r\n            val message = Message(\r\n                \"system\",\r\n                meta.toString(),\r\n                \"2021-12-22\",\r\n                Timestamp.now(),\r\n                \"\"\r\n\r\n            )\r\n            db.collection(\"chat\")\r\n                .add(chat.toHash())\r\n                .addOnSuccessListener { documentReference ->\r\n                    db.collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .collection(\"message\")\r\n                        .add(message.toHash())\r\n                    db.collection(\"profile\")\r\n                        .document(\"${Firebase.auth.currentUser!!.uid}\")\r\n                        .collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .set(chat)\r\n\r\n                }\r\n                .addOnFailureListener { e ->\r\n                    Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                }\r\n\r\n        }\r\n        // Passing each fragment ID as a set of Ids\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        menuInflater.inflate(R.menu.drawer, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n}
---++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---++<+>UTF-8
---++===================================================================
---++diff --git a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---++--- a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(revision db6f0662753bfe0d8d9a8102dae42e6ff910c141)
---+++++ b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(date 1640484576403)
---++@@ -31,11 +31,8 @@
---++ import com.singularity.ipcaplus.models.Chat
---++ import com.singularity.ipcaplus.models.Message
---++ import com.singularity.ipcaplus.profile.ProfileActivity
---++-import java.lang.StringBuilder
---++-import java.util.Base64.getEncoder
---++ import java.util.concurrent.TimeUnit
---++ import javax.crypto.KeyGenerator
---++-import javax.crypto.SecretKey
---++ import kotlin.random.Random
---++ 
---++ 
---++Index: .idea/deploymentTargetDropDown.xml
---++IDEA additional info:
---++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---++<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\diogo\\.android\\avd\\Pixel_5_API_27.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2021-12-20T17:50:43.965935700Z\" />\r\n  </component>\r\n</project>
---++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---++<+>UTF-8
---++===================================================================
---++diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
---++--- a/.idea/deploymentTargetDropDown.xml	(revision db6f0662753bfe0d8d9a8102dae42e6ff910c141)
---+++++ b/.idea/deploymentTargetDropDown.xml	(date 1640484631324)
---++@@ -7,11 +7,11 @@
---++         <deviceKey>
---++           <Key>
---++             <type value="VIRTUAL_DEVICE_PATH" />
---++-            <value value="C:\Users\diogo\.android\avd\Pixel_5_API_27.avd" />
---+++            <value value="C:\Users\diogo\.android\avd\Pixel_3_API_27.avd" />
---++           </Key>
---++         </deviceKey>
---++       </Target>
---++     </targetSelectedWithDropDown>
---++-    <timeTargetWasSelectedWithDropDown value="2021-12-20T17:50:43.965935700Z" />
---+++    <timeTargetWasSelectedWithDropDown value="2021-12-26T02:10:29.711791600Z" />
---++   </component>
---++ </project>
---++\ No newline at end of file
---+Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml
---+IDEA additional info:
---+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+<+>UTF-8
---+===================================================================
---+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml
---+new file mode 100644
---+--- /dev/null	(date 1640603694749)
---++++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM__Default_Changelist_.xml	(date 1640603694749)
---+@@ -0,0 +1,4 @@
---++<changelist name="Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]" date="1640603683316" recycled="true" deleted="true">
---++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch" />
---++  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/27/2021 11:12 AM [Default Changelist]" />
---++</changelist>
---+\ No newline at end of file
---+Index: .idea/deploymentTargetDropDown.xml
---+IDEA additional info:
---+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\diogo\\.android\\avd\\Pixel_5_API_27.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2021-12-20T17:50:43.965935700Z\" />\r\n  </component>\r\n</project>
---+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+<+>UTF-8
---+===================================================================
---+diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
---+--- a/.idea/deploymentTargetDropDown.xml	(revision 94adac9c4d1446b5b44892110de1ee705a5ef903)
---++++ b/.idea/deploymentTargetDropDown.xml	(date 1640603683277)
---+@@ -7,11 +7,11 @@
---+         <deviceKey>
---+           <Key>
---+             <type value="VIRTUAL_DEVICE_PATH" />
---+-            <value value="C:\Users\diogo\.android\avd\Pixel_5_API_27.avd" />
---++            <value value="C:\Users\diogo\.android\avd\Pixel_3_API_27.avd" />
---+           </Key>
---+         </deviceKey>
---+       </Target>
---+     </targetSelectedWithDropDown>
---+-    <timeTargetWasSelectedWithDropDown value="2021-12-20T17:50:43.965935700Z" />
---++    <timeTargetWasSelectedWithDropDown value="2021-12-26T02:10:29.711791600Z" />
---+   </component>
---+ </project>
---+\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_38_PM_[Default_Changelist]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_38_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_38_PM_[Default_Changelist]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_38_PM_[Default_Changelist]/shelved.patch	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,847 +0,0 @@
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch	(revision 50181113e496177729002181c2a2712e846b9ff2)
---+++ /dev/null	(revision 50181113e496177729002181c2a2712e846b9ff2)
---@@ -1,129 +0,0 @@
----Index: app/src/main/res/navigation/mobile_navigation.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarActivity\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/activity_calendar\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_contacts\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ContactsActivity\"\r\n        android:label=\"@string/contactos\"\r\n        tools:layout=\"@layout/activity_contacts\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_profile\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ProfileActivity\"\r\n        android:label=\"@string/perfil\"\r\n        tools:layout=\"@layout/activity_profile\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_schedule\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.ScheduleActivity\"\r\n        android:label=\"@string/horario\"\r\n        tools:layout=\"@layout/activity_schedule\"/>\r\n\r\n</navigation>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
------- a/app/src/main/res/navigation/mobile_navigation.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
----+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640207826371)
----@@ -47,4 +47,10 @@
----         android:label="@string/horario"
----         tools:layout="@layout/activity_schedule"/>
---- 
----+    <activity
----+        android:id="@+id/nav_news"
----+        android:name="com.singularity.ipcaplus.NewsWebActivity"
----+        android:label="News"
----+        tools:layout="@layout/activity_news_web"/>
----+
---- </navigation>
----\ No newline at end of file
----Index: app/src/main/res/layout/activity_schedule.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".calendar.ScheduleActivity\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:paddingVertical=\"10dp\">\r\n\r\n        <Button\r\n            android:id=\"@+id/button_seg\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Seg\"\r\n            android:textColor=\"@color/white\"\r\n            app:backgroundTint=\"@color/green_200\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_ter\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Ter\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qua\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qua\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qui\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qui\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_sex\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Sex\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerViewSchedule\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/layout/activity_schedule.xml b/app/src/main/res/layout/activity_schedule.xml
------- a/app/src/main/res/layout/activity_schedule.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
----+++ b/app/src/main/res/layout/activity_schedule.xml	(date 1640207826376)
----@@ -28,7 +28,7 @@
----             app:backgroundTint="@color/green_200"
----             app:layout_constraintEnd_toEndOf="parent"
----             app:layout_constraintStart_toStartOf="parent"
-----            app:layout_constraintTop_toTopOf="parent" />
----+            app:layout_constraintTop_toTopOf="parent"/>
---- 
----         <Button
----             android:id="@+id/button_ter"
----Index: app/src/main/AndroidManifest.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".calendar.ScheduleActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".TabActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/title_activity_tab\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
------- a/app/src/main/AndroidManifest.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
----+++ b/app/src/main/AndroidManifest.xml	(date 1640207826380)
----@@ -13,6 +13,9 @@
----             android:name=".calendar.ScheduleActivity"
----             android:exported="false" />
----         <activity
----+            android:name=".NewsWebActivity"
----+            android:exported="false" />
----+        <activity
----             android:name=".profile.ContactsActivity"
----             android:exported="false" />
----         <activity
----@@ -63,5 +66,8 @@
----             android:name="preloaded_fonts"
----             android:resource="@array/preloaded_fonts" />
----     </application>
----+    <uses-permission android:name="android.permission.INTERNET"/>
----+
----+
---- 
---- </manifest>
----\ No newline at end of file
----Index: .idea/misc.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2554347826086957\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/gradient_shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_video.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.26766304347826086\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/.idea/misc.xml b/.idea/misc.xml
------- a/.idea/misc.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
----+++ b/.idea/misc.xml	(date 1640207852743)
----@@ -3,9 +3,12 @@
----   <component name="DesignSurface">
----     <option name="filePathToZoomLevelMap">
----       <map>
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.23802083333333332" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml" value="0.23802083333333332" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml" value="0.3828125" />
----@@ -13,6 +16,7 @@
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml" value="0.2520833333333333" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml" value="0.3828125" />
----@@ -30,19 +34,26 @@
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml" value="0.33" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.36277173913043476" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml" value="0.36277173913043476" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.3546195652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml" value="0.33" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.358695652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml" value="0.7456647398843931" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.3546195652173913" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml" value="0.3546195652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml" value="0.36666666666666664" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.36666666666666664" />
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml" value="0.29074074074074074" />
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml" value="0.2953703703703704" />
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.3101851851851852" />
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml	(revision 50181113e496177729002181c2a2712e846b9ff2)
---+++ /dev/null	(revision 50181113e496177729002181c2a2712e846b9ff2)
---@@ -1,4 +0,0 @@
----<changelist name="Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]" date="1640201060341" recycled="true" deleted="true">
----  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch" />
----  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/22/2021 7:24 PM [Default Changelist]" />
----</changelist>
---\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml	(revision 50181113e496177729002181c2a2712e846b9ff2)
---+++ /dev/null	(revision 50181113e496177729002181c2a2712e846b9ff2)
---@@ -1,4 +0,0 @@
----<changelist name="Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]" date="1640207852780" recycled="true" deleted="true">
----  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch" />
----  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/22/2021 9:17 PM [Default Changelist]" />
----</changelist>
---\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch	(revision 50181113e496177729002181c2a2712e846b9ff2)
---+++ /dev/null	(revision 50181113e496177729002181c2a2712e846b9ff2)
---@@ -1,129 +0,0 @@
----Index: app/src/main/res/navigation/mobile_navigation.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarActivity\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/activity_calendar\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_contacts\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ContactsActivity\"\r\n        android:label=\"@string/contactos\"\r\n        tools:layout=\"@layout/activity_contacts\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_profile\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ProfileActivity\"\r\n        android:label=\"@string/perfil\"\r\n        tools:layout=\"@layout/activity_profile\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_schedule\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.ScheduleActivity\"\r\n        android:label=\"@string/horario\"\r\n        tools:layout=\"@layout/activity_schedule\"/>\r\n\r\n</navigation>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
------- a/app/src/main/res/navigation/mobile_navigation.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
----+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640201060311)
----@@ -47,4 +47,10 @@
----         android:label="@string/horario"
----         tools:layout="@layout/activity_schedule"/>
---- 
----+    <activity
----+        android:id="@+id/nav_news"
----+        android:name="com.singularity.ipcaplus.NewsWebActivity"
----+        android:label="News"
----+        tools:layout="@layout/activity_news_web"/>
----+
---- </navigation>
----\ No newline at end of file
----Index: app/src/main/res/layout/activity_schedule.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".calendar.ScheduleActivity\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:paddingVertical=\"10dp\">\r\n\r\n        <Button\r\n            android:id=\"@+id/button_seg\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Seg\"\r\n            android:textColor=\"@color/white\"\r\n            app:backgroundTint=\"@color/green_200\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_ter\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Ter\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qua\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qua\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qui\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qui\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_sex\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Sex\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerViewSchedule\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/layout/activity_schedule.xml b/app/src/main/res/layout/activity_schedule.xml
------- a/app/src/main/res/layout/activity_schedule.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
----+++ b/app/src/main/res/layout/activity_schedule.xml	(date 1640201359608)
----@@ -28,7 +28,7 @@
----             app:backgroundTint="@color/green_200"
----             app:layout_constraintEnd_toEndOf="parent"
----             app:layout_constraintStart_toStartOf="parent"
-----            app:layout_constraintTop_toTopOf="parent" />
----+            app:layout_constraintTop_toTopOf="parent"/>
---- 
----         <Button
----             android:id="@+id/button_ter"
----Index: app/src/main/AndroidManifest.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".calendar.ScheduleActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".TabActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/title_activity_tab\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
------- a/app/src/main/AndroidManifest.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
----+++ b/app/src/main/AndroidManifest.xml	(date 1640201881840)
----@@ -13,6 +13,9 @@
----             android:name=".calendar.ScheduleActivity"
----             android:exported="false" />
----         <activity
----+            android:name=".NewsWebActivity"
----+            android:exported="false" />
----+        <activity
----             android:name=".profile.ContactsActivity"
----             android:exported="false" />
----         <activity
----@@ -63,5 +66,8 @@
----             android:name="preloaded_fonts"
----             android:resource="@array/preloaded_fonts" />
----     </application>
----+    <uses-permission android:name="android.permission.INTERNET"/>
----+
----+
---- 
---- </manifest>
----\ No newline at end of file
----Index: .idea/misc.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_breaktime.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2554347826086957\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/.idea/misc.xml b/.idea/misc.xml
------- a/.idea/misc.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
----+++ b/.idea/misc.xml	(date 1640201362085)
----@@ -3,12 +3,9 @@
----   <component name="DesignSurface">
----     <option name="filePathToZoomLevelMap">
----       <map>
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml" value="0.3828125" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml" value="0.3828125" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.23802083333333332" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml" value="0.23802083333333332" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml" value="0.3828125" />
----@@ -40,7 +37,6 @@
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml" value="0.36277173913043476" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml" value="0.2359375" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.3546195652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml" value="0.2359375" />
----@@ -48,10 +44,7 @@
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml" value="0.33" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.358695652173913" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_breaktime.xml" value="0.3546195652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml" value="0.7456647398843931" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.3546195652173913" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml" value="0.3546195652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.36666666666666664" />
----@@ -70,10 +63,15 @@
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.17831813576494426" />
----         <entry key="..\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.25" />
----         <entry key="..\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.128125" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml" value="0.22135416666666666" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml" value="0.33" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.2980072463768116" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_login.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_news_web.xml" value="0.23333333333333334" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.36666666666666664" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.28306159420289856" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml	(revision 50181113e496177729002181c2a2712e846b9ff2)
---+++ /dev/null	(revision 50181113e496177729002181c2a2712e846b9ff2)
---@@ -1,4 +0,0 @@
----<changelist name="Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]" date="1640211744948" recycled="true" deleted="true">
----  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch" />
----  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/22/2021 10:21 PM [Default Changelist]" />
----</changelist>
---\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch	(revision 50181113e496177729002181c2a2712e846b9ff2)
---+++ /dev/null	(revision 50181113e496177729002181c2a2712e846b9ff2)
---@@ -1,60 +0,0 @@
----Index: app/src/main/res/navigation/mobile_navigation.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarActivity\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/activity_calendar\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_contacts\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ContactsActivity\"\r\n        android:label=\"@string/contactos\"\r\n        tools:layout=\"@layout/activity_contacts\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_profile\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ProfileActivity\"\r\n        android:label=\"@string/perfil\"\r\n        tools:layout=\"@layout/activity_profile\"/>\r\n\r\n</navigation>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
------- a/app/src/main/res/navigation/mobile_navigation.xml	(revision 8d367902f92b3e8617eec2e46c989383c121afd9)
----+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640174002308)
----@@ -41,4 +41,10 @@
----         android:label="@string/perfil"
----         tools:layout="@layout/activity_profile"/>
---- 
----+    <activity
----+        android:id="@+id/nav_news"
----+        android:name="com.singularity.ipcaplus.NewsWebActivity"
----+        android:label="News"
----+        tools:layout="@layout/activity_news_web"/>
----+
---- </navigation>
----\ No newline at end of file
----Index: .idea/misc.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2554347826086957\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/.idea/misc.xml b/.idea/misc.xml
------- a/.idea/misc.xml	(revision 8d367902f92b3e8617eec2e46c989383c121afd9)
----+++ b/.idea/misc.xml	(date 1640174014960)
----@@ -67,6 +67,7 @@
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml" value="0.33" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_news_web.xml" value="0.23333333333333334" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.28306159420289856" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
----Index: app/src/main/AndroidManifest.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".profile.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".TabActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/title_activity_tab\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
------- a/app/src/main/AndroidManifest.xml	(revision 8d367902f92b3e8617eec2e46c989383c121afd9)
----+++ b/app/src/main/AndroidManifest.xml	(date 1640173886516)
----@@ -10,6 +10,9 @@
----         android:supportsRtl="true"
----         android:theme="@style/Theme.IPCA">
----         <activity
----+            android:name=".NewsWebActivity"
----+            android:exported="false" />
----+        <activity
----             android:name=".profile.ContactsActivity"
----             android:exported="false" />
----         <activity
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]/shelved.patch
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]/shelved.patch
---new file mode 100644
------ /dev/null	(date 1640819726903)
---+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]/shelved.patch	(date 1640819726903)
---@@ -0,0 +1,447 @@
---+Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch
---+===================================================================
---+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch
---+deleted file mode 100644
---+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---++++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+@@ -1,129 +0,0 @@
---+-Index: app/src/main/res/navigation/mobile_navigation.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarActivity\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/activity_calendar\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_contacts\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ContactsActivity\"\r\n        android:label=\"@string/contactos\"\r\n        tools:layout=\"@layout/activity_contacts\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_profile\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ProfileActivity\"\r\n        android:label=\"@string/perfil\"\r\n        tools:layout=\"@layout/activity_profile\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_schedule\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.ScheduleActivity\"\r\n        android:label=\"@string/horario\"\r\n        tools:layout=\"@layout/activity_schedule\"/>\r\n\r\n</navigation>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
---+---- a/app/src/main/res/navigation/mobile_navigation.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
---+-+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640207826371)
---+-@@ -47,4 +47,10 @@
---+-         android:label="@string/horario"
---+-         tools:layout="@layout/activity_schedule"/>
---+- 
---+-+    <activity
---+-+        android:id="@+id/nav_news"
---+-+        android:name="com.singularity.ipcaplus.NewsWebActivity"
---+-+        android:label="News"
---+-+        tools:layout="@layout/activity_news_web"/>
---+-+
---+- </navigation>
---+-\ No newline at end of file
---+-Index: app/src/main/res/layout/activity_schedule.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".calendar.ScheduleActivity\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:paddingVertical=\"10dp\">\r\n\r\n        <Button\r\n            android:id=\"@+id/button_seg\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Seg\"\r\n            android:textColor=\"@color/white\"\r\n            app:backgroundTint=\"@color/green_200\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_ter\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Ter\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qua\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qua\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qui\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qui\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_sex\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Sex\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerViewSchedule\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/app/src/main/res/layout/activity_schedule.xml b/app/src/main/res/layout/activity_schedule.xml
---+---- a/app/src/main/res/layout/activity_schedule.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
---+-+++ b/app/src/main/res/layout/activity_schedule.xml	(date 1640207826376)
---+-@@ -28,7 +28,7 @@
---+-             app:backgroundTint="@color/green_200"
---+-             app:layout_constraintEnd_toEndOf="parent"
---+-             app:layout_constraintStart_toStartOf="parent"
---+--            app:layout_constraintTop_toTopOf="parent" />
---+-+            app:layout_constraintTop_toTopOf="parent"/>
---+- 
---+-         <Button
---+-             android:id="@+id/button_ter"
---+-Index: app/src/main/AndroidManifest.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".calendar.ScheduleActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".TabActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/title_activity_tab\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
---+---- a/app/src/main/AndroidManifest.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
---+-+++ b/app/src/main/AndroidManifest.xml	(date 1640207826380)
---+-@@ -13,6 +13,9 @@
---+-             android:name=".calendar.ScheduleActivity"
---+-             android:exported="false" />
---+-         <activity
---+-+            android:name=".NewsWebActivity"
---+-+            android:exported="false" />
---+-+        <activity
---+-             android:name=".profile.ContactsActivity"
---+-             android:exported="false" />
---+-         <activity
---+-@@ -63,5 +66,8 @@
---+-             android:name="preloaded_fonts"
---+-             android:resource="@array/preloaded_fonts" />
---+-     </application>
---+-+    <uses-permission android:name="android.permission.INTERNET"/>
---+-+
---+-+
---+- 
---+- </manifest>
---+-\ No newline at end of file
---+-Index: .idea/misc.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2554347826086957\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/gradient_shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_video.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.26766304347826086\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/.idea/misc.xml b/.idea/misc.xml
---+---- a/.idea/misc.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
---+-+++ b/.idea/misc.xml	(date 1640207852743)
---+-@@ -3,9 +3,12 @@
---+-   <component name="DesignSurface">
---+-     <option name="filePathToZoomLevelMap">
---+-       <map>
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml" value="0.3828125" />
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml" value="0.3828125" />
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.23802083333333332" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml" value="0.23802083333333332" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml" value="0.3828125" />
---+-@@ -13,6 +16,7 @@
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml" value="0.3828125" />
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml" value="0.2520833333333333" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml" value="0.3828125" />
---+-@@ -30,19 +34,26 @@
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml" value="0.33" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.36277173913043476" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml" value="0.2359375" />
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml" value="0.2359375" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.2359375" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml" value="0.2359375" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml" value="0.36277173913043476" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml" value="0.2359375" />
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.3546195652173913" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml" value="0.2359375" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml" value="0.2359375" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml" value="0.33" />
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.358695652173913" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml" value="0.7456647398843931" />
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.3546195652173913" />
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml" value="0.3546195652173913" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml" value="0.36666666666666664" />
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
---+-+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml" value="0.29074074074074074" />
---+-         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml" value="0.2953703703703704" />
---+-         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.3101851851851852" />
---+Index: .idea/deploymentTargetDropDown.xml
---+===================================================================
---+diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
---+deleted file mode 100644
---+--- a/.idea/deploymentTargetDropDown.xml	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---++++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+@@ -1,17 +0,0 @@
---+-<?xml version="1.0" encoding="UTF-8"?>
---+-<project version="4">
---+-  <component name="deploymentTargetDropDown">
---+-    <runningDeviceTargetSelectedWithDropDown>
---+-      <Target>
---+-        <type value="RUNNING_DEVICE_TARGET" />
---+-        <deviceKey>
---+-          <Key>
---+-            <type value="SERIAL_NUMBER" />
---+-            <value value="df6a949f" />
---+-          </Key>
---+-        </deviceKey>
---+-      </Target>
---+-    </runningDeviceTargetSelectedWithDropDown>
---+-    <timeTargetWasSelectedWithDropDown value="2021-12-28T23:20:58.593285700Z" />
---+-  </component>
---+-</project>
---+\ No newline at end of file
---+Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]/shelved.patch
---+===================================================================
---+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]/shelved.patch
---+deleted file mode 100644
---+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]/shelved.patch	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---++++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+@@ -1,28 +0,0 @@
---+-Index: app/src/main/res/navigation/mobile_navigation.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarFragment\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n</navigation>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
---+---- a/app/src/main/res/navigation/mobile_navigation.xml	(revision dff33d8afb09b8e5acd0ca7438ef5351cb22e12b)
---+-+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640121336982)
---+-@@ -24,9 +24,15 @@
---+-         tools:layout="@layout/fragment_home" />
---+- 
---+-     <fragment
---+--        android:id="@+id/nav_calendar"
---+-+        android:id="@+id/nav_calendar2"
---+-         android:name="com.singularity.ipcaplus.calendar.CalendarFragment"
---+-         android:label="@string/calendario"
---+-         tools:layout="@layout/fragment_home" />
---+- 
---+-+    <activity
---+-+        android:id="@+id/nav_calendar"
---+-+        android:name="com.singularity.ipcaplus.calendar.AddEventActivity"
---+-+        android:label="@string/calendario"
---+-+        tools:layout="@layout/fragment_calendar"/>
---+-+
---+- </navigation>
---+-\ No newline at end of file
---+Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml
---+===================================================================
---+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml
---+deleted file mode 100644
---+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---++++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+@@ -1,4 +0,0 @@
---+-<changelist name="Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]" date="1640201060341" recycled="true" deleted="true">
---+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch" />
---+-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/22/2021 7:24 PM [Default Changelist]" />
---+-</changelist>
---+\ No newline at end of file
---+Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM__Default_Changelist_.xml
---+===================================================================
---+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM__Default_Changelist_.xml
---+deleted file mode 100644
---+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM__Default_Changelist_.xml	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---++++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+@@ -1,4 +0,0 @@
---+-<changelist name="Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]" date="1640123151252" recycled="true" deleted="true">
---+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]/shelved.patch" />
---+-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/21/2021 9:44 PM [Default Changelist]" />
---+-</changelist>
---+\ No newline at end of file
---+Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml
---+===================================================================
---+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml
---+deleted file mode 100644
---+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---++++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+@@ -1,4 +0,0 @@
---+-<changelist name="Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]" date="1640207852780" recycled="true" deleted="true">
---+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch" />
---+-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/22/2021 9:17 PM [Default Changelist]" />
---+-</changelist>
---+\ No newline at end of file
---+Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch
---+===================================================================
---+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch
---+deleted file mode 100644
---+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---++++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+@@ -1,129 +0,0 @@
---+-Index: app/src/main/res/navigation/mobile_navigation.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarActivity\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/activity_calendar\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_contacts\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ContactsActivity\"\r\n        android:label=\"@string/contactos\"\r\n        tools:layout=\"@layout/activity_contacts\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_profile\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ProfileActivity\"\r\n        android:label=\"@string/perfil\"\r\n        tools:layout=\"@layout/activity_profile\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_schedule\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.ScheduleActivity\"\r\n        android:label=\"@string/horario\"\r\n        tools:layout=\"@layout/activity_schedule\"/>\r\n\r\n</navigation>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
---+---- a/app/src/main/res/navigation/mobile_navigation.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
---+-+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640201060311)
---+-@@ -47,4 +47,10 @@
---+-         android:label="@string/horario"
---+-         tools:layout="@layout/activity_schedule"/>
---+- 
---+-+    <activity
---+-+        android:id="@+id/nav_news"
---+-+        android:name="com.singularity.ipcaplus.NewsWebActivity"
---+-+        android:label="News"
---+-+        tools:layout="@layout/activity_news_web"/>
---+-+
---+- </navigation>
---+-\ No newline at end of file
---+-Index: app/src/main/res/layout/activity_schedule.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".calendar.ScheduleActivity\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:paddingVertical=\"10dp\">\r\n\r\n        <Button\r\n            android:id=\"@+id/button_seg\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Seg\"\r\n            android:textColor=\"@color/white\"\r\n            app:backgroundTint=\"@color/green_200\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_ter\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Ter\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qua\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qua\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qui\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qui\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_sex\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Sex\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerViewSchedule\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/app/src/main/res/layout/activity_schedule.xml b/app/src/main/res/layout/activity_schedule.xml
---+---- a/app/src/main/res/layout/activity_schedule.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
---+-+++ b/app/src/main/res/layout/activity_schedule.xml	(date 1640201359608)
---+-@@ -28,7 +28,7 @@
---+-             app:backgroundTint="@color/green_200"
---+-             app:layout_constraintEnd_toEndOf="parent"
---+-             app:layout_constraintStart_toStartOf="parent"
---+--            app:layout_constraintTop_toTopOf="parent" />
---+-+            app:layout_constraintTop_toTopOf="parent"/>
---+- 
---+-         <Button
---+-             android:id="@+id/button_ter"
---+-Index: app/src/main/AndroidManifest.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".calendar.ScheduleActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".TabActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/title_activity_tab\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
---+---- a/app/src/main/AndroidManifest.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
---+-+++ b/app/src/main/AndroidManifest.xml	(date 1640201881840)
---+-@@ -13,6 +13,9 @@
---+-             android:name=".calendar.ScheduleActivity"
---+-             android:exported="false" />
---+-         <activity
---+-+            android:name=".NewsWebActivity"
---+-+            android:exported="false" />
---+-+        <activity
---+-             android:name=".profile.ContactsActivity"
---+-             android:exported="false" />
---+-         <activity
---+-@@ -63,5 +66,8 @@
---+-             android:name="preloaded_fonts"
---+-             android:resource="@array/preloaded_fonts" />
---+-     </application>
---+-+    <uses-permission android:name="android.permission.INTERNET"/>
---+-+
---+-+
---+- 
---+- </manifest>
---+-\ No newline at end of file
---+-Index: .idea/misc.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_breaktime.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2554347826086957\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/.idea/misc.xml b/.idea/misc.xml
---+---- a/.idea/misc.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
---+-+++ b/.idea/misc.xml	(date 1640201362085)
---+-@@ -3,12 +3,9 @@
---+-   <component name="DesignSurface">
---+-     <option name="filePathToZoomLevelMap">
---+-       <map>
---+--        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml" value="0.3828125" />
---+--        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml" value="0.3828125" />
---+--        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml" value="0.3828125" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.23802083333333332" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml" value="0.23802083333333332" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml" value="0.3828125" />
---+-@@ -40,7 +37,6 @@
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml" value="0.36277173913043476" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml" value="0.2359375" />
---+--        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.3546195652173913" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml" value="0.2359375" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml" value="0.2359375" />
---+-@@ -48,10 +44,7 @@
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml" value="0.33" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.358695652173913" />
---+--        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_breaktime.xml" value="0.3546195652173913" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml" value="0.7456647398843931" />
---+--        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.3546195652173913" />
---+--        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml" value="0.3546195652173913" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.36666666666666664" />
---+-@@ -70,10 +63,15 @@
---+-         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.17831813576494426" />
---+-         <entry key="..\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.25" />
---+-         <entry key="..\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.128125" />
---+-+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml" value="0.22135416666666666" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml" value="0.33" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
---+-+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.2980072463768116" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
---+-+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_login.xml" value="0.36666666666666664" />
---+-+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_news_web.xml" value="0.23333333333333334" />
---+-+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.36666666666666664" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.28306159420289856" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
---+Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch
---+===================================================================
---+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch
---+deleted file mode 100644
---+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---++++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+@@ -1,60 +0,0 @@
---+-Index: app/src/main/res/navigation/mobile_navigation.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarActivity\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/activity_calendar\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_contacts\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ContactsActivity\"\r\n        android:label=\"@string/contactos\"\r\n        tools:layout=\"@layout/activity_contacts\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_profile\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ProfileActivity\"\r\n        android:label=\"@string/perfil\"\r\n        tools:layout=\"@layout/activity_profile\"/>\r\n\r\n</navigation>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
---+---- a/app/src/main/res/navigation/mobile_navigation.xml	(revision 8d367902f92b3e8617eec2e46c989383c121afd9)
---+-+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640174002308)
---+-@@ -41,4 +41,10 @@
---+-         android:label="@string/perfil"
---+-         tools:layout="@layout/activity_profile"/>
---+- 
---+-+    <activity
---+-+        android:id="@+id/nav_news"
---+-+        android:name="com.singularity.ipcaplus.NewsWebActivity"
---+-+        android:label="News"
---+-+        tools:layout="@layout/activity_news_web"/>
---+-+
---+- </navigation>
---+-\ No newline at end of file
---+-Index: .idea/misc.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2554347826086957\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/.idea/misc.xml b/.idea/misc.xml
---+---- a/.idea/misc.xml	(revision 8d367902f92b3e8617eec2e46c989383c121afd9)
---+-+++ b/.idea/misc.xml	(date 1640174014960)
---+-@@ -67,6 +67,7 @@
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml" value="0.33" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
---+-+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_news_web.xml" value="0.23333333333333334" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.28306159420289856" />
---+-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
---+-Index: app/src/main/AndroidManifest.xml
---+-IDEA additional info:
---+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".profile.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".TabActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/title_activity_tab\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
---+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---+-<+>UTF-8
---+-===================================================================
---+-diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
---+---- a/app/src/main/AndroidManifest.xml	(revision 8d367902f92b3e8617eec2e46c989383c121afd9)
---+-+++ b/app/src/main/AndroidManifest.xml	(date 1640173886516)
---+-@@ -10,6 +10,9 @@
---+-         android:supportsRtl="true"
---+-         android:theme="@style/Theme.IPCA">
---+-         <activity
---+-+            android:name=".NewsWebActivity"
---+-+            android:exported="false" />
---+-+        <activity
---+-             android:name=".profile.ContactsActivity"
---+-             android:exported="false" />
---+-         <activity
---+Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml
---+===================================================================
---+diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml
---+deleted file mode 100644
---+--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---++++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+@@ -1,4 +0,0 @@
---+-<changelist name="Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]" date="1640211744948" recycled="true" deleted="true">
---+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch" />
---+-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/22/2021 10:21 PM [Default Changelist]" />
---+-</changelist>
---+\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM__Default_Changelist_.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM__Default_Changelist_.xml
---new file mode 100644
------ /dev/null	(date 1640819744020)
---+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM__Default_Changelist_.xml	(date 1640819744020)
---@@ -0,0 +1,4 @@
---+<changelist name="Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]" date="1640819727887" recycled="true" deleted="true">
---+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]/shelved.patch" />
---+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/29/2021 11:15 PM [Default Changelist]" />
---+</changelist>
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_3_06_PM_[Default_Changelist]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_3_06_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_3_06_PM_[Default_Changelist]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_3_06_PM_[Default_Changelist]/shelved.patch	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,168 +0,0 @@
---Index: app/src/main/java/com/singularity/ipcaplus/RegisterActivity.kt
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.widget.Toast\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.auth.FirebaseUser\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAES\r\nimport com.singularity.ipcaplus.cryptography.encrypt\r\nimport com.singularity.ipcaplus.databinding.ActivityRegisterBinding\r\n\r\nclass RegisterActivity : AppCompatActivity() {\r\n    private lateinit var auth: FirebaseAuth\r\n    private lateinit var binding: ActivityRegisterBinding\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_login)\r\n\r\n        binding = ActivityRegisterBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        auth = Firebase.auth\r\n\r\n\r\n        binding.buttonRegister.setOnClickListener {\r\n            val email : String = binding.editTextEmail.text.toString()\r\n            val password : String = binding.editTextTextPassword.text.toString()\r\n\r\n\r\n            auth.createUserWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this) { task ->\r\n                    if (task.isSuccessful) {\r\n                        // Sign in success, update UI with the signed-in user's information\r\n                        Log.d(TAG, \"createUserWithEmail:success\")\r\n                        val user = auth.currentUser\r\n                        emailVerification()\r\n                        startActivity(Intent(this, LoginActivity::class.java ))\r\n                    } else {\r\n                        // If sign in fails, display a message to the user.\r\n                        Log.w(TAG, \"createUserWithEmail:failure\", task.exception)\r\n                        Toast.makeText(baseContext, \"Authentication failed.\",\r\n                            Toast.LENGTH_SHORT).show()\r\n                    }\r\n                }\r\n        }\r\n    }\r\n\r\n    private fun emailVerification() {\r\n\r\n        auth.currentUser?.sendEmailVerification()\r\n            ?.addOnCompleteListener { task ->\r\n                if (task.isSuccessful) {\r\n                    // below message changed and user is navigated to Sign In activity\r\n                    val user = auth.currentUser\r\n                    Toast.makeText(\r\n                        this, \"Sign Up successful. Verification link sent to the Email address\",\r\n                        Toast.LENGTH_SHORT\r\n                    ).show()\r\n                }\r\n            }\r\n\r\n    }\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/RegisterActivity.kt b/app/src/main/java/com/singularity/ipcaplus/RegisterActivity.kt
------ a/app/src/main/java/com/singularity/ipcaplus/RegisterActivity.kt	(revision 259ef520c64e84cee5b29ce2aa11b4d2c88df187)
---+++ b/app/src/main/java/com/singularity/ipcaplus/RegisterActivity.kt	(date 1640617365737)
---@@ -1,17 +1,15 @@
--- package com.singularity.ipcaplus
--- 
----import android.content.ContentValues.TAG
---+import android.content.ContentValues
--- import android.content.Intent
----import androidx.appcompat.app.AppCompatActivity
--- import android.os.Bundle
--- import android.util.Log
--- import android.widget.Toast
---+import androidx.appcompat.app.AppCompatActivity
---+import com.google.android.material.snackbar.Snackbar
--- import com.google.firebase.auth.FirebaseAuth
----import com.google.firebase.auth.FirebaseUser
--- import com.google.firebase.auth.ktx.auth
--- import com.google.firebase.ktx.Firebase
----import com.singularity.ipcaplus.cryptography.decryptWithAES
----import com.singularity.ipcaplus.cryptography.encrypt
--- import com.singularity.ipcaplus.databinding.ActivityRegisterBinding
--- 
--- class RegisterActivity : AppCompatActivity() {
---@@ -33,22 +31,27 @@
---             val email : String = binding.editTextEmail.text.toString()
---             val password : String = binding.editTextTextPassword.text.toString()
--- 
----
----            auth.createUserWithEmailAndPassword(email, password)
----                .addOnCompleteListener(this) { task ->
----                    if (task.isSuccessful) {
----                        // Sign in success, update UI with the signed-in user's information
----                        Log.d(TAG, "createUserWithEmail:success")
----                        val user = auth.currentUser
----                        emailVerification()
----                        startActivity(Intent(this, LoginActivity::class.java ))
----                    } else {
----                        // If sign in fails, display a message to the user.
----                        Log.w(TAG, "createUserWithEmail:failure", task.exception)
----                        Toast.makeText(baseContext, "Authentication failed.",
----                            Toast.LENGTH_SHORT).show()
---+            val emailDomain = Utilis.getEmailDomain(email)
---+            if(emailDomain != "alunos.ipca.pt" && emailDomain != "ipca.pt"){
---+                Snackbar.make(binding.root,
---+                    "You need to Sign Up with (ipca.pt) email!", Snackbar.LENGTH_SHORT).show()
---+            }else{
---+                auth.createUserWithEmailAndPassword(email, password)
---+                    .addOnCompleteListener(this) { task ->
---+                        if (task.isSuccessful) {
---+                            // Sign in success, update UI with the signed-in user's information
---+                            Log.d(ContentValues.TAG, "createUserWithEmail:success")
---+                            val user = auth.currentUser
---+                            emailVerification()
---+                            startActivity(Intent(this, LoginActivity::class.java ))
---+                        } else {
---+                            // If sign in fails, display a message to the user.
---+                            Log.w(ContentValues.TAG, "createUserWithEmail:failure", task.exception)
---+                            Toast.makeText(baseContext, "Authentication failed.",
---+                                Toast.LENGTH_SHORT).show()
---+                        }
---                     }
----                }
---+            }
---         }
---     }
--- 
---Index: app/src/main/java/com/singularity/ipcaplus/Backend.kt
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.singularity.ipcaplus\r\n\r\nimport android.graphics.Color\r\nimport com.github.sundeepk.compactcalendarview.domain.Event\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.models.*\r\n\r\nobject Backend {\r\n\r\n    val db = Firebase.firestore\r\n\r\n    /*\r\n       ------------------------------------------------ Events ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all events during the month in the firebase to an list\r\n       @month = selected month\r\n       @callBack = return the list\r\n    */\r\n    fun getAllMonthEvents(month: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        // Get all user chat ids\r\n        val chatIds = arrayListOf<String>()\r\n        getAllUserChatIds {\r\n            chatIds.addAll(it)\r\n\r\n            // Search in all chats\r\n            for (id in chatIds) {\r\n                db.collection(\"chat\")\r\n                    .document(id)\r\n                    .collection(\"event\")\r\n                    .addSnapshotListener { documents, _ ->\r\n\r\n                        documents?.let {\r\n\r\n                            for (document in documents) {\r\n                                val event = EventCalendar.fromHash(document)\r\n                                event.id = document.id\r\n\r\n                                val date = Utilis.getDate(event.datetime.seconds * 1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                                if (month == Utilis.getMonthById(Utilis.getMonth(date).toInt())) {\r\n                                    events.add(event)\r\n                                }\r\n                            }\r\n                            callBack(events)\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private fun getAllUserChatIds(callBack: (List<String>)->Unit) {\r\n\r\n        val chatIds = arrayListOf<String>()\r\n\r\n        // Get Group Chats Ids\r\n        db.collection(\"profile\").document(Firebase.auth.currentUser!!.uid).collection(\"chat\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in it) {\r\n                        chatIds.add(document.id)\r\n                    }\r\n\r\n                    callBack(chatIds)\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the month in the firebase to an list\r\n       @month = selected month\r\n       @callBack = return the list\r\n    */\r\n    fun getAllChatMonthEvents(month: String, chat_id: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        db.collection(\"chat\")\r\n            .document(chat_id)\r\n            .collection(\"event\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val event = EventCalendar.fromHash(document)\r\n                        event.id = document.id\r\n\r\n                        val date = Utilis.getDate(event.datetime.seconds * 1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                        if (month == Utilis.getMonthById(Utilis.getMonth(date).toInt())) {\r\n                            events.add(event)\r\n                        }\r\n                    }\r\n\r\n                    callBack(events)\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the day in the firebase to an list\r\n       @day = selected day\r\n       @callBack = return the list\r\n    */\r\n    fun getAllChatMonthDayEvents(month: String, day: Int, chat_id: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        db.collection(\"chat\")\r\n            .document(chat_id)\r\n            .collection(\"event\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val event = EventCalendar.fromHash(document)\r\n                        event.id = document.id\r\n\r\n                        val date = Utilis.getDate(event.datetime.seconds * 1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                        if (day == Utilis.getDay(date).toInt() && month == Utilis.getMonthById(Utilis.getMonth(date).toInt())) {\r\n                            events.add(event)\r\n                        }\r\n                    }\r\n\r\n                    callBack(events)\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the day in the firebase to an list\r\n       @day = selected day\r\n       @callBack = return the list\r\n    */\r\n    fun getAllMonthDayEvents(month: String, day: Int, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        // Get all user chat ids\r\n        val chatIds = arrayListOf<String>()\r\n        getAllUserChatIds {\r\n            chatIds.addAll(it)\r\n\r\n            // Search in all chats\r\n            for (id in chatIds) {\r\n                db.collection(\"chat\")\r\n                    .document(id)\r\n                    .collection(\"event\")\r\n                    .addSnapshotListener { documents, _ ->\r\n\r\n                        documents?.let {\r\n\r\n                            for (document in documents) {\r\n                                val event = EventCalendar.fromHash(document)\r\n                                event.id = document.id\r\n\r\n                                val date = Utilis.getDate(event.datetime.seconds * 1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                                if (day == Utilis.getDay(date).toInt() && month == Utilis.getMonthById(Utilis.getMonth(date).toInt())) {\r\n                                    events.add(event)\r\n                                }\r\n                            }\r\n\r\n                            callBack(events)\r\n                        }\r\n\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    fun deleteEvent(chatID: String, eventID: String) {\r\n\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"event\")\r\n            .document(eventID)\r\n            .delete()\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Schedule ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all events in the firebase to an list\r\n       @callBack = return the list\r\n    */\r\n    fun getDayCourseSubjects(day: String, courseId: String, callBack: (List<Subject>)->Unit) {\r\n\r\n        val subjects = arrayListOf<Subject>()\r\n        val subjectsWithBreaks = arrayListOf<Subject>()\r\n\r\n        db.collection(\"course\").document(courseId).collection(\"subject\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n\r\n                    // Add every subject to the list\r\n                    for (document in documents) {\r\n                        val subject = Subject.fromHash(document)\r\n                        if (day == subject.day) {\r\n                            subjects.add(subject)\r\n                        }\r\n                    }\r\n\r\n                    // Order the subjects by time\r\n                    for (i in 0 until subjects.size) {\r\n                        for (j in 0 until subjects.size - 1) {\r\n\r\n                            if (Utilis.convertHoursStringToInt(subjects[j].start_time) > Utilis.convertHoursStringToInt(subjects[j+1].start_time)) {\r\n                                val temp = subjects[j]\r\n                                subjects[j] = subjects[j + 1]\r\n                                subjects[j + 1] = temp\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Add Break Times Between Classes\r\n                    for (i in 0 until subjects.size) {\r\n                        if (i % 2 == 0) {\r\n                            subjectsWithBreaks.add(subjects[i])\r\n                        }\r\n                        else {\r\n                            val diff = Utilis.convertHoursStringToInt(subjects[i].start_time) - Utilis.convertHoursStringToInt(subjects[i-1].end_time)\r\n                            subjectsWithBreaks.add(Subject(\"breaktime\", diff.toString()))\r\n                            subjectsWithBreaks.add(subjects[i])\r\n                        }\r\n                    }\r\n\r\n                    callBack(subjectsWithBreaks)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns the user course by callback\r\n       @id = user uid\r\n    */\r\n    fun getUserCourse(uid: String, callBack:(String)->Unit) {\r\n\r\n        db.collection(\"profile\")\r\n            .document(uid)\r\n            .collection(\"course\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    var courseId = \"\"\r\n                    for (document in documents)\r\n                        courseId = document.id\r\n\r\n                    callBack(courseId)\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Contacts ------------------------------------------------\r\n    */\r\n    /*\r\n       This function returns all contacts in the firebase to an list\r\n       @callBack = return the list\r\n    */\r\n    fun getAllContacts(callBack: (List<Contact>)->Unit) {\r\n\r\n        val contacts = arrayListOf<Contact>()\r\n\r\n        db.collection(\"contacts\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val contact = Contact.fromHash(document)\r\n                        contacts.add(contact)\r\n                    }\r\n\r\n                    callBack(contacts)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Chats ------------------------------------------------\r\n    */\r\n    /*\r\n    /*\r\n       This function returns chats based on given type\r\n       @callBack = return the list\r\n    */\r\n    fun getChatByType(type: String ,callBack: (List<Chat>, List<String>)->Unit) {\r\n\r\n        val chats = arrayListOf<Chat>()\r\n        val chatIds = arrayListOf<String>()\r\n\r\n        db.collection(\"profile\").document(\"${Firebase.auth.currentUser!!.uid}\").collection(\"chat\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        val chat = Chat.fromHash(document)\r\n                        if (type == chat.type) {\r\n                            chats.add(chat)\r\n                            chatIds.add(document.id)\r\n                        }\r\n                    }\r\n\r\n                    callBack(chats, chatIds)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n    */\r\n\r\n    /*\r\n       This function returns last chat message by chat id\r\n       @callBack = return the list\r\n    */\r\n    fun getLastMessageByChatID(chatID: String, callBack: (Message?)->Unit) {\r\n\r\n        var message : Message? = null\r\n\r\n        db.collection(\"chat\").document(\"${chatID}\").collection(\"message\")\r\n            .orderBy(\"time\", Query.Direction.DESCENDING).limit(1)\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        message = Message.fromHash(document)\r\n                        }\r\n                    }\r\n\r\n                    callBack(message)\r\n                }\r\n\r\n    }\r\n\r\n\r\n    fun getChatAdminIds(chatID: String, callBack: (List<String>)->Unit) {\r\n\r\n        val adminIds = arrayListOf<String>()\r\n\r\n        // Get Group Chats Ids\r\n        db.collection(\"chat\").document(chatID).collection(\"admin\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in it) {\r\n                        adminIds.add(document.id)\r\n                    }\r\n\r\n                    callBack(adminIds)\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/Backend.kt b/app/src/main/java/com/singularity/ipcaplus/Backend.kt
------ a/app/src/main/java/com/singularity/ipcaplus/Backend.kt	(revision 259ef520c64e84cee5b29ce2aa11b4d2c88df187)
---+++ b/app/src/main/java/com/singularity/ipcaplus/Backend.kt	(date 1640617597444)
---@@ -1,12 +1,13 @@
--- package com.singularity.ipcaplus
--- 
----import android.graphics.Color
----import com.github.sundeepk.compactcalendarview.domain.Event
--- import com.google.firebase.auth.ktx.auth
--- import com.google.firebase.firestore.Query
--- import com.google.firebase.firestore.ktx.firestore
--- import com.google.firebase.ktx.Firebase
----import com.singularity.ipcaplus.models.*
---+import com.singularity.ipcaplus.models.Contact
---+import com.singularity.ipcaplus.models.EventCalendar
---+import com.singularity.ipcaplus.models.Message
---+import com.singularity.ipcaplus.models.Subject
--- 
--- object Backend {
--- 
---@@ -375,5 +376,27 @@
--- 
---     }
--- 
---+    /*
---+       ------------------------------------------------ Register Manipulation ------------------------------------------------
---+    */
---+
---+    fun getIpcaData(email: String, callBack: (Message?)->Unit) {
---+
---+        var message : Message? = null
---+
---+        db.collection("ipca_data")
---+            .addSnapshotListener { documents, _ ->
---+                documents?.let {
---+                    for (document in documents) {
---+                        message = Message.fromHash(document)
---+                    }
---+                }
---+
---+                callBack(message)
---+            }
---+
---+    }
---+
---+
--- 
--- }
---\ No newline at end of file
---Index: app/src/main/java/com/singularity/ipcaplus/Utilis.kt
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.Context\r\nimport android.os.Build\r\nimport androidx.annotation.RequiresApi\r\nimport java.io.IOException\r\nimport java.text.SimpleDateFormat\r\nimport java.time.LocalDate\r\nimport java.util.*\r\nimport java.util.regex.Pattern\r\n\r\nobject  Utilis {\r\n\r\n    /*\r\n        This function return the current month id\r\n     */\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getCurrentMonthId(): Int {\r\n\r\n        val c = LocalDate.now()\r\n        val strArray = Pattern.compile(\"-\").split(c.toString())\r\n\r\n        return strArray[1].toInt()\r\n    }\r\n\r\n    /*\r\n        This function return the current year id\r\n     */\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getCurrentYear(): String {\r\n\r\n        val c = LocalDate.now()\r\n        val strArray = Pattern.compile(\"-\").split(c.toString())\r\n\r\n        return strArray[0]\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getYearByCalendarId(id: Int): Int {\r\n\r\n        var count = id\r\n        var result = 2021 - 121\r\n\r\n        while (count > 0) {\r\n            count -= 1\r\n            result ++\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    /*\r\n        This function return the month value in string by an id\r\n        @month = month id\r\n     */\r\n    fun getMonthById(month: Int): String {\r\n        return when (month) {\r\n            1 -> \"Janeiro\"\r\n            2 -> \"Fevereiro\"\r\n            3 -> \"Março\"\r\n            4 -> \"Abril\"\r\n            5 -> \"Maio\"\r\n            6 -> \"Junho\"\r\n            7 -> \"Julho\"\r\n            8 -> \"Agosto\"\r\n            9 -> \"Setembro\"\r\n            10 -> \"Outubro\"\r\n            11 -> \"Novembro\"\r\n            12 -> \"Dezembro\"\r\n            else -> \"None\"\r\n        }\r\n    }\r\n\r\n    fun convertHoursStringToInt(strVal: String): Int {\r\n        val strArray = Pattern.compile(\":\").split(strVal)\r\n        val result = strArray[0] + strArray[1]\r\n        return result.toInt()\r\n    }\r\n\r\n    fun getDate(milliSeconds: Long, dateFormat: String?): String {\r\n        // Create a DateFormatter object for displaying date in specified format.\r\n        val formatter = SimpleDateFormat(dateFormat)\r\n\r\n        // Create a calendar object that will convert the date and time value in milliseconds to date.\r\n        val calendar: Calendar = Calendar.getInstance()\r\n        calendar.timeInMillis = milliSeconds\r\n        return formatter.format(calendar.time)\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the day\r\n        @date = default date\r\n     */\r\n    fun getDay(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\"T\").split(strArray[2])\r\n\r\n        return strArray2[0]\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the month in text\r\n        @date = default date\r\n     */\r\n    fun getMonth(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n\r\n        return strArray[1].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the year in text\r\n        @date = default date\r\n     */\r\n    fun getYear(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n\r\n        return strArray[0].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the Hours in text\r\n        @date = default date\r\n     */\r\n    fun getHours(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"T\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\":\").split(strArray[1])\r\n\r\n        return strArray2[0].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the Minutes in text\r\n        @date = default date\r\n     */\r\n    fun getMinutes(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"T\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\":\").split(strArray[1])\r\n\r\n        return strArray2[1].toString()\r\n    }\r\n\r\n\r\n    fun getJsonDataFromAsset(context: Context, fileName: String): String? {\r\n        val jsonString: String\r\n        try {\r\n            jsonString = context.assets.open(fileName).bufferedReader().use { it.readText() }\r\n        } catch (ioException: IOException) {\r\n            ioException.printStackTrace()\r\n            return null\r\n        }\r\n        return jsonString\r\n    }\r\n\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/Utilis.kt b/app/src/main/java/com/singularity/ipcaplus/Utilis.kt
------ a/app/src/main/java/com/singularity/ipcaplus/Utilis.kt	(revision 259ef520c64e84cee5b29ce2aa11b4d2c88df187)
---+++ b/app/src/main/java/com/singularity/ipcaplus/Utilis.kt	(date 1640616340275)
---@@ -155,6 +155,9 @@
---         return strArray2[1].toString()
---     }
--- 
---+    /*
---+        This function get the buffer with the name of filename on assets folder
---+     */
--- 
---     fun getJsonDataFromAsset(context: Context, fileName: String): String? {
---         val jsonString: String
---@@ -167,4 +170,16 @@
---         return jsonString
---     }
--- 
---+    /*
---+        This function gets the domain of email
---+        split remove the @ and make the array like this -> [a20115][alunos.ipca.pt]
---+     */
---+    fun getEmailDomain(email: String) : String{
---+        val strArray = Pattern.compile("@").split(email)
---+        val result= strArray[1]
---+
---+        return result.toString()
---+
---+    }
---+
--- }
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM__Default_Changelist_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM__Default_Changelist_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM__Default_Changelist_.xml	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]" date="1640819727887" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/29/2021 11:15 PM [Default Changelist]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_7_10_PM_[Default_Changelist]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_7_10_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_7_10_PM_[Default_Changelist]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_7_10_PM_[Default_Changelist]/shelved.patch	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,326 +0,0 @@
---Index: app/src/main/java/com/singularity/ipcaplus/chat/ChatMoreActivity.kt
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.singularity.ipcaplus.chat\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.databinding.ActivityChatMoreBinding\r\n\r\nclass ChatMoreActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding: ActivityChatMoreBinding\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_chat_more)\r\n\r\n        // Create the layout for this fragment\r\n        binding = ActivityChatMoreBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        // Create Action Bar\r\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\r\n        supportActionBar?.setHomeAsUpIndicator(R.drawable.ic_arrow_back_24)\r\n        supportActionBar?.title = \"Definições do grupo\"\r\n\r\n        // Get previous data\r\n        val chat_id = intent.getStringExtra(\"chat_id\").toString()\r\n        val chat_name = intent.getStringExtra(\"chat_name\").toString()\r\n        binding.textViewGroupName.text = chat_name\r\n\r\n        // Set Chat Image\r\n\r\n        binding.seeGroupMembers.setOnClickListener {\r\n            println(\"-------------> 1\")\r\n        }\r\n\r\n        binding.changeGroupName.setOnClickListener {\r\n            println(\"-------------> 2\")\r\n        }\r\n\r\n        binding.changeGroupImage.setOnClickListener {\r\n            println(\"-------------> 3\")\r\n        }\r\n\r\n        binding.groupFiles.setOnClickListener {\r\n            println(\"-------------> 4\")\r\n        }\r\n\r\n        binding.notifications.setOnClickListener {\r\n            println(\"-------------> 5\")\r\n        }\r\n    }\r\n\r\n    // When the support action bar back button is pressed, the app will go back to the previous activity\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        onBackPressed()\r\n        return true\r\n    }\r\n\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/ChatMoreActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/ChatMoreActivity.kt
------ a/app/src/main/java/com/singularity/ipcaplus/chat/ChatMoreActivity.kt	(revision 14b1ccaa390192755eb9428a26cea4851a10516c)
---+++ b/app/src/main/java/com/singularity/ipcaplus/chat/ChatMoreActivity.kt	(date 1640717352512)
---@@ -1,9 +1,11 @@
--- package com.singularity.ipcaplus.chat
--- 
---+import android.content.Intent
--- import androidx.appcompat.app.AppCompatActivity
--- import android.os.Bundle
--- import com.singularity.ipcaplus.R
--- import com.singularity.ipcaplus.databinding.ActivityChatMoreBinding
---+import com.singularity.ipcaplus.drawer.DrawerActivty
--- 
--- class ChatMoreActivity : AppCompatActivity() {
--- 
---@@ -48,6 +50,14 @@
---         binding.notifications.setOnClickListener {
---             println("-------------> 5")
---         }
---+
---+        binding.securityNumberVerification.setOnClickListener {
---+            println("-------------> 6")
---+            val intent = Intent(this, VerifySecurityNumberActivity::class.java )
---+            intent.putExtra("chat_id", chat_id)
---+            startActivity(intent)
---+
---+        }
---     }
--- 
---     // When the support action bar back button is pressed, the app will go back to the previous activity
---Index: app/build.gradle
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>plugins {\r\n    id 'com.android.application'\r\n    id 'kotlin-android'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 31\r\n\r\n    defaultConfig {\r\n        applicationId \"com.singularity.ipcaplus\"\r\n        minSdk 22\r\n        targetSdk 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.6.0'\r\n    implementation 'androidx.appcompat:appcompat:1.3.1'\r\n    implementation 'com.google.android.material:material:1.4.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'\r\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'\r\n    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.gridlayout:gridlayout:1.0.0'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    //Firebase\r\n    implementation platform('com.google.firebase:firebase-bom:28.4.1')\r\n    implementation 'com.google.firebase:firebase-analytics-ktx'\r\n    implementation 'com.google.firebase:firebase-auth-ktx'\r\n    implementation 'com.google.firebase:firebase-firestore-ktx'\r\n    implementation 'com.google.firebase:firebase-storage-ktx'\r\n    implementation 'com.google.firebase:firebase-messaging-ktx'\r\n    implementation 'org.bouncycastle:bcpkix-jdk15on:1.56'\r\n\r\n    implementation 'com.github.sundeepk:compact-calendar-view:3.0.0'\r\n\r\n    implementation 'com.github.bumptech.glide:glide:4.12.0'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n    //image crop\r\n    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.+'\r\n\r\n    //picasso\r\n    implementation 'com.squareup.picasso:picasso:2.5.2'\r\n\r\n    //security\r\n    implementation \"androidx.security:security-crypto:1.1.0-alpha03\"\r\n\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/build.gradle b/app/build.gradle
------ a/app/build.gradle	(revision 14b1ccaa390192755eb9428a26cea4851a10516c)
---+++ b/app/build.gradle	(date 1640718567363)
---@@ -73,5 +73,8 @@
--- 
---     //security
---     implementation "androidx.security:security-crypto:1.1.0-alpha03"
---+    implementation 'com.journeyapps:zxing-android-embedded:3.0.2@aar'
---+    implementation 'com.google.zxing:core:3.2.0'
---+
--- 
--- }
---\ No newline at end of file
---Index: app/src/main/java/com/singularity/ipcaplus/cryptography/AESdata.kt
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/cryptography/AESdata.kt b/app/src/main/java/com/singularity/ipcaplus/cryptography/AESdata.kt
---deleted file mode 100644
------ a/app/src/main/java/com/singularity/ipcaplus/cryptography/AESdata.kt	(revision 14b1ccaa390192755eb9428a26cea4851a10516c)
---+++ /dev/null	(revision 14b1ccaa390192755eb9428a26cea4851a10516c)
---@@ -1,57 +0,0 @@
----package com.singularity.ipcaplus.cryptography
----
----import android.content.Context
----import android.preference.PreferenceManager
----import android.widget.Toast
----import java.io.ByteArrayInputStream
----import java.io.ByteArrayOutputStream
----import java.io.ObjectInputStream
----import java.io.ObjectOutputStream
----import javax.crypto.Cipher
----import javax.crypto.KeyGenerator
----import javax.crypto.SecretKey
----import javax.crypto.spec.IvParameterSpec
----
----fun saveSecretKey(context:Context, secretKey: SecretKey) {
----    val baos = ByteArrayOutputStream()
----    val oos = ObjectOutputStream(baos)
----    oos.writeObject(secretKey)
----
----    val strToSave = String(android.util.Base64.encode(baos.toByteArray(), android.util.Base64.DEFAULT))
----    val sharedPref = PreferenceManager.getDefaultSharedPreferences(context)
----    val editor = sharedPref.edit()
----    editor.putString("secret_key", strToSave)
----    editor.apply()
----}
----
----fun getSavedSecretKey(context: Context): SecretKey {
----
----    val sharedPref = PreferenceManager.getDefaultSharedPreferences(context)
----    val strSecretKey = sharedPref.getString("secret_key", "")
----
----    val bytes = android.util.Base64.decode(strSecretKey, android.util.Base64.DEFAULT)
----    val ois = ObjectInputStream(ByteArrayInputStream(bytes))
----
----    val secretKey = ois.readObject() as SecretKey
----    return secretKey
----}
----
----fun saveInitializationVector(context: Context, initializationVector: ByteArray) {
----    val baos = ByteArrayOutputStream()
----    val oos = ObjectOutputStream(baos)
----    oos.writeObject(initializationVector)
----    val strToSave = String(android.util.Base64.encode(baos.toByteArray(), android.util.Base64.DEFAULT))
----    val sharedPref = PreferenceManager.getDefaultSharedPreferences(context)
----    val editor = sharedPref.edit()
----    editor.putString("initialization_vector", strToSave)
----    editor.apply()
----}
----
----fun getSavedInitializationVector(context: Context) : ByteArray {
----    val sharedPref = PreferenceManager.getDefaultSharedPreferences(context)
----    val strInitializationVector = sharedPref.getString("initialization_vector", "")
----    val bytes = android.util.Base64.decode(strInitializationVector, android.util.Base64.DEFAULT)
----    val ois = ObjectInputStream(ByteArrayInputStream(bytes))
----    val initializationVector = ois.readObject() as ByteArray
----    return initializationVector
----}
---Index: app/src/main/java/com/singularity/ipcaplus/cryptography/AdvancedAES.kt
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/cryptography/AdvancedAES.kt b/app/src/main/java/com/singularity/ipcaplus/cryptography/AdvancedAES.kt
---deleted file mode 100644
------ a/app/src/main/java/com/singularity/ipcaplus/cryptography/AdvancedAES.kt	(revision 14b1ccaa390192755eb9428a26cea4851a10516c)
---+++ /dev/null	(revision 14b1ccaa390192755eb9428a26cea4851a10516c)
---@@ -1,92 +0,0 @@
----package com.singularity.ipcaplus.cryptography
----
----import org.bouncycastle.jce.provider.BouncyCastleProvider
----import org.bouncycastle.util.encoders.Base64
----import java.io.UnsupportedEncodingException
----import java.security.InvalidKeyException
----import java.security.NoSuchAlgorithmException
----import java.security.Security
----import javax.crypto.*
----import javax.crypto.spec.SecretKeySpec
----
----fun encrypt(strToEncrypt: String, secret_key: String): String? {
----    Security.addProvider(BouncyCastleProvider())
----    var keyBytes: ByteArray
----
----    try {
----        keyBytes = secret_key.toByteArray(charset("UTF8"))
----        val skey = SecretKeySpec(keyBytes, "AES")
----        val input = strToEncrypt.toByteArray(charset("UTF8"))
----
----        synchronized(Cipher::class.java) {
----            val cipher = Cipher.getInstance("AES/ECB/PKCS7Padding")
----            cipher.init(Cipher.ENCRYPT_MODE, skey)
----
----            val cipherText = ByteArray(cipher.getOutputSize(input.size))
----            var ctLength = cipher.update(
----                input, 0, input.size,
----                cipherText, 0
----            )
----            ctLength += cipher.doFinal(cipherText, ctLength)
----            return String(
----                Base64.encode(cipherText)
----            )
----        }
----    } catch (uee: UnsupportedEncodingException) {
----        uee.printStackTrace()
----    } catch (ibse: IllegalBlockSizeException) {
----        ibse.printStackTrace()
----    } catch (bpe: BadPaddingException) {
----        bpe.printStackTrace()
----    } catch (ike: InvalidKeyException) {
----        ike.printStackTrace()
----    } catch (nspe: NoSuchPaddingException) {
----        nspe.printStackTrace()
----    } catch (nsae: NoSuchAlgorithmException) {
----        nsae.printStackTrace()
----    } catch (e: ShortBufferException) {
----        e.printStackTrace()
----    }
----
----    return null
----}
----
----
----fun decryptWithAES(key: String, strToDecrypt: String?): String? {
----    Security.addProvider(BouncyCastleProvider())
----    var keyBytes: ByteArray
----
----    try {
----        keyBytes = key.toByteArray(charset("UTF8"))
----        val skey = SecretKeySpec(keyBytes, "AES")
----        val input = org.bouncycastle.util.encoders.Base64
----            .decode(strToDecrypt?.trim { it <= ' ' }?.toByteArray(charset("UTF8")))
----
----        synchronized(Cipher::class.java) {
----            val cipher = Cipher.getInstance("AES/ECB/PKCS7Padding")
----            cipher.init(Cipher.DECRYPT_MODE, skey)
----
----            val plainText = ByteArray(cipher.getOutputSize(input.size))
----            var ptLength = cipher.update(input, 0, input.size, plainText, 0)
----            ptLength += cipher.doFinal(plainText, ptLength)
----            val decryptedString = String(plainText)
----            return decryptedString.trim { it <= ' ' }
----        }
----    } catch (uee: UnsupportedEncodingException) {
----        uee.printStackTrace()
----    } catch (ibse: IllegalBlockSizeException) {
----        ibse.printStackTrace()
----    } catch (bpe: BadPaddingException) {
----        bpe.printStackTrace()
----    } catch (ike: InvalidKeyException) {
----        ike.printStackTrace()
----    } catch (nspe: NoSuchPaddingException) {
----        nspe.printStackTrace()
----    } catch (nsae: NoSuchAlgorithmException) {
----        nsae.printStackTrace()
----    } catch (e: ShortBufferException) {
----        e.printStackTrace()
----    }
----
----    return null
----}
---\ No newline at end of file
---Index: .idea/misc.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_add_userdrawer_icons.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_delete.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_more.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/menu_chat.xml\" value=\"0.20520833333333333\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_camera.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_upload.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/fragment_tab.xml\" value=\"0.20520833333333333\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_system.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/gradient_shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_video.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.26766304347826086\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/misc.xml b/.idea/misc.xml
------ a/.idea/misc.xml	(revision 14b1ccaa390192755eb9428a26cea4851a10516c)
---+++ b/.idea/misc.xml	(date 1640711897022)
---@@ -9,17 +9,14 @@
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml" value="0.3828125" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/chat_photo.xml" value="0.25364583333333335" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.23802083333333332" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml" value="0.23802083333333332" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml" value="0.3828125" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_add_userdrawer_icons.xml" value="0.25364583333333335" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml" value="0.2520833333333333" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_delete.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml" value="0.3828125" />
---@@ -37,7 +34,6 @@
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml" value="0.33" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.36277173913043476" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml" value="0.2359375" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_more.xml" value="0.2375" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml" value="0.2359375" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.2359375" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml" value="0.2359375" />
---@@ -58,7 +54,6 @@
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml" value="0.36666666666666664" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.36666666666666664" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/menu_chat.xml" value="0.20520833333333333" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml" value="0.29074074074074074" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml" value="0.2953703703703704" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.3101851851851852" />
---@@ -70,7 +65,6 @@
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml" value="0.2957427536231884" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml" value="0.2957427536231884" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml" value="0.28940217391304346" />
----        <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/fragment_tab.xml" value="0.20520833333333333" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml" value="0.67" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml" value="0.28940217391304346" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml" value="0.2694746376811594" />
---@@ -79,10 +73,12 @@
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_pesquisa.xml" value="0.26268115942028986" />
---         <entry key="..\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.25" />
---         <entry key="..\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.128125" />
---+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_launcher_background.xml" value="0.22135416666666666" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml" value="0.22135416666666666" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml" value="0.33" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
---+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_verify_security_number.xml" value="0.28306159420289856" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.28306159420289856" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
---Index: app/src/main/AndroidManifest.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".chat.ChatMoreActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\"com.theartofdev.edmodo.cropper.CropImageActivity\"\r\n            android:theme=\"@style/Base.Theme.AppCompat\" /> <!-- optional (needed if default theme has no action bar) -->\r\n        <activity\r\n            android:name=\".drawer.ScheduleActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.NewsWebActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".chat.SearchActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"SearchActivity\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".chat.ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
------ a/app/src/main/AndroidManifest.xml	(revision 14b1ccaa390192755eb9428a26cea4851a10516c)
---+++ b/app/src/main/AndroidManifest.xml	(date 1640711693824)
---@@ -14,6 +14,9 @@
---         android:supportsRtl="true"
---         android:theme="@style/Theme.IPCA">
---         <activity
---+            android:name=".chat.VerifySecurityNumberActivity"
---+            android:exported="false" />
---+        <activity
---             android:name=".chat.ChatMoreActivity"
---             android:exported="false" />
---         <activity
---Index: app/src/main/res/values/strings.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><resources>\r\n    <string name=\"app_name\">IPCA+</string>\r\n    <string name=\"title_activity_tab\">TabActivity</string>\r\n    <string name=\"tab_text_1\">Tab 1</string>\r\n    <string name=\"tab_text_2\">Tab 2</string>\r\n    <string name=\"title_activity_drawer\">DrawerActivity</string>\r\n    <string name=\"navigation_drawer_open\">Open navigation drawer</string>\r\n    <string name=\"navigation_drawer_close\">Close navigation drawer</string>\r\n    <string name=\"nav_header_title\">Android Studio</string>\r\n    <string name=\"nav_header_subtitle\">android.studio@android.com</string>\r\n    <string name=\"nav_header_desc\">Navigation header</string>\r\n    <string name=\"action_settings\">Settings</string>\r\n\r\n    <string name=\"menu_home\">Home</string>\r\n    <string name=\"oficiais\">Oficiais</string>\r\n    <string name=\"chats\">Chats</string>\r\n    <string name=\"search_bar_icon\">search_bar_icon</string>\r\n    <string name=\"horario\">Horário</string>\r\n    <string name=\"calendario\">Calendário</string>\r\n    <string name=\"convidar_amigos\">Convidar amigos</string>\r\n    <string name=\"noticias\">Notícias</string>\r\n    <string name=\"title_activity_add_event\">AddEventActivity</string>\r\n    <!-- Strings used for fragments for navigation -->\r\n    <string name=\"first_fragment_label\">First Fragment</string>\r\n    <string name=\"second_fragment_label\">Second Fragment</string>\r\n    <string name=\"next\">Next</string>\r\n    <string name=\"previous\">Previous</string>\r\n\r\n    <string name=\"hello_first_fragment\">Hello first fragment</string>\r\n    <string name=\"hello_second_fragment\">Hello second fragment. Arg: %1$s</string>\r\n    <string name=\"perfil\">Perfil</string>\r\n    <string name=\"contactos\">Contactos</string>\r\n</resources>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
------ a/app/src/main/res/values/strings.xml	(revision 14b1ccaa390192755eb9428a26cea4851a10516c)
---+++ b/app/src/main/res/values/strings.xml	(date 1640713968045)
---@@ -30,4 +30,8 @@
---     <string name="hello_second_fragment">Hello second fragment. Arg: %1$s</string>
---     <string name="perfil">Perfil</string>
---     <string name="contactos">Contactos</string>
---+    <string name="info_key">Para verificar a seguranca da sua encriptacao com este\n utilizador, compare os numeros acima com o dispositivo do outro utilizador\n Tambem pode digitalizar o codigo atraves do codigo QR no telemovel de outra pessoa</string>
---+    <string name="marcar_como_verificado">Marcar como verificado!</string>
---+    <string name="Oxr_ex">00000 00000 00000\n 00000 00000 00000\n 00000 00000 00000</string>
---+    <string name="toque_para_ler">Toque para ler</string>
--- </resources>
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_15_PM_[Default_Changelist]/shelved.patch	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,447 +0,0 @@
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---@@ -1,129 +0,0 @@
----Index: app/src/main/res/navigation/mobile_navigation.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarActivity\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/activity_calendar\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_contacts\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ContactsActivity\"\r\n        android:label=\"@string/contactos\"\r\n        tools:layout=\"@layout/activity_contacts\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_profile\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ProfileActivity\"\r\n        android:label=\"@string/perfil\"\r\n        tools:layout=\"@layout/activity_profile\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_schedule\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.ScheduleActivity\"\r\n        android:label=\"@string/horario\"\r\n        tools:layout=\"@layout/activity_schedule\"/>\r\n\r\n</navigation>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
------- a/app/src/main/res/navigation/mobile_navigation.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
----+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640207826371)
----@@ -47,4 +47,10 @@
----         android:label="@string/horario"
----         tools:layout="@layout/activity_schedule"/>
---- 
----+    <activity
----+        android:id="@+id/nav_news"
----+        android:name="com.singularity.ipcaplus.NewsWebActivity"
----+        android:label="News"
----+        tools:layout="@layout/activity_news_web"/>
----+
---- </navigation>
----\ No newline at end of file
----Index: app/src/main/res/layout/activity_schedule.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".calendar.ScheduleActivity\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:paddingVertical=\"10dp\">\r\n\r\n        <Button\r\n            android:id=\"@+id/button_seg\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Seg\"\r\n            android:textColor=\"@color/white\"\r\n            app:backgroundTint=\"@color/green_200\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_ter\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Ter\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qua\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qua\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qui\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qui\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_sex\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Sex\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerViewSchedule\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/layout/activity_schedule.xml b/app/src/main/res/layout/activity_schedule.xml
------- a/app/src/main/res/layout/activity_schedule.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
----+++ b/app/src/main/res/layout/activity_schedule.xml	(date 1640207826376)
----@@ -28,7 +28,7 @@
----             app:backgroundTint="@color/green_200"
----             app:layout_constraintEnd_toEndOf="parent"
----             app:layout_constraintStart_toStartOf="parent"
-----            app:layout_constraintTop_toTopOf="parent" />
----+            app:layout_constraintTop_toTopOf="parent"/>
---- 
----         <Button
----             android:id="@+id/button_ter"
----Index: app/src/main/AndroidManifest.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".calendar.ScheduleActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".TabActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/title_activity_tab\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
------- a/app/src/main/AndroidManifest.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
----+++ b/app/src/main/AndroidManifest.xml	(date 1640207826380)
----@@ -13,6 +13,9 @@
----             android:name=".calendar.ScheduleActivity"
----             android:exported="false" />
----         <activity
----+            android:name=".NewsWebActivity"
----+            android:exported="false" />
----+        <activity
----             android:name=".profile.ContactsActivity"
----             android:exported="false" />
----         <activity
----@@ -63,5 +66,8 @@
----             android:name="preloaded_fonts"
----             android:resource="@array/preloaded_fonts" />
----     </application>
----+    <uses-permission android:name="android.permission.INTERNET"/>
----+
----+
---- 
---- </manifest>
----\ No newline at end of file
----Index: .idea/misc.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2554347826086957\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/gradient_shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_video.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.26766304347826086\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/.idea/misc.xml b/.idea/misc.xml
------- a/.idea/misc.xml	(revision c7f21520ccb1766bebcc205ab3ef7a99dcee62a5)
----+++ b/.idea/misc.xml	(date 1640207852743)
----@@ -3,9 +3,12 @@
----   <component name="DesignSurface">
----     <option name="filePathToZoomLevelMap">
----       <map>
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.23802083333333332" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml" value="0.23802083333333332" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml" value="0.3828125" />
----@@ -13,6 +16,7 @@
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml" value="0.2520833333333333" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml" value="0.3828125" />
----@@ -30,19 +34,26 @@
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml" value="0.33" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.36277173913043476" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml" value="0.36277173913043476" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.3546195652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml" value="0.33" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.358695652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml" value="0.7456647398843931" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.3546195652173913" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml" value="0.3546195652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml" value="0.36666666666666664" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.36666666666666664" />
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml" value="0.29074074074074074" />
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml" value="0.2953703703703704" />
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.3101851851851852" />
---Index: .idea/deploymentTargetDropDown.xml
---===================================================================
---diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
---deleted file mode 100644
------ a/.idea/deploymentTargetDropDown.xml	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---@@ -1,17 +0,0 @@
----<?xml version="1.0" encoding="UTF-8"?>
----<project version="4">
----  <component name="deploymentTargetDropDown">
----    <runningDeviceTargetSelectedWithDropDown>
----      <Target>
----        <type value="RUNNING_DEVICE_TARGET" />
----        <deviceKey>
----          <Key>
----            <type value="SERIAL_NUMBER" />
----            <value value="df6a949f" />
----          </Key>
----        </deviceKey>
----      </Target>
----    </runningDeviceTargetSelectedWithDropDown>
----    <timeTargetWasSelectedWithDropDown value="2021-12-28T23:20:58.593285700Z" />
----  </component>
----</project>
---\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]/shelved.patch
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]/shelved.patch
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]/shelved.patch	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---@@ -1,28 +0,0 @@
----Index: app/src/main/res/navigation/mobile_navigation.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarFragment\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n</navigation>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
------- a/app/src/main/res/navigation/mobile_navigation.xml	(revision dff33d8afb09b8e5acd0ca7438ef5351cb22e12b)
----+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640121336982)
----@@ -24,9 +24,15 @@
----         tools:layout="@layout/fragment_home" />
---- 
----     <fragment
-----        android:id="@+id/nav_calendar"
----+        android:id="@+id/nav_calendar2"
----         android:name="com.singularity.ipcaplus.calendar.CalendarFragment"
----         android:label="@string/calendario"
----         tools:layout="@layout/fragment_home" />
---- 
----+    <activity
----+        android:id="@+id/nav_calendar"
----+        android:name="com.singularity.ipcaplus.calendar.AddEventActivity"
----+        android:label="@string/calendario"
----+        tools:layout="@layout/fragment_calendar"/>
----+
---- </navigation>
----\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM__Default_Changelist_.xml	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---@@ -1,4 +0,0 @@
----<changelist name="Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]" date="1640201060341" recycled="true" deleted="true">
----  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch" />
----  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/22/2021 7:24 PM [Default Changelist]" />
----</changelist>
---\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM__Default_Changelist_.xml
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM__Default_Changelist_.xml
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM__Default_Changelist_.xml	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---@@ -1,4 +0,0 @@
----<changelist name="Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]" date="1640123151252" recycled="true" deleted="true">
----  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_21_2021_9_44_PM_[Default_Changelist]/shelved.patch" />
----  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/21/2021 9:44 PM [Default Changelist]" />
----</changelist>
---\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM__Default_Changelist_.xml	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---@@ -1,4 +0,0 @@
----<changelist name="Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]" date="1640207852780" recycled="true" deleted="true">
----  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch" />
----  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/22/2021 9:17 PM [Default Changelist]" />
----</changelist>
---\ No newline at end of file
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_9_17_PM_[Default_Changelist]/shelved.patch	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---@@ -1,129 +0,0 @@
----Index: app/src/main/res/navigation/mobile_navigation.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarActivity\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/activity_calendar\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_contacts\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ContactsActivity\"\r\n        android:label=\"@string/contactos\"\r\n        tools:layout=\"@layout/activity_contacts\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_profile\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ProfileActivity\"\r\n        android:label=\"@string/perfil\"\r\n        tools:layout=\"@layout/activity_profile\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_schedule\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.ScheduleActivity\"\r\n        android:label=\"@string/horario\"\r\n        tools:layout=\"@layout/activity_schedule\"/>\r\n\r\n</navigation>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
------- a/app/src/main/res/navigation/mobile_navigation.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
----+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640201060311)
----@@ -47,4 +47,10 @@
----         android:label="@string/horario"
----         tools:layout="@layout/activity_schedule"/>
---- 
----+    <activity
----+        android:id="@+id/nav_news"
----+        android:name="com.singularity.ipcaplus.NewsWebActivity"
----+        android:label="News"
----+        tools:layout="@layout/activity_news_web"/>
----+
---- </navigation>
----\ No newline at end of file
----Index: app/src/main/res/layout/activity_schedule.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".calendar.ScheduleActivity\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:paddingVertical=\"10dp\">\r\n\r\n        <Button\r\n            android:id=\"@+id/button_seg\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Seg\"\r\n            android:textColor=\"@color/white\"\r\n            app:backgroundTint=\"@color/green_200\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_ter\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Ter\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qua\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qua\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qui\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qui\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_sex\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Sex\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerViewSchedule\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/layout/activity_schedule.xml b/app/src/main/res/layout/activity_schedule.xml
------- a/app/src/main/res/layout/activity_schedule.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
----+++ b/app/src/main/res/layout/activity_schedule.xml	(date 1640201359608)
----@@ -28,7 +28,7 @@
----             app:backgroundTint="@color/green_200"
----             app:layout_constraintEnd_toEndOf="parent"
----             app:layout_constraintStart_toStartOf="parent"
-----            app:layout_constraintTop_toTopOf="parent" />
----+            app:layout_constraintTop_toTopOf="parent"/>
---- 
----         <Button
----             android:id="@+id/button_ter"
----Index: app/src/main/AndroidManifest.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".calendar.ScheduleActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".TabActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/title_activity_tab\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
------- a/app/src/main/AndroidManifest.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
----+++ b/app/src/main/AndroidManifest.xml	(date 1640201881840)
----@@ -13,6 +13,9 @@
----             android:name=".calendar.ScheduleActivity"
----             android:exported="false" />
----         <activity
----+            android:name=".NewsWebActivity"
----+            android:exported="false" />
----+        <activity
----             android:name=".profile.ContactsActivity"
----             android:exported="false" />
----         <activity
----@@ -63,5 +66,8 @@
----             android:name="preloaded_fonts"
----             android:resource="@array/preloaded_fonts" />
----     </application>
----+    <uses-permission android:name="android.permission.INTERNET"/>
----+
----+
---- 
---- </manifest>
----\ No newline at end of file
----Index: .idea/misc.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_breaktime.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2554347826086957\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/.idea/misc.xml b/.idea/misc.xml
------- a/.idea/misc.xml	(revision 11229e1c5b6adea5ce3d3cf0f446592002df9d69)
----+++ b/.idea/misc.xml	(date 1640201362085)
----@@ -3,12 +3,9 @@
----   <component name="DesignSurface">
----     <option name="filePathToZoomLevelMap">
----       <map>
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml" value="0.3828125" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml" value="0.3828125" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml" value="0.3828125" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.23802083333333332" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml" value="0.23802083333333332" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml" value="0.3828125" />
----@@ -40,7 +37,6 @@
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml" value="0.36277173913043476" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml" value="0.2359375" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.3546195652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml" value="0.2359375" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml" value="0.2359375" />
----@@ -48,10 +44,7 @@
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml" value="0.33" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.358695652173913" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_breaktime.xml" value="0.3546195652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml" value="0.7456647398843931" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.3546195652173913" />
-----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml" value="0.3546195652173913" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
----         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.36666666666666664" />
----@@ -70,10 +63,15 @@
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.17831813576494426" />
----         <entry key="..\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.25" />
----         <entry key="..\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.128125" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml" value="0.22135416666666666" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml" value="0.33" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.2980072463768116" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_login.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_news_web.xml" value="0.23333333333333334" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.36666666666666664" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.28306159420289856" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_7_24_PM_[Default_Changelist]/shelved.patch	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---@@ -1,60 +0,0 @@
----Index: app/src/main/res/navigation/mobile_navigation.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarActivity\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/activity_calendar\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_contacts\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ContactsActivity\"\r\n        android:label=\"@string/contactos\"\r\n        tools:layout=\"@layout/activity_contacts\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_profile\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ProfileActivity\"\r\n        android:label=\"@string/perfil\"\r\n        tools:layout=\"@layout/activity_profile\"/>\r\n\r\n</navigation>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
------- a/app/src/main/res/navigation/mobile_navigation.xml	(revision 8d367902f92b3e8617eec2e46c989383c121afd9)
----+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640174002308)
----@@ -41,4 +41,10 @@
----         android:label="@string/perfil"
----         tools:layout="@layout/activity_profile"/>
---- 
----+    <activity
----+        android:id="@+id/nav_news"
----+        android:name="com.singularity.ipcaplus.NewsWebActivity"
----+        android:label="News"
----+        tools:layout="@layout/activity_news_web"/>
----+
---- </navigation>
----\ No newline at end of file
----Index: .idea/misc.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2554347826086957\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/.idea/misc.xml b/.idea/misc.xml
------- a/.idea/misc.xml	(revision 8d367902f92b3e8617eec2e46c989383c121afd9)
----+++ b/.idea/misc.xml	(date 1640174014960)
----@@ -67,6 +67,7 @@
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml" value="0.33" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
----+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_news_web.xml" value="0.23333333333333334" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.28306159420289856" />
----         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
----Index: app/src/main/AndroidManifest.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".profile.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".TabActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/title_activity_tab\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
------- a/app/src/main/AndroidManifest.xml	(revision 8d367902f92b3e8617eec2e46c989383c121afd9)
----+++ b/app/src/main/AndroidManifest.xml	(date 1640173886516)
----@@ -10,6 +10,9 @@
----         android:supportsRtl="true"
----         android:theme="@style/Theme.IPCA">
----         <activity
----+            android:name=".NewsWebActivity"
----+            android:exported="false" />
----+        <activity
----             android:name=".profile.ContactsActivity"
----             android:exported="false" />
----         <activity
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM__Default_Changelist_.xml	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---+++ /dev/null	(revision c79bd3de531fe4b6811eef5231656a3fde1288df)
---@@ -1,4 +0,0 @@
----<changelist name="Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]" date="1640211744948" recycled="true" deleted="true">
----  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_22_2021_10_21_PM_[Default_Changelist]/shelved.patch" />
----  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/22/2021 10:21 PM [Default Changelist]" />
----</changelist>
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_8_50_PM__Default_Changelist_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_8_50_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_8_50_PM__Default_Changelist_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_8_50_PM__Default_Changelist_.xml	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_12_28_2021_8_50_PM_[Default_Changelist]" date="1640724660371" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_8_50_PM_[Default_Changelist]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/28/2021 8:50 PM [Default Changelist]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_30_2021_11_12_PM_[Default_Changelist]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_30_2021_11_12_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_30_2021_11_12_PM_[Default_Changelist]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_30_2021_11_12_PM_[Default_Changelist]/shelved.patch	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,236 +0,0 @@
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_23_2021_12_32_AM_[Default_Changelist]/shelved.patch
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_23_2021_12_32_AM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_23_2021_12_32_AM_[Default_Changelist]/shelved.patch
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_23_2021_12_32_AM_[Default_Changelist]/shelved.patch	(revision 63b26574c9f1bf2f7e6a305d44f2d55af61f1c09)
---+++ /dev/null	(revision 63b26574c9f1bf2f7e6a305d44f2d55af61f1c09)
---@@ -1,194 +0,0 @@
----Index: app/src/main/res/navigation/mobile_navigation.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/mobile_navigation\"\r\n    app:startDestination=\"@+id/nav_home\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_home\"\r\n        android:name=\"com.singularity.ipcaplus.home.HomeFragment\"\r\n        android:label=\"@string/menu_home\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.ChatsFragment\"\r\n        android:label=\"@string/chats\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_official_chats\"\r\n        android:name=\"com.singularity.ipcaplus.home.OfficialChatsFragment\"\r\n        android:label=\"@string/oficiais\"\r\n        tools:layout=\"@layout/fragment_home\" />\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_calendar\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.CalendarActivity\"\r\n        android:label=\"@string/calendario\"\r\n        tools:layout=\"@layout/activity_calendar\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_contacts\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ContactsActivity\"\r\n        android:label=\"@string/contactos\"\r\n        tools:layout=\"@layout/activity_contacts\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_profile\"\r\n        android:name=\"com.singularity.ipcaplus.profile.ProfileActivity\"\r\n        android:label=\"@string/perfil\"\r\n        tools:layout=\"@layout/activity_profile\"/>\r\n\r\n    <activity\r\n        android:id=\"@+id/nav_schedule\"\r\n        android:name=\"com.singularity.ipcaplus.calendar.ScheduleActivity\"\r\n        android:label=\"@string/horario\"\r\n        tools:layout=\"@layout/activity_schedule\"/>\r\n\r\n</navigation>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
------- a/app/src/main/res/navigation/mobile_navigation.xml	(revision 02cab1e2bb09d37af6243a7f837489fd8feab72d)
----+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1640211717540)
----@@ -47,4 +47,10 @@
----         android:label="@string/horario"
----         tools:layout="@layout/activity_schedule"/>
---- 
----+    <activity
----+        android:id="@+id/nav_news"
----+        android:name="com.singularity.ipcaplus.NewsWebActivity"
----+        android:label="News"
----+        tools:layout="@layout/activity_news_web"/>
----+
---- </navigation>
----\ No newline at end of file
----Index: app/src/main/res/layout/activity_schedule.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".calendar.ScheduleActivity\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:paddingVertical=\"10dp\">\r\n\r\n        <Button\r\n            android:id=\"@+id/button_seg\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Seg\"\r\n            android:textColor=\"@color/white\"\r\n            app:backgroundTint=\"@color/green_200\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_ter\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Ter\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qua\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qua\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_qui\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Qui\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_sex\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:layout_marginHorizontal=\"5dp\"\r\n            android:background=\"@drawable/button_week_day\"\r\n            android:text=\"Sex\"\r\n            android:textColor=\"@color/black\"\r\n            app:backgroundTint=\"@null\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerViewSchedule\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/res/layout/activity_schedule.xml b/app/src/main/res/layout/activity_schedule.xml
------- a/app/src/main/res/layout/activity_schedule.xml	(revision 02cab1e2bb09d37af6243a7f837489fd8feab72d)
----+++ b/app/src/main/res/layout/activity_schedule.xml	(date 1640211717545)
----@@ -28,7 +28,7 @@
----             app:backgroundTint="@color/green_200"
----             app:layout_constraintEnd_toEndOf="parent"
----             app:layout_constraintStart_toStartOf="parent"
-----            app:layout_constraintTop_toTopOf="parent" />
----+            app:layout_constraintTop_toTopOf="parent"/>
---- 
----         <Button
----             android:id="@+id/button_ter"
----Index: app/src/main/AndroidManifest.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".calendar.ScheduleActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".calendar.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".TabActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/title_activity_tab\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
------- a/app/src/main/AndroidManifest.xml	(revision 02cab1e2bb09d37af6243a7f837489fd8feab72d)
----+++ b/app/src/main/AndroidManifest.xml	(date 1640211717549)
----@@ -13,6 +13,9 @@
----             android:name=".calendar.ScheduleActivity"
----             android:exported="false" />
----         <activity
----+            android:name=".NewsWebActivity"
----+            android:exported="false" />
----+        <activity
----             android:name=".profile.ContactsActivity"
----             android:exported="false" />
----         <activity
----@@ -63,5 +66,8 @@
----             android:name="preloaded_fonts"
----             android:resource="@array/preloaded_fonts" />
----     </application>
----+    <uses-permission android:name="android.permission.INTERNET"/>
----+
----+
---- 
---- </manifest>
----\ No newline at end of file
----Index: .idea/misc.xml
----IDEA additional info:
----Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
----<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_camera.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_upload.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_system.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
----Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
----<+>UTF-8
----===================================================================
----diff --git a/.idea/misc.xml b/.idea/misc.xml
------- a/.idea/misc.xml	(revision 02cab1e2bb09d37af6243a7f837489fd8feab72d)
----+++ b/.idea/misc.xml	(date 1640211744914)
----@@ -3,6 +3,57 @@
----   <component name="DesignSurface">
----     <option name="filePathToZoomLevelMap">
----       <map>
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.23802083333333332" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml" value="0.23802083333333332" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml" value="0.2520833333333333" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml" value="0.3828125" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml" value="0.33" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.36277173913043476" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml" value="0.36666666666666664" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml" value="0.36277173913043476" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.3546195652173913" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.36666666666666664" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml" value="0.2359375" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.36666666666666664" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml" value="0.36666666666666664" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml" value="0.33" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.358695652173913" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml" value="0.7456647398843931" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.3546195652173913" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml" value="0.3546195652173913" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml" value="0.36666666666666664" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
----+        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.36666666666666664" />
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml" value="0.29074074074074074" />
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml" value="0.2953703703703704" />
----         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.3101851851851852" />
----@@ -41,24 +92,54 @@
----         <entry key="..\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.13020833333333334" />
----         <entry key="..\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.25416666666666665" />
----         <entry key="..\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.25416666666666665" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/chat_photo.xml" value="0.3769230769230769" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/gradient_shadow.xml" value="0.3769230769230769" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_video.xml" value="0.3769230769230769" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/shadow.xml" value="0.3769230769230769" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_add_event.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_contacts.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_register.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.5" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_tab.xml" value="0.26766304347826086" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/content_main.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_chat.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_pesquisa.xml" value="0.33" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
----+        <entry key="..\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.36666666666666664" />
----         <entry key="app/src/main/res/drawable/button_register.xml" value="0.3425925925925926" />
----         <entry key="app/src/main/res/drawable/event_shape.xml" value="0.31203703703703706" />
----         <entry key="app/src/main/res/drawable/ic_baseline_add_24.xml" value="0.3671875" />
----         <entry key="app/src/main/res/drawable/ic_baseline_dehaze_24.xml" value="0.3671875" />
----         <entry key="app/src/main/res/drawable/ic_frame_4.xml" value="0.3671875" />
----+        <entry key="app/src/main/res/drawable/ic_lg_ipca.xml" value="0.36153846153846153" />
----+        <entry key="app/src/main/res/drawable/pop_up_round_corners.xml" value="0.36153846153846153" />
----         <entry key="app/src/main/res/drawable/round_corner_drawer.xml" value="0.21354166666666666" />
----         <entry key="app/src/main/res/drawable/rounded_shape.xml" value="0.20208333333333334" />
----         <entry key="app/src/main/res/layout/activity_drawer.xml" value="0.35104166666666664" />
----         <entry key="app/src/main/res/layout/activity_drawer_activty.xml" value="0.14402173913043478" />
----         <entry key="app/src/main/res/layout/activity_login.xml" value="0.19427083333333334" />
----+        <entry key="app/src/main/res/layout/activity_search.xml" value="0.32563405797101447" />
----         <entry key="app/src/main/res/layout/activity_tab.xml" value="0.33" />
----         <entry key="app/src/main/res/layout/activity_welcome.xml" value="0.33" />
----         <entry key="app/src/main/res/layout/app_bar_drawer.xml" value="0.35104166666666664" />
----         <entry key="app/src/main/res/layout/app_bar_main.xml" value="0.1707193515704154" />
----         <entry key="app/src/main/res/layout/content_drawer.xml" value="0.35104166666666664" />
----+        <entry key="app/src/main/res/layout/content_main.xml" value="0.32563405797101447" />
----         <entry key="app/src/main/res/layout/fragment_gallery.xml" value="0.35104166666666664" />
----         <entry key="app/src/main/res/layout/fragment_home.xml" value="0.35104166666666664" />
----+        <entry key="app/src/main/res/layout/fragment_official_chats.xml" value="0.32563405797101447" />
----         <entry key="app/src/main/res/layout/fragment_tab.xml" value="0.3489583333333333" />
----+        <entry key="app/src/main/res/layout/nav_header_main.xml" value="0.32563405797101447" />
----+        <entry key="app/src/main/res/layout/row_chat.xml" value="0.32563405797101447" />
----+        <entry key="app/src/main/res/menu/activity_drawer.xml" value="0.35104166666666664" />
----+        <entry key="app/src/main/res/menu/drawer.xml" value="0.325" />
----       </map>
----     </option>
----   </component>
---Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_23_2021_12_32_AM__Default_Changelist_.xml
---===================================================================
---diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_23_2021_12_32_AM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_23_2021_12_32_AM__Default_Changelist_.xml
---deleted file mode 100644
------ a/.idea/shelf/Uncommitted_changes_before_Update_at_12_23_2021_12_32_AM__Default_Changelist_.xml	(revision 63b26574c9f1bf2f7e6a305d44f2d55af61f1c09)
---+++ /dev/null	(revision 63b26574c9f1bf2f7e6a305d44f2d55af61f1c09)
---@@ -1,4 +0,0 @@
----<changelist name="Uncommitted_changes_before_Update_at_12_23_2021_12_32_AM_[Default_Changelist]" date="1640219533900" recycled="true" deleted="true">
----  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_23_2021_12_32_AM_[Default_Changelist]/shelved.patch" />
----  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/23/2021 12:32 AM [Default Changelist]" />
----</changelist>
---\ No newline at end of file
---Index: .idea/misc.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_gray_background_outline.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_add_userdrawer_icons.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_delete.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_file.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_files.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_members.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_more.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_news_web.xml\" value=\"0.24375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_terms_and_condictions.xml\" value=\"0.21642145230185098\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_select_image.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_select_name.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_file.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_search.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_user_in_chat.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/menu_chat.xml\" value=\"0.20520833333333333\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_camera.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_upload.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_system.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/gradient_shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_video.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.26766304347826086\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/misc.xml b/.idea/misc.xml
------ a/.idea/misc.xml	(revision 63b26574c9f1bf2f7e6a305d44f2d55af61f1c09)
---+++ b/.idea/misc.xml	(date 1640905942836)
---@@ -94,7 +94,12 @@
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml" value="0.22135416666666666" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml" value="0.33" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
---+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/font/poppins.xml" value="0.396875" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
---+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_rdpd_in.xml" value="0.3125" />
---+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_register.xml" value="0.3125" />
---+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_rgpd_end.xml" value="0.3125" />
---+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_terms_and_condictions.xml" value="0.17831813576494426" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.28306159420289856" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_38_PM__Default_Changelist_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_38_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_38_PM__Default_Changelist_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_38_PM__Default_Changelist_.xml	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_12_29_2021_11_38_PM_[Default_Changelist]" date="1640821128358" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_29_2021_11_38_PM_[Default_Changelist]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/29/2021 11:38 PM [Default Changelist]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_27_2021_11_12_AM_[Default_Changelist]/shelved.patch	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,47 +0,0 @@
---Index: app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport java.util.Base64\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.WindowManager\r\nimport android.widget.ImageView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.calendar.AddEventActivity\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityDrawerActivtyBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.profile.ProfileActivity\r\nimport java.lang.StringBuilder\r\nimport java.util.Base64.getEncoder\r\nimport java.util.concurrent.TimeUnit\r\nimport javax.crypto.KeyGenerator\r\nimport javax.crypto.SecretKey\r\nimport kotlin.random.Random\r\n\r\n\r\nclass DrawerActivty : AppCompatActivity() {\r\n\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var binding: ActivityDrawerActivtyBinding\r\n\r\n    val db = Firebase.firestore\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityDrawerActivtyBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.navView.getHeaderView(0).findViewById<ImageView>(R.id.imageView_profile).setOnClickListener {\r\n\r\n            val intent = Intent(this, ProfileActivity::class.java)\r\n            startActivity(intent)\r\n\r\n        }\r\n\r\n        //val secretKey: String = \"662ede816988e58fb6d057d9d85605e0\"\r\n\r\n        /*val message = \"Hello Welcome to Solanium Dr.Diogo\"\r\n        var meta = encryptMeta(message, keygen)\r\n        println(meta)\r\n\r\n        val message_decripted = decryptWithAESmeta(keygen, meta)\r\n        println(message_decripted)*/\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n        window.setFlags(\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n            WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n\r\n\r\n        binding.appBarMain.fabAddChat.setOnClickListener { view ->\r\n            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show()\r\n        }\r\n        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        val stampCurrent = System.currentTimeMillis()\r\n        val stampSec = TimeUnit.MILLISECONDS.toSeconds(stampCurrent)\r\n        val stampNano = TimeUnit.MILLISECONDS.toNanos(stampCurrent).toInt()\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.nav_home\r\n            ), drawerLayout\r\n        )\r\n\r\n        // Criação de Chat\r\n        binding.appBarMain.fabAddChat.setOnClickListener {\r\n\r\n            /*val keygen = metaGenrateKey()\r\n\r\n            val intent = Intent(this, ChatActivity::class.java)\r\n            intent.putExtra(\"keygen\", keygen)\r\n            startActivity(intent)*/\r\n\r\n            val chat = Chat(\r\n                \"Chat Teste \" + Random.nextInt(256),\r\n                \"chat\"\r\n            )\r\n\r\n            var meta = encryptMeta(\"This is an Alpha Chat, bugs are expected, please report them if you found some. Welcome to Singularity!\", \"662ede816988e58fb6d057d9d85605e0\")\r\n            val message = Message(\r\n                \"system\",\r\n                meta.toString(),\r\n                \"2021-12-22\",\r\n                Timestamp.now(),\r\n                \"\"\r\n\r\n            )\r\n            db.collection(\"chat\")\r\n                .add(chat.toHash())\r\n                .addOnSuccessListener { documentReference ->\r\n                    db.collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .collection(\"message\")\r\n                        .add(message.toHash())\r\n                    db.collection(\"profile\")\r\n                        .document(\"${Firebase.auth.currentUser!!.uid}\")\r\n                        .collection(\"chat\")\r\n                        .document(\"${documentReference.id}\")\r\n                        .set(chat)\r\n\r\n                }\r\n                .addOnFailureListener { e ->\r\n                    Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                }\r\n\r\n        }\r\n        // Passing each fragment ID as a set of Ids\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        menuInflater.inflate(R.menu.drawer, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt
------ a/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(revision db6f0662753bfe0d8d9a8102dae42e6ff910c141)
---+++ b/app/src/main/java/com/singularity/ipcaplus/DrawerActivty.kt	(date 1640484576403)
---@@ -31,11 +31,8 @@
--- import com.singularity.ipcaplus.models.Chat
--- import com.singularity.ipcaplus.models.Message
--- import com.singularity.ipcaplus.profile.ProfileActivity
----import java.lang.StringBuilder
----import java.util.Base64.getEncoder
--- import java.util.concurrent.TimeUnit
--- import javax.crypto.KeyGenerator
----import javax.crypto.SecretKey
--- import kotlin.random.Random
--- 
--- 
---Index: .idea/deploymentTargetDropDown.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\diogo\\.android\\avd\\Pixel_5_API_27.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2021-12-20T17:50:43.965935700Z\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
------ a/.idea/deploymentTargetDropDown.xml	(revision db6f0662753bfe0d8d9a8102dae42e6ff910c141)
---+++ b/.idea/deploymentTargetDropDown.xml	(date 1640484631324)
---@@ -7,11 +7,11 @@
---         <deviceKey>
---           <Key>
---             <type value="VIRTUAL_DEVICE_PATH" />
----            <value value="C:\Users\diogo\.android\avd\Pixel_5_API_27.avd" />
---+            <value value="C:\Users\diogo\.android\avd\Pixel_3_API_27.avd" />
---           </Key>
---         </deviceKey>
---       </Target>
---     </targetSelectedWithDropDown>
----    <timeTargetWasSelectedWithDropDown value="2021-12-20T17:50:43.965935700Z" />
---+    <timeTargetWasSelectedWithDropDown value="2021-12-26T02:10:29.711791600Z" />
---   </component>
--- </project>
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_8_50_PM_[Default_Changelist]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_8_50_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_8_50_PM_[Default_Changelist]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_28_2021_8_50_PM_[Default_Changelist]/shelved.patch	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,329 +0,0 @@
---Index: app/src/main/java/com/singularity/ipcaplus/chat/ChatMoreActivity.kt
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.Intent\r\nimport android.media.Image\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.widget.Button\r\nimport android.widget.EditText\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.appcompat.app.AlertDialog\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.WelcomeActivity\r\nimport com.singularity.ipcaplus.databinding.ActivityChatMoreBinding\r\nimport com.singularity.ipcaplus.utils.ActivityImageHelper\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.theartofdev.edmodo.cropper.CropImage\r\nimport com.theartofdev.edmodo.cropper.CropImageView\r\n\r\nclass ChatMoreActivity : ActivityImageHelper() {\r\n\r\n    private var imageUri: Uri? = null\r\n    lateinit var imageViewGroup: ImageView\r\n    lateinit var imageViewDialog: ImageView\r\n    lateinit var chat_id: String\r\n    private lateinit var binding: ActivityChatMoreBinding\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_chat_more)\r\n\r\n        // Create the layout for this fragment\r\n        binding = ActivityChatMoreBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        // Create Action Bar\r\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\r\n        supportActionBar?.setHomeAsUpIndicator(R.drawable.ic_arrow_back_24)\r\n        supportActionBar?.title = \"Definições do grupo\"\r\n\r\n        // Get previous data\r\n        chat_id = intent.getStringExtra(\"chat_id\").toString()\r\n        val chat_name = intent.getStringExtra(\"chat_name\").toString()\r\n        binding.textViewGroupName.text = chat_name\r\n\r\n        // Get Group Image\r\n        imageViewGroup = binding.imageViewGroup\r\n        Utilis.getImage(\"chats/$chat_id.png\") { bitmap ->\r\n            imageViewGroup.setImageBitmap(bitmap)\r\n        }\r\n\r\n        binding.seeGroupMembers.setOnClickListener {\r\n            val intent = Intent(this, ChatMembersActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        binding.changeGroupName.setOnClickListener {\r\n            openSelectNameDialog()\r\n        }\r\n\r\n        binding.changeGroupImage.setOnClickListener {\r\n            openSelectImageDialog()\r\n        }\r\n\r\n        binding.groupFiles.setOnClickListener {\r\n            println(\"-------------> 4\")\r\n        }\r\n\r\n        binding.notifications.setOnClickListener {\r\n            println(\"-------------> 5\")\r\n        }\r\n    }\r\n\r\n    // When the support action bar back button is pressed, the app will go back to the previous activity\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        onBackPressed()\r\n        return true\r\n    }\r\n\r\n\r\n    /*\r\n        This function display a dialog window with a text box to edit chat name\r\n     */\r\n    private fun openSelectImageDialog() {\r\n\r\n        // Variables\r\n        val alertDialog = AlertDialog.Builder(this)\r\n        val row = layoutInflater.inflate(R.layout.dialog_select_image, null)\r\n        imageViewDialog = row.findViewById(R.id.imageViewGroup)\r\n\r\n        Utilis.getImage(\"chats/$chat_id.png\") { bitmap ->\r\n            row.findViewById<ImageView>(R.id.imageViewGroup).setImageBitmap(bitmap)\r\n        }\r\n\r\n        alertDialog.setOnCancelListener {\r\n            println(\"------------------ saiu\")\r\n        }\r\n\r\n        imageViewDialog.setOnClickListener {\r\n            checkPermission(android.Manifest.permission.READ_EXTERNAL_STORAGE, STORAGE_PERMISSION_CODE)\r\n        }\r\n\r\n        row.findViewById<Button>(R.id.buttonSave).setOnClickListener {\r\n            try {\r\n                Utilis.uploadImage(imageUri!!, \"chats/$chat_id.png\", this)\r\n            }\r\n            catch (error: Throwable){\r\n            }\r\n        }\r\n\r\n        // Create dialog\r\n        alertDialog.setView(row)\r\n        alertDialog.create().show()\r\n    }\r\n\r\n\r\n    /*\r\n        This function display a dialog window with a text box to edit chat name\r\n     */\r\n    private fun openSelectNameDialog() {\r\n\r\n        // Variables\r\n        val alertDialog = AlertDialog.Builder(this)\r\n        val row = layoutInflater.inflate(R.layout.dialog_select_name, null)\r\n\r\n        alertDialog.setOnCancelListener {\r\n            println(\"------------------ saiu\")\r\n        }\r\n\r\n        row.findViewById<Button>(R.id.buttonSave).setOnClickListener {\r\n            val newName = row.findViewById<EditText>(R.id.editTextName).text.toString()\r\n            Backend.changeChatName(chat_id, newName)\r\n        }\r\n\r\n        // Create dialog\r\n        alertDialog.setView(row)\r\n        alertDialog.create().show()\r\n    }\r\n\r\n\r\n    /*\r\n       This function happen after picking photo, and make changes in the activity\r\n    */\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n\r\n        if(requestCode == IMAGE_REQUEST_CODE && resultCode == RESULT_OK){\r\n            CropImage.activity(data?.data)\r\n                .setGuidelines(CropImageView.Guidelines.ON)\r\n                .setAspectRatio(1,1)\r\n                .start(this)\r\n        }\r\n\r\n        if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {\r\n            val result = CropImage.getActivityResult(data)\r\n            if (resultCode == RESULT_OK) {\r\n                imageViewGroup.setImageURI(result.uri)\r\n                imageViewDialog.setImageURI(result.uri)\r\n                imageUri = result.uri\r\n            }\r\n        }\r\n    }\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/ChatMoreActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/ChatMoreActivity.kt
------ a/app/src/main/java/com/singularity/ipcaplus/chat/ChatMoreActivity.kt	(revision 00c4b06b2fabdc73686475c72401b669341ad057)
---+++ b/app/src/main/java/com/singularity/ipcaplus/chat/ChatMoreActivity.kt	(date 1640718767887)
---@@ -15,6 +15,7 @@
--- import com.singularity.ipcaplus.R
--- import com.singularity.ipcaplus.WelcomeActivity
--- import com.singularity.ipcaplus.databinding.ActivityChatMoreBinding
---+import com.singularity.ipcaplus.drawer.DrawerActivty
--- import com.singularity.ipcaplus.utils.ActivityImageHelper
--- import com.singularity.ipcaplus.utils.Backend
--- import com.singularity.ipcaplus.utils.Utilis
---@@ -73,6 +74,14 @@
---         binding.notifications.setOnClickListener {
---             println("-------------> 5")
---         }
---+
---+        binding.securityNumberVerification.setOnClickListener {
---+            println("-------------> 6")
---+            val intent = Intent(this, VerifySecurityNumberActivity::class.java )
---+            intent.putExtra("chat_id", chat_id)
---+            startActivity(intent)
---+
---+        }
---     }
--- 
---     // When the support action bar back button is pressed, the app will go back to the previous activity
---Index: app/build.gradle
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>plugins {\r\n    id 'com.android.application'\r\n    id 'kotlin-android'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 31\r\n\r\n    defaultConfig {\r\n        applicationId \"com.singularity.ipcaplus\"\r\n        minSdk 22\r\n        targetSdk 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.6.0'\r\n    implementation 'androidx.appcompat:appcompat:1.3.1'\r\n    implementation 'com.google.android.material:material:1.4.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'\r\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'\r\n    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.gridlayout:gridlayout:1.0.0'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    //Firebase\r\n    implementation platform('com.google.firebase:firebase-bom:28.4.1')\r\n    implementation 'com.google.firebase:firebase-analytics-ktx'\r\n    implementation 'com.google.firebase:firebase-auth-ktx'\r\n    implementation 'com.google.firebase:firebase-firestore-ktx'\r\n    implementation 'com.google.firebase:firebase-storage-ktx'\r\n    implementation 'com.google.firebase:firebase-messaging-ktx'\r\n    implementation 'org.bouncycastle:bcpkix-jdk15on:1.56'\r\n\r\n    implementation 'com.github.sundeepk:compact-calendar-view:3.0.0'\r\n\r\n    implementation 'com.github.bumptech.glide:glide:4.12.0'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n    //image crop\r\n    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.+'\r\n\r\n    //picasso\r\n    implementation 'com.squareup.picasso:picasso:2.5.2'\r\n\r\n    //security\r\n    implementation \"androidx.security:security-crypto:1.1.0-alpha03\"\r\n\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/build.gradle b/app/build.gradle
------ a/app/build.gradle	(revision 00c4b06b2fabdc73686475c72401b669341ad057)
---+++ b/app/build.gradle	(date 1640719273846)
---@@ -73,5 +73,9 @@
--- 
---     //security
---     implementation "androidx.security:security-crypto:1.1.0-alpha03"
---+    implementation 'com.journeyapps:zxing-android-embedded:3.0.2@aar'
---+    implementation 'com.google.zxing:core:3.2.0'
---+    implementation 'com.github.rommansabbir:AnimationX:2.0'
---+
--- 
--- }
---\ No newline at end of file
---Index: app/src/main/java/com/singularity/ipcaplus/cryptography/AESdata.kt
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/cryptography/AESdata.kt b/app/src/main/java/com/singularity/ipcaplus/cryptography/AESdata.kt
---deleted file mode 100644
------ a/app/src/main/java/com/singularity/ipcaplus/cryptography/AESdata.kt	(revision 00c4b06b2fabdc73686475c72401b669341ad057)
---+++ /dev/null	(revision 00c4b06b2fabdc73686475c72401b669341ad057)
---@@ -1,57 +0,0 @@
----package com.singularity.ipcaplus.cryptography
----
----import android.content.Context
----import android.preference.PreferenceManager
----import android.widget.Toast
----import java.io.ByteArrayInputStream
----import java.io.ByteArrayOutputStream
----import java.io.ObjectInputStream
----import java.io.ObjectOutputStream
----import javax.crypto.Cipher
----import javax.crypto.KeyGenerator
----import javax.crypto.SecretKey
----import javax.crypto.spec.IvParameterSpec
----
----fun saveSecretKey(context:Context, secretKey: SecretKey) {
----    val baos = ByteArrayOutputStream()
----    val oos = ObjectOutputStream(baos)
----    oos.writeObject(secretKey)
----
----    val strToSave = String(android.util.Base64.encode(baos.toByteArray(), android.util.Base64.DEFAULT))
----    val sharedPref = PreferenceManager.getDefaultSharedPreferences(context)
----    val editor = sharedPref.edit()
----    editor.putString("secret_key", strToSave)
----    editor.apply()
----}
----
----fun getSavedSecretKey(context: Context): SecretKey {
----
----    val sharedPref = PreferenceManager.getDefaultSharedPreferences(context)
----    val strSecretKey = sharedPref.getString("secret_key", "")
----
----    val bytes = android.util.Base64.decode(strSecretKey, android.util.Base64.DEFAULT)
----    val ois = ObjectInputStream(ByteArrayInputStream(bytes))
----
----    val secretKey = ois.readObject() as SecretKey
----    return secretKey
----}
----
----fun saveInitializationVector(context: Context, initializationVector: ByteArray) {
----    val baos = ByteArrayOutputStream()
----    val oos = ObjectOutputStream(baos)
----    oos.writeObject(initializationVector)
----    val strToSave = String(android.util.Base64.encode(baos.toByteArray(), android.util.Base64.DEFAULT))
----    val sharedPref = PreferenceManager.getDefaultSharedPreferences(context)
----    val editor = sharedPref.edit()
----    editor.putString("initialization_vector", strToSave)
----    editor.apply()
----}
----
----fun getSavedInitializationVector(context: Context) : ByteArray {
----    val sharedPref = PreferenceManager.getDefaultSharedPreferences(context)
----    val strInitializationVector = sharedPref.getString("initialization_vector", "")
----    val bytes = android.util.Base64.decode(strInitializationVector, android.util.Base64.DEFAULT)
----    val ois = ObjectInputStream(ByteArrayInputStream(bytes))
----    val initializationVector = ois.readObject() as ByteArray
----    return initializationVector
----}
---Index: app/src/main/java/com/singularity/ipcaplus/cryptography/AdvancedAES.kt
---===================================================================
---diff --git a/app/src/main/java/com/singularity/ipcaplus/cryptography/AdvancedAES.kt b/app/src/main/java/com/singularity/ipcaplus/cryptography/AdvancedAES.kt
---deleted file mode 100644
------ a/app/src/main/java/com/singularity/ipcaplus/cryptography/AdvancedAES.kt	(revision 00c4b06b2fabdc73686475c72401b669341ad057)
---+++ /dev/null	(revision 00c4b06b2fabdc73686475c72401b669341ad057)
---@@ -1,92 +0,0 @@
----package com.singularity.ipcaplus.cryptography
----
----import org.bouncycastle.jce.provider.BouncyCastleProvider
----import org.bouncycastle.util.encoders.Base64
----import java.io.UnsupportedEncodingException
----import java.security.InvalidKeyException
----import java.security.NoSuchAlgorithmException
----import java.security.Security
----import javax.crypto.*
----import javax.crypto.spec.SecretKeySpec
----
----fun encrypt(strToEncrypt: String, secret_key: String): String? {
----    Security.addProvider(BouncyCastleProvider())
----    var keyBytes: ByteArray
----
----    try {
----        keyBytes = secret_key.toByteArray(charset("UTF8"))
----        val skey = SecretKeySpec(keyBytes, "AES")
----        val input = strToEncrypt.toByteArray(charset("UTF8"))
----
----        synchronized(Cipher::class.java) {
----            val cipher = Cipher.getInstance("AES/ECB/PKCS7Padding")
----            cipher.init(Cipher.ENCRYPT_MODE, skey)
----
----            val cipherText = ByteArray(cipher.getOutputSize(input.size))
----            var ctLength = cipher.update(
----                input, 0, input.size,
----                cipherText, 0
----            )
----            ctLength += cipher.doFinal(cipherText, ctLength)
----            return String(
----                Base64.encode(cipherText)
----            )
----        }
----    } catch (uee: UnsupportedEncodingException) {
----        uee.printStackTrace()
----    } catch (ibse: IllegalBlockSizeException) {
----        ibse.printStackTrace()
----    } catch (bpe: BadPaddingException) {
----        bpe.printStackTrace()
----    } catch (ike: InvalidKeyException) {
----        ike.printStackTrace()
----    } catch (nspe: NoSuchPaddingException) {
----        nspe.printStackTrace()
----    } catch (nsae: NoSuchAlgorithmException) {
----        nsae.printStackTrace()
----    } catch (e: ShortBufferException) {
----        e.printStackTrace()
----    }
----
----    return null
----}
----
----
----fun decryptWithAES(key: String, strToDecrypt: String?): String? {
----    Security.addProvider(BouncyCastleProvider())
----    var keyBytes: ByteArray
----
----    try {
----        keyBytes = key.toByteArray(charset("UTF8"))
----        val skey = SecretKeySpec(keyBytes, "AES")
----        val input = org.bouncycastle.util.encoders.Base64
----            .decode(strToDecrypt?.trim { it <= ' ' }?.toByteArray(charset("UTF8")))
----
----        synchronized(Cipher::class.java) {
----            val cipher = Cipher.getInstance("AES/ECB/PKCS7Padding")
----            cipher.init(Cipher.DECRYPT_MODE, skey)
----
----            val plainText = ByteArray(cipher.getOutputSize(input.size))
----            var ptLength = cipher.update(input, 0, input.size, plainText, 0)
----            ptLength += cipher.doFinal(plainText, ptLength)
----            val decryptedString = String(plainText)
----            return decryptedString.trim { it <= ' ' }
----        }
----    } catch (uee: UnsupportedEncodingException) {
----        uee.printStackTrace()
----    } catch (ibse: IllegalBlockSizeException) {
----        ibse.printStackTrace()
----    } catch (bpe: BadPaddingException) {
----        bpe.printStackTrace()
----    } catch (ike: InvalidKeyException) {
----        ike.printStackTrace()
----    } catch (nspe: NoSuchPaddingException) {
----        nspe.printStackTrace()
----    } catch (nsae: NoSuchAlgorithmException) {
----        nsae.printStackTrace()
----    } catch (e: ShortBufferException) {
----        e.printStackTrace()
----    }
----
----    return null
----}
---\ No newline at end of file
---Index: .idea/misc.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_add_userdrawer_icons.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_delete.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_members.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_more.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_select_image.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_select_name.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_search.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_user_in_chat.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/menu_chat.xml\" value=\"0.20520833333333333\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_camera.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_upload.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_system.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/gradient_shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_video.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.26766304347826086\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/misc.xml b/.idea/misc.xml
------ a/.idea/misc.xml	(revision 00c4b06b2fabdc73686475c72401b669341ad057)
---+++ b/.idea/misc.xml	(date 1640718736138)
---@@ -9,17 +9,14 @@
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml" value="0.3828125" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/chat_photo.xml" value="0.25364583333333335" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.23802083333333332" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml" value="0.23802083333333332" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml" value="0.3828125" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_add_userdrawer_icons.xml" value="0.25364583333333335" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml" value="0.2520833333333333" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_delete.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml" value="0.3828125" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml" value="0.3828125" />
---@@ -37,8 +34,6 @@
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml" value="0.33" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.36277173913043476" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml" value="0.2359375" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_members.xml" value="0.2375" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_more.xml" value="0.2375" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml" value="0.2359375" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.2359375" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml" value="0.2359375" />
---@@ -51,20 +46,14 @@
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml" value="0.2359375" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.36666666666666664" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml" value="0.36666666666666664" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_select_image.xml" value="0.2375" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_select_name.xml" value="0.2375" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml" value="0.33" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.358695652173913" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_chat.xml" value="0.2375" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml" value="0.7456647398843931" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml" value="0.3546195652173913" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_search.xml" value="0.2375" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml" value="0.3546195652173913" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_user_in_chat.xml" value="0.33" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml" value="0.36666666666666664" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
---         <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.36666666666666664" />
----        <entry key="..\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/menu_chat.xml" value="0.20520833333333333" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml" value="0.29074074074074074" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml" value="0.2953703703703704" />
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml" value="0.3101851851851852" />
---@@ -84,10 +73,12 @@
---         <entry key="..\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_pesquisa.xml" value="0.26268115942028986" />
---         <entry key="..\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml" value="0.25" />
---         <entry key="..\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml" value="0.128125" />
---+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_launcher_background.xml" value="0.22135416666666666" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml" value="0.22135416666666666" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml" value="0.33" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
---+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_verify_security_number.xml" value="0.28306159420289856" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.28306159420289856" />
---         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
---Index: app/src/main/AndroidManifest.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".chat.ChatMembersActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".chat.ChatMoreActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\"com.theartofdev.edmodo.cropper.CropImageActivity\"\r\n            android:theme=\"@style/Base.Theme.AppCompat\" /> <!-- optional (needed if default theme has no action bar) -->\r\n        <activity\r\n            android:name=\".drawer.ScheduleActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.NewsWebActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".chat.SearchActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"SearchActivity\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".chat.ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
------ a/app/src/main/AndroidManifest.xml	(revision 00c4b06b2fabdc73686475c72401b669341ad057)
---+++ b/app/src/main/AndroidManifest.xml	(date 1640718736157)
---@@ -17,6 +17,9 @@
---             android:name=".chat.ChatMembersActivity"
---             android:exported="false" />
---         <activity
---+            android:name=".chat.VerifySecurityNumberActivity"
---+            android:exported="false" />
---+        <activity
---             android:name=".chat.ChatMoreActivity"
---             android:exported="false" />
---         <activity
---Index: app/src/main/res/values/strings.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><resources>\r\n    <string name=\"app_name\">IPCA+</string>\r\n    <string name=\"title_activity_tab\">TabActivity</string>\r\n    <string name=\"tab_text_1\">Tab 1</string>\r\n    <string name=\"tab_text_2\">Tab 2</string>\r\n    <string name=\"title_activity_drawer\">DrawerActivity</string>\r\n    <string name=\"navigation_drawer_open\">Open navigation drawer</string>\r\n    <string name=\"navigation_drawer_close\">Close navigation drawer</string>\r\n    <string name=\"nav_header_title\">Android Studio</string>\r\n    <string name=\"nav_header_subtitle\">android.studio@android.com</string>\r\n    <string name=\"nav_header_desc\">Navigation header</string>\r\n    <string name=\"action_settings\">Settings</string>\r\n\r\n    <string name=\"menu_home\">Home</string>\r\n    <string name=\"oficiais\">Oficiais</string>\r\n    <string name=\"chats\">Chats</string>\r\n    <string name=\"search_bar_icon\">search_bar_icon</string>\r\n    <string name=\"horario\">Horário</string>\r\n    <string name=\"calendario\">Calendário</string>\r\n    <string name=\"convidar_amigos\">Convidar amigos</string>\r\n    <string name=\"noticias\">Notícias</string>\r\n    <string name=\"title_activity_add_event\">AddEventActivity</string>\r\n    <!-- Strings used for fragments for navigation -->\r\n    <string name=\"first_fragment_label\">First Fragment</string>\r\n    <string name=\"second_fragment_label\">Second Fragment</string>\r\n    <string name=\"next\">Next</string>\r\n    <string name=\"previous\">Previous</string>\r\n\r\n    <string name=\"hello_first_fragment\">Hello first fragment</string>\r\n    <string name=\"hello_second_fragment\">Hello second fragment. Arg: %1$s</string>\r\n    <string name=\"perfil\">Perfil</string>\r\n    <string name=\"contactos\">Contactos</string>\r\n</resources>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
------ a/app/src/main/res/values/strings.xml	(revision 00c4b06b2fabdc73686475c72401b669341ad057)
---+++ b/app/src/main/res/values/strings.xml	(date 1640718736161)
---@@ -30,4 +30,8 @@
---     <string name="hello_second_fragment">Hello second fragment. Arg: %1$s</string>
---     <string name="perfil">Perfil</string>
---     <string name="contactos">Contactos</string>
---+    <string name="info_key">Para verificar a seguranca da sua encriptacao com este\n utilizador, compare os numeros acima com o dispositivo do outro utilizador\n Tambem pode digitalizar o codigo atraves do codigo QR no telemovel de outra pessoa</string>
---+    <string name="marcar_como_verificado">Marcar como verificado!</string>
---+    <string name="Oxr_ex">00000 00000 00000\n 00000 00000 00000\n 00000 00000 00000</string>
---+    <string name="toque_para_ler">Toque para ler</string>
--- </resources>
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_30_2021_11_12_PM__Default_Changelist_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_30_2021_11_12_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_30_2021_11_12_PM__Default_Changelist_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_30_2021_11_12_PM__Default_Changelist_.xml	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ /dev/null	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_12_30_2021_11_12_PM_[Default_Changelist]" date="1640905945348" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_30_2021_11_12_PM_[Default_Changelist]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/30/2021 11:12 PM [Default Changelist]" />
---</changelist>
--\ No newline at end of file
--Index: app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.singularity.ipcaplus.utils\r\n\r\nimport android.app.DownloadManager\r\nimport android.content.Context\r\nimport android.content.res.Resources\r\nimport android.graphics.Bitmap\r\nimport android.graphics.BitmapFactory\r\nimport android.graphics.drawable.BitmapDrawable\r\nimport android.graphics.drawable.GradientDrawable\r\nimport android.net.Uri\r\nimport android.os.Build\r\nimport androidx.annotation.RequiresApi\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.firebase.storage.FirebaseStorage\r\nimport com.google.firebase.storage.StorageReference\r\nimport com.google.firebase.storage.ktx.storage\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport java.io.File\r\nimport java.io.IOException\r\nimport java.lang.Exception\r\nimport java.net.URI\r\nimport java.text.SimpleDateFormat\r\nimport java.time.LocalDate\r\nimport java.util.*\r\nimport java.util.regex.Pattern\r\n\r\nimport androidx.core.content.res.ResourcesCompat\r\nimport androidx.core.graphics.drawable.toBitmap\r\n\r\n\r\nobject  Utilis {\r\n\r\n    /*\r\n        This function return the current month id\r\n     */\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getCurrentMonthId(): Int {\r\n\r\n        val c = LocalDate.now()\r\n        val strArray = Pattern.compile(\"-\").split(c.toString())\r\n\r\n        return strArray[1].toInt()\r\n    }\r\n\r\n    /*\r\n        This function return the current year id\r\n     */\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getCurrentYear(): String {\r\n\r\n        val c = LocalDate.now()\r\n        val strArray = Pattern.compile(\"-\").split(c.toString())\r\n\r\n        return strArray[0]\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getYearByCalendarId(id: Int): Int {\r\n\r\n        var count = id\r\n        var result = 2021 - 121\r\n\r\n        while (count > 0) {\r\n            count -= 1\r\n            result ++\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    /*\r\n        This function return the month value in string by an id\r\n        @month = month id\r\n     */\r\n    fun getMonthById(month: Int): String {\r\n        return when (month) {\r\n            1 -> \"Janeiro\"\r\n            2 -> \"Fevereiro\"\r\n            3 -> \"Março\"\r\n            4 -> \"Abril\"\r\n            5 -> \"Maio\"\r\n            6 -> \"Junho\"\r\n            7 -> \"Julho\"\r\n            8 -> \"Agosto\"\r\n            9 -> \"Setembro\"\r\n            10 -> \"Outubro\"\r\n            11 -> \"Novembro\"\r\n            12 -> \"Dezembro\"\r\n            else -> \"None\"\r\n        }\r\n    }\r\n\r\n    fun convertHoursStringToInt(strVal: String): Int {\r\n        val strArray = Pattern.compile(\":\").split(strVal)\r\n        val result = strArray[0] + strArray[1]\r\n        return result.toInt()\r\n    }\r\n\r\n    fun getDate(milliSeconds: Long, dateFormat: String?): String {\r\n        // Create a DateFormatter object for displaying date in specified format.\r\n        val formatter = SimpleDateFormat(dateFormat)\r\n\r\n        // Create a calendar object that will convert the date and time value in milliseconds to date.\r\n        val calendar: Calendar = Calendar.getInstance()\r\n        calendar.timeInMillis = milliSeconds\r\n        return formatter.format(calendar.time)\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the day\r\n        @date = default date\r\n     */\r\n    fun getDay(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\"T\").split(strArray[2])\r\n\r\n        return strArray2[0]\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the month in text\r\n        @date = default date\r\n     */\r\n    fun getMonth(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n\r\n        return strArray[1].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the year in text\r\n        @date = default date\r\n     */\r\n    fun getYear(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n\r\n        return strArray[0].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the Hours in text\r\n        @date = default date\r\n     */\r\n    fun getHours(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"T\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\":\").split(strArray[1])\r\n\r\n        return strArray2[0].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the Minutes in text\r\n        @date = default date\r\n     */\r\n    fun getMinutes(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"T\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\":\").split(strArray[1])\r\n\r\n        return strArray2[1].toString()\r\n    }\r\n\r\n    /*\r\n        This function get the buffer with the name of filename on assets folder\r\n     */\r\n\r\n    fun getJsonDataFromAsset(context: Context, fileName: String): String? {\r\n        val jsonString: String\r\n        try {\r\n            jsonString = context.assets.open(fileName).bufferedReader().use { it.readText() }\r\n        } catch (ioException: IOException) {\r\n            ioException.printStackTrace()\r\n            return null\r\n        }\r\n        return jsonString\r\n    }\r\n\r\n    fun getFirstAndLastName(fullName: String): String {\r\n\r\n        val nameArray = Pattern.compile(\" \").split(fullName)\r\n\r\n        return nameArray[0] + \" \" + nameArray[nameArray.size-1]\r\n    }\r\n\r\n    /*\r\n       ------------------------------------------------ Images ------------------------------------------------\r\n    */\r\n\r\n    fun convertDrawableToBitmap(context: Context, drawable: Int): Bitmap {\r\n        return BitmapFactory.decodeResource(context.resources, R.drawable.circle)\r\n    }\r\n\r\n\r\n    fun getFile(context: Context, path: String, suffix: String, callback:(Bitmap)->Unit) {\r\n\r\n        // Retrieve image from firebase\r\n        val storageRef = FirebaseStorage.getInstance().reference.child(path)\r\n        val localfile = File.createTempFile(\"tempImage\", suffix)\r\n\r\n        // Set ImageView\r\n        storageRef.getFile(localfile).addOnSuccessListener {\r\n            val bitmap = BitmapFactory.decodeFile(localfile.absolutePath)\r\n            callback(bitmap)\r\n        }.addOnFailureListener {\r\n            val bitmap = (ResourcesCompat.getDrawable(\r\n                context.resources,\r\n                R.drawable.circle,\r\n                null\r\n            ) as GradientDrawable?)!!.toBitmap()\r\n            callback(bitmap)\r\n        }\r\n\r\n    }\r\n\r\n    fun downloadFile(context: Context, fileName: String, fileExtension: String, destinationDirectory: String, uri: Uri) {\r\n\r\n        val downloadManager = context.getSystemService(Context.DOWNLOAD_SERVICE) as DownloadManager\r\n        val request = DownloadManager.Request(uri)\r\n\r\n        request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED)\r\n        request.setDestinationInExternalPublicDir(destinationDirectory, fileName + fileExtension)\r\n\r\n        downloadManager.enqueue(request)\r\n    }\r\n\r\n\r\n    fun uploadFile(filePath: Uri, targetPath: String) {\r\n\r\n        val storage = Firebase.storage\r\n        val storageRef = storage.reference\r\n\r\n        if (filePath != Uri.EMPTY) {\r\n            val ref: StorageReference = storageRef.child(targetPath)\r\n            ref.putFile(filePath)\r\n        }\r\n    }\r\n\r\n\r\n    fun getFileIcon(fileName:String): Int {\r\n        return if (fileName.contains(\".\")) {\r\n\r\n            val extension = Pattern.compile(\"[.]\").split(fileName)[1]\r\n\r\n            when (extension) {\r\n                \"png\", \"jpg\", \"jpeg\", \"jep\", \"jfif\", \"gif\" -> R.drawable.ic_picture\r\n                \"invisible\" -> -1\r\n                else -> R.drawable.ic_file\r\n            }\r\n\r\n        } else\r\n            -1\r\n    }\r\n\r\n\r\n    fun uniqueImageNameGen(): String {\r\n        val characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!#$$%&/()=@[]{}\"\r\n\r\n        val sb = StringBuilder(15)\r\n\r\n        for(x in 0 until 15){\r\n            val random = (characters.indices).random()\r\n            sb.append(characters[random])\r\n        }\r\n\r\n        return sb.toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function gets the domain of email\r\n        split remove the @ and make the array like this -> [a20115][alunos.ipca.pt]\r\n     */\r\n    fun getEmailDomain(email: String) : String{\r\n        val strArray = Pattern.compile(\"@\").split(email)\r\n        val result= strArray[1]\r\n\r\n        return result.toString()\r\n\r\n    }\r\n\r\n    /*\r\n        ------------------------------------------------ Chat ------------------------------------------------\r\n     */\r\n\r\n    /*\r\n       This function returns the encrypted system message\r\n       @callBack = return the list\r\n    */\r\n    fun buildSystemMessage(key: String) : String {\r\n\r\n        // Build encryptation data of first message send by the system\r\n        var message = encryptMeta(\"This chat is being encripted with Singularity Encryption!\", key)\r\n\r\n        return message.toString()\r\n\r\n    }\r\n\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt b/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt
----- a/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ b/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt	(date 1641235033946)
--@@ -28,6 +28,7 @@
-- 
-- import androidx.core.content.res.ResourcesCompat
-- import androidx.core.graphics.drawable.toBitmap
--+import com.google.firebase.auth.FirebaseAuth
-- 
-- 
-- object  Utilis {
--@@ -311,4 +312,9 @@
-- 
--     }
-- 
--+    fun getUID(): String? {
--+        val firebaseAuth = FirebaseAuth.getInstance()
--+        return firebaseAuth.uid
--+    }
--+
-- }
--\ No newline at end of file
--Index: app/src/main/res/layout/activity_splash_screen.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/res/layout/activity_splash_screen.xml b/app/src/main/res/layout/activity_splash_screen.xml
--new file mode 100644
----- /dev/null	(date 1641237107889)
--+++ b/app/src/main/res/layout/activity_splash_screen.xml	(date 1641237107889)
--@@ -0,0 +1,9 @@
--+<?xml version="1.0" encoding="utf-8"?>
--+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
--+    xmlns:app="http://schemas.android.com/apk/res-auto"
--+    xmlns:tools="http://schemas.android.com/tools"
--+    android:layout_width="match_parent"
--+    android:layout_height="match_parent"
--+    tools:context=".chat.SplashScreenActivity">
--+
--+</androidx.constraintlayout.widget.ConstraintLayout>
--\ No newline at end of file
--Index: app/src/main/java/com/singularity/ipcaplus/chat/SplashScreenActivity.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/SplashScreenActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/SplashScreenActivity.kt
--new file mode 100644
----- /dev/null	(date 1641242537018)
--+++ b/app/src/main/java/com/singularity/ipcaplus/chat/SplashScreenActivity.kt	(date 1641242537018)
--@@ -0,0 +1,28 @@
--+package com.singularity.ipcaplus.chat
--+
--+import android.content.ContentValues
--+import android.content.Intent
--+import androidx.appcompat.app.AppCompatActivity
--+import android.os.Bundle
--+import android.util.Log
--+import android.widget.Toast
--+import com.google.android.gms.tasks.OnCompleteListener
--+import com.google.firebase.auth.FirebaseAuth
--+import com.singularity.ipcaplus.R
--+import com.singularity.ipcaplus.drawer.DrawerActivty
--+import com.google.firebase.messaging.FirebaseMessaging
--+
--+
--+class SplashScreenActivity : AppCompatActivity() {
--+
--+    private var firebaseAuth: FirebaseAuth? = null
--+
--+    override fun onCreate(savedInstanceState: Bundle?) {
--+        super.onCreate(savedInstanceState)
--+        setContentView(R.layout.activity_splash_screen)
--+
--+
--+        startActivity(Intent(this, DrawerActivty::class.java))
--+        finish()
--+    }
--+}
--\ No newline at end of file
--Index: .idea/deploymentTargetDropDown.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\diogo\\.android\\avd\\Pixel_3_API_27_2.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2022-01-03T00:57:02.127661800Z\" />\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
----- a/.idea/deploymentTargetDropDown.xml	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ b/.idea/deploymentTargetDropDown.xml	(date 1641395416543)
--@@ -7,11 +7,11 @@
--         <deviceKey>
--           <Key>
--             <type value="VIRTUAL_DEVICE_PATH" />
---            <value value="C:\Users\diogo\.android\avd\Pixel_3_API_27_2.avd" />
--+            <value value="C:\Users\diogo\.android\avd\Pixel_5_R.avd" />
--           </Key>
--         </deviceKey>
--       </Target>
--     </targetSelectedWithDropDown>
---    <timeTargetWasSelectedWithDropDown value="2022-01-03T00:57:02.127661800Z" />
--+    <timeTargetWasSelectedWithDropDown value="2022-01-05T15:10:10.871634600Z" />
--   </component>
-- </project>
--\ No newline at end of file
--Index: app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.*\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.view.isVisible\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.drawer.CalendarActivity\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport com.singularity.ipcaplus.cryptography.getMetaOx\r\nimport com.singularity.ipcaplus.databinding.ActivityChatBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport java.time.LocalDateTime\r\nimport java.time.format.DateTimeFormatter\r\n\r\nclass ChatActivity : AppCompatActivity() {\r\n\r\n    var messages = arrayListOf<Message>()\r\n    var currentUserIsAdmin = false\r\n    private lateinit var binding: ActivityChatBinding\r\n    private lateinit var chat_id : String\r\n    private var mAdapter: RecyclerView.Adapter<*>? = null\r\n    private var mLayoutManager: LinearLayoutManager? = null\r\n\r\n    val db = Firebase.firestore\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_chat)\r\n\r\n        binding = ActivityChatBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        // Variables\r\n        chat_id = intent.getStringExtra(\"chat_id\").toString()\r\n        val current = LocalDateTime.now()\r\n\r\n        val formatter = DateTimeFormatter.BASIC_ISO_DATE\r\n        val formatted = current.format(formatter)\r\n\r\n        // Check if user is admin\r\n        Backend.getChatAdminIds(chat_id) {\r\n            val currentUser = Firebase.auth.currentUser!!.uid\r\n            for (admin in it) {\r\n                if (admin == currentUser)\r\n                    currentUserIsAdmin = true\r\n            }\r\n        }\r\n\r\n        println(\"Current Date is: $formatted\")\r\n\r\n        // Send Message\r\n        binding.fabSend.setOnClickListener {\r\n            if(!binding.editTextMessage.text.isNullOrBlank()) {\r\n                // get data of ecripted shared preferences (\"chatuid\" -> \"key\")\r\n                val keygen = getMetaOx(this, chat_id)\r\n                // Build encryptation data of message send by the user\r\n                var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString())\r\n\r\n                val message = Message(\r\n                    Firebase.auth.currentUser!!.uid,\r\n                    meta.toString(),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n                db.collection(\"chat\").document(\"$chat_id\").collection(\"message\")\r\n                    .add(message.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n                        Log.d(TAG, \"DocumentSnapshot added with ID: ${documentReference.id}\")\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(TAG, \"Error adding document\", e)\r\n                    }\r\n                binding.editTextMessage.text.clear()\r\n            }\r\n        }\r\n\r\n        // Show Messages\r\n        db.collection(\"chat\").document(\"$chat_id\").collection(\"message\").orderBy(\"time\", Query.Direction.DESCENDING)\r\n            .addSnapshotListener { documents, e ->\r\n\r\n                documents?.let {\r\n                    messages.clear()\r\n                    for (document in it) {\r\n                        Log.d(TAG, \"${document.id} => ${document.data}\")\r\n                        val message = Message.fromHash(document)\r\n                        messages.add(message)\r\n\r\n                    }\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n\r\n            }\r\n\r\n        // Recycler View Messages\r\n        mLayoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)\r\n        binding.recycleViewChat.layoutManager = mLayoutManager\r\n        mAdapter = MessageAdapter()\r\n        binding.recycleViewChat.itemAnimator = DefaultItemAnimator()\r\n        binding.recycleViewChat.adapter = mAdapter\r\n\r\n        mLayoutManager!!.reverseLayout = true\r\n\r\n    }\r\n\r\n    /*\r\n       This function create the action bar above the activity\r\n    */\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        val inflater: MenuInflater = menuInflater\r\n        inflater.inflate(R.menu.menu_chat, menu)\r\n\r\n        db.collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    for (document in it) {\r\n                        if(document.id == chat_id) {\r\n                            val chat = Chat.fromHash(document)\r\n                            supportActionBar?.title = chat.name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\r\n        supportActionBar?.setHomeAsUpIndicator(R.drawable.ic_arrow_back_24)\r\n\r\n\r\n        return true\r\n    }\r\n\r\n\r\n    /*\r\n        This function define the events of the action bar buttons\r\n     */\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        super.onOptionsItemSelected(item)\r\n\r\n        when (item.itemId){\r\n            R.id.calendario -> {\r\n                val intent = Intent(this, CalendarActivity::class.java)\r\n                intent.putExtra(\"chat_id\", chat_id)\r\n                intent.putExtra(\"is_admin\", currentUserIsAdmin)\r\n                startActivity(intent)\r\n                return true\r\n            }\r\n            R.id.chatMore -> {\r\n                val intent = Intent(this, ChatMoreActivity::class.java)\r\n                intent.putExtra(\"chat_id\", chat_id)\r\n                println(\"3------------------------------ \" + currentUserIsAdmin)\r\n                intent.putExtra(\"is_admin\", currentUserIsAdmin)\r\n                intent.putExtra(\"chat_name\", supportActionBar?.title)\r\n                startActivity(intent)\r\n                return true\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n\r\n    // When the support action bar back button is pressed, the app will go back to the previous activity\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        onBackPressed()\r\n        return true\r\n    }\r\n\r\n\r\n    inner class MessageAdapter : RecyclerView.Adapter<MessageAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        var otherUser = false\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            if(viewType == 1) {\r\n                otherUser = false\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_self, parent, false))\r\n            } else if (viewType == 2){\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_system, parent, false))\r\n            } else {\r\n                otherUser = true\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_others, parent, false))\r\n            }\r\n\r\n        }\r\n\r\n        @RequiresApi(Build.VERSION_CODES.M)\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n\r\n            holder.v.apply {\r\n\r\n                val textViewMessage = findViewById<TextView>(R.id.textViewMessage)\r\n                val timeLastMessage = findViewById<TextView?>(R.id.timeLastMessage)\r\n\r\n\r\n                timeLastMessage?.isVisible = false\r\n                val keygen = getMetaOx(context, chat_id)\r\n                print( getMetaOx(context, chat_id)).toString()\r\n                val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message)\r\n                textViewMessage.text = message_decripted\r\n                println(message_decripted)\r\n                if(position == messages.size - 1) {\r\n                    val data = Utilis.getDate(\r\n                        messages[position].time.seconds * 1000,\r\n                        \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                    )\r\n                    timeLastMessage.isVisible = true\r\n                    timeLastMessage.text = Utilis.getHours(data) + \":\" + Utilis.getMinutes(data)\r\n                }\r\n\r\n                if (otherUser) {\r\n                    val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)\r\n                    if (imageViewUser != null) {\r\n                        Utilis.getFile(context, \"profilePictures/${messages[position].user}.png\", \"png\") { bitmap ->\r\n                            imageViewUser.setImageBitmap(bitmap)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        override fun getItemViewType(position: Int) : Int {\r\n            if (messages[position].user == Firebase.auth.currentUser!!.uid) {\r\n                return 1\r\n            } else if (messages[position].user == \"system\"){\r\n                return 2\r\n            } else {\r\n                return 0\r\n            }\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return messages.size\r\n        }\r\n\r\n\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt
----- a/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ b/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt	(date 1641242537030)
--@@ -14,11 +14,19 @@
-- import androidx.recyclerview.widget.DefaultItemAnimator
-- import androidx.recyclerview.widget.LinearLayoutManager
-- import androidx.recyclerview.widget.RecyclerView
--+import com.android.volley.Response
--+import com.android.volley.toolbox.JsonObjectRequest
-- import com.google.firebase.Timestamp
-- import com.google.firebase.auth.ktx.auth
--+import com.google.firebase.database.DataSnapshot
--+import com.google.firebase.database.DatabaseError
--+import com.google.firebase.database.FirebaseDatabase
--+import com.google.firebase.database.ValueEventListener
-- import com.google.firebase.firestore.Query
-- import com.google.firebase.firestore.ktx.firestore
-- import com.google.firebase.ktx.Firebase
--+import com.google.gson.Gson
--+import com.singularity.ipcaplus.AppConstants
-- import com.singularity.ipcaplus.drawer.CalendarActivity
-- import com.singularity.ipcaplus.R
-- import com.singularity.ipcaplus.utils.Utilis
--@@ -28,7 +36,12 @@
-- import com.singularity.ipcaplus.databinding.ActivityChatBinding
-- import com.singularity.ipcaplus.models.Chat
-- import com.singularity.ipcaplus.models.Message
--+import com.singularity.ipcaplus.models.PushNotification
-- import com.singularity.ipcaplus.utils.Backend
--+import kotlinx.coroutines.CoroutineScope
--+import kotlinx.coroutines.Dispatchers
--+import kotlinx.coroutines.launch
--+import org.json.JSONObject
-- import java.time.LocalDateTime
-- import java.time.format.DateTimeFormatter
-- 
--@@ -76,6 +89,9 @@
--                 // Build encryptation data of message send by the user
--                 var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString())
-- 
--+                var databaseReference = FirebaseDatabase.getInstance().getReference("Chat").child(chat_id!!)
--+
--+
--                 val message = Message(
--                     Firebase.auth.currentUser!!.uid,
--                     meta.toString(),
--@@ -83,6 +99,9 @@
--                     ""
-- 
--                 )
--+
--+                //getToken(binding.editTextMessage.text.toString())
--+
--                 db.collection("chat").document("$chat_id").collection("message")
--                     .add(message.toHash())
--                     .addOnSuccessListener { documentReference ->
--@@ -261,4 +280,80 @@
-- 
-- 
--     }
---}
--\ No newline at end of file
--+    }
--+
--+
--+
--+
--+
--+
--+
--+
--+
--+
--+
--+private fun getToken(message: String) {
--+
--+    val databaseReference = FirebaseDatabase
--+        .getInstance()
--+        .getReference("Profile")
--+        .child("bEWfuAdTu3bfhHgOaOFkynIgHjH3")
--+
--+    databaseReference
--+        .addListenerForSingleValueEvent(object : ValueEventListener {
--+
--+        override fun onDataChange(snapshot: DataSnapshot) {
--+            if (snapshot.exists()) {
--+                val token = snapshot.child("token")
--+                    .value.toString()
--+
--+                val to = JSONObject()
--+                val data = JSONObject()
--+
--+                data.put("hisId", "Y90PjGQmLsMrxLicWkirOKpPSOx2")
--+                data.put("title", "Bruce Wayne")
--+                data.put("message", message)
--+                data.put("chatId", "CbartuF280ajG8nOAc5L")
--+
--+                to.put("to", token)
--+                to.put("data", data)
--+                sendNotification(to)
--+
--+
--+            }
--+        }
--+
--+        override fun onCancelled(error: DatabaseError) {
--+            TODO("Not yet implemented")
--+        }
--+    })
--+}
--+
--+    private fun sendNotification(to: JSONObject) {
--+
--+        val request: JsonObjectRequest = object : JsonObjectRequest(
--+            Method.POST,
--+            AppConstants.NOTIFICATION_URL,
--+            to,
--+            Response.Listener { response: JSONObject ->
--+
--+                Log.d("TAG", "onResponse: $response")
--+            },
--+            Response.ErrorListener {
--+
--+                Log.d("TAG", "onError: $it")
--+            }) {
--+            override fun getHeaders(): MutableMap<String, String> {
--+                val map: MutableMap<String, String> = HashMap()
--+
--+                map["Authorization"] = "key=" + AppConstants.SERVER_KEY
--+                map["Content-type"] = "application/json"
--+                return map
--+            }
--+
--+            override fun getBodyContentType(): String {
--+                return "application/json"
--+            }
--+        }
--+
--+    }
--\ No newline at end of file
--Index: .idea/misc.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_gray_background_outline.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_add_folder.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_add_userdrawer_icons.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_delete.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_file.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_plus.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/rounded_dialog.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_people.xml\" value=\"0.24375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_files.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_members.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_more.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_news_web.xml\" value=\"0.24375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_terms_and_condictions.xml\" value=\"0.21642145230185098\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_add_file.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_select_image.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_select_name.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_add_pp.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_file.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_search.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_user.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_user_in_chat.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/menu_add.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/menu_chat.xml\" value=\"0.20520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_camera.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_upload.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_add_people.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat_more.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_create_chat.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/fragment_home.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_system.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/gradient_shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_video.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.26766304347826086\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/misc.xml b/.idea/misc.xml
----- a/.idea/misc.xml	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ b/.idea/misc.xml	(date 1641242537408)
--@@ -114,6 +114,7 @@
--         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml" value="0.33" />
--         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
--         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
--+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_splash_screen.xml" value="0.20520833333333333" />
--         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
--         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml" value="0.28306159420289856" />
--         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml" value="0.36666666666666664" />
--Index: app/build.gradle
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>plugins {\r\n    id 'com.android.application'\r\n    id 'kotlin-android'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 31\r\n\r\n    defaultConfig {\r\n        applicationId \"com.singularity.ipcaplus\"\r\n        minSdk 22\r\n        targetSdk 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.6.0'\r\n    implementation 'androidx.appcompat:appcompat:1.3.1'\r\n    implementation 'com.google.android.material:material:1.4.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'\r\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'\r\n    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.gridlayout:gridlayout:1.0.0'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    //Firebase\r\n    implementation platform('com.google.firebase:firebase-bom:28.4.1')\r\n    implementation 'com.google.firebase:firebase-analytics-ktx'\r\n    implementation 'com.google.firebase:firebase-auth-ktx'\r\n    implementation 'com.google.firebase:firebase-firestore-ktx'\r\n    implementation 'com.google.firebase:firebase-storage-ktx'\r\n    implementation 'com.google.firebase:firebase-messaging-ktx'\r\n    implementation 'org.bouncycastle:bcpkix-jdk15on:1.56'\r\n\r\n    // Import the BoM for the Firebase platform\r\n    implementation platform('com.google.firebase:firebase-bom:29.0.2')\r\n\r\n    // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n    implementation 'com.google.firebase:firebase-messaging-ktx'\r\n    implementation 'com.google.firebase:firebase-analytics-ktx'\r\n\r\n    implementation 'com.github.sundeepk:compact-calendar-view:3.0.0'\r\n\r\n    implementation 'com.github.bumptech.glide:glide:4.12.0'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n    //image crop\r\n    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.+'\r\n\r\n    //picasso\r\n    implementation 'com.squareup.picasso:picasso:2.5.2'\r\n\r\n    //security\r\n    implementation \"androidx.security:security-crypto:1.1.0-alpha03\"\r\n    implementation 'com.journeyapps:zxing-android-embedded:3.0.2@aar'\r\n    implementation 'com.google.zxing:core:3.2.0'\r\n    implementation(\"com.android.support.constraint:constraint-layout:2.0.0-beta1\")\r\n\r\n\r\n\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/build.gradle b/app/build.gradle
----- a/app/build.gradle	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ b/app/build.gradle	(date 1641235701263)
--@@ -47,6 +47,8 @@
--     implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
--     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
--     implementation 'androidx.gridlayout:gridlayout:1.0.0'
--+    implementation 'com.google.firebase:firebase-database-ktx:20.0.3'
--+    implementation 'com.android.volley:volley:1.2.0'
--     testImplementation 'junit:junit:4.+'
--     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
--     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
--@@ -84,6 +86,15 @@
--     implementation 'com.journeyapps:zxing-android-embedded:3.0.2@aar'
--     implementation 'com.google.zxing:core:3.2.0'
--     implementation("com.android.support.constraint:constraint-layout:2.0.0-beta1")
--+    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
--+
--+    // Coroutines
--+    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
--+    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
--+
--+    // Retrofit
--+    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
--+    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
-- 
-- 
-- 
--Index: app/src/main/AndroidManifest.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.singularity.ipcaplus\">\r\n\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.IPCA\">\r\n        <activity\r\n            android:name=\".chat.CreateChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".chat.ChatFilesActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".TermsAndCondictionsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".chat.ChatMembersActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".chat.VerifySecurityNumberActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".chat.ChatMoreActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\"com.theartofdev.edmodo.cropper.CropImageActivity\"\r\n            android:theme=\"@style/Base.Theme.AppCompat\" /> <!-- optional (needed if default theme has no action bar) -->\r\n        <activity\r\n            android:name=\".drawer.ScheduleActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.NewsWebActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.ContactsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.CalendarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.AddEventActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".drawer.DrawerActivty\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".chat.SearchActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"SearchActivity\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".AddButtonActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"AddButtonActivity\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".AddPeopleActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"AddButtonActivity\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\" />\r\n        <activity\r\n            android:name=\".chat.ChatActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".WelcomeActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.IPCA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n\r\n        <!-- [START firebase_service] -->\r\n        <service\r\n            android:name=\".utils.MyFirebaseMessagingService\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n        <!-- [END firebase_service] -->\r\n\r\n        <!-- Set custom default icon. This is used when no icon is set for incoming notification messages.\r\n         See README(https://goo.gl/l4GJaQ) for more. -->\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.default_notification_icon\"\r\n            android:resource=\"@drawable/ic_lg_ipca\" />\r\n        <!-- Set color used with incoming notification messages. This is used when no color is set for the incoming\r\n             notification message. See README(https://goo.gl/6BKBk7) for more. -->\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.default_notification_color\"\r\n            android:resource=\"@color/green_200\" />\r\n\r\n        <!-- Set \"canal de notificação padrão com configurações básicas\" -->\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.default_notification_channel_id\"\r\n            android:value=\"@string/default_notification_channel_id\" />\r\n    </application>\r\n\r\n</manifest>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
----- a/app/src/main/AndroidManifest.xml	(revision 4599a1dc43706ca6bb23745f8c1d0f82c5b03976)
--+++ b/app/src/main/AndroidManifest.xml	(date 1641251380491)
--@@ -14,6 +14,10 @@
--         android:supportsRtl="true"
--         android:theme="@style/Theme.IPCA">
--         <activity
--+            android:name=".chat.SplashScreenActivity"
--+            android:exported="true">
--+        </activity>
--+        <activity
--             android:name=".chat.CreateChatActivity"
--             android:exported="true" />
--         <activity
--@@ -93,33 +97,30 @@
--             </intent-filter>
--         </activity>
-- 
---
--         <meta-data
--             android:name="preloaded_fonts"
---            android:resource="@array/preloaded_fonts" />
---
---        <!-- [START firebase_service] -->
--+            android:resource="@array/preloaded_fonts" /> <!-- [START firebase_service] -->
--         <service
--             android:name=".utils.MyFirebaseMessagingService"
--             android:exported="false">
--             <intent-filter>
--                 <action android:name="com.google.firebase.MESSAGING_EVENT" />
--             </intent-filter>
---        </service>
---        <!-- [END firebase_service] -->
---
---        <!-- Set custom default icon. This is used when no icon is set for incoming notification messages.
---         See README(https://goo.gl/l4GJaQ) for more. -->
--+        </service> <!-- [END firebase_service] -->
--+        <!--
--+ Set custom default icon. This is used when no icon is set for incoming notification messages.
--+         See README(https://goo.gl/l4GJaQ) for more.
--+        -->
--         <meta-data
--             android:name="com.google.firebase.messaging.default_notification_icon"
--             android:resource="@drawable/ic_lg_ipca" />
---        <!-- Set color used with incoming notification messages. This is used when no color is set for the incoming
---             notification message. See README(https://goo.gl/6BKBk7) for more. -->
--+        <!--
--+ Set color used with incoming notification messages. This is used when no color is set for the incoming
--+             notification message. See README(https://goo.gl/6BKBk7) for more.
--+        -->
--         <meta-data
--             android:name="com.google.firebase.messaging.default_notification_color"
---            android:resource="@color/green_200" />
---
---        <!-- Set "canal de notificação padrão com configurações básicas" -->
--+            android:resource="@color/green_200" /> <!-- Set "canal de notificação padrão com configurações básicas" -->
--         <meta-data
--             android:name="com.google.firebase.messaging.default_notification_channel_id"
--             android:value="@string/default_notification_channel_id" />
-Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_1_8_2022_12_54_AM__Default_Changelist_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_1_8_2022_12_54_AM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_1_8_2022_12_54_AM__Default_Changelist_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_1_8_2022_12_54_AM__Default_Changelist_.xml	(revision 6ef8a7d344cca7849019506e2d9194d4a6c37199)
-+++ /dev/null	(revision 6ef8a7d344cca7849019506e2d9194d4a6c37199)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Checkout_at_1_8_2022_12_54_AM_[Default_Changelist]" date="1641603254179" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_1_8_2022_12_54_AM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 1/8/2022 12:54 AM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_8_2022_12_49_AM__Default_Changelist_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_8_2022_12_49_AM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_1_8_2022_12_49_AM__Default_Changelist_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_1_8_2022_12_49_AM__Default_Changelist_.xml	(revision 6ef8a7d344cca7849019506e2d9194d4a6c37199)
-+++ /dev/null	(revision 6ef8a7d344cca7849019506e2d9194d4a6c37199)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_1_8_2022_12_49_AM_[Default_Changelist]" date="1641603011130" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_1_8_2022_12_49_AM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 1/8/2022 12:49 AM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_1_8_2022_12_54_AM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_1_8_2022_12_54_AM_[Default_Changelist]/shelved.patch
-deleted file mode 100644
Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_3_27_PM__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_3_27_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_3_27_PM__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_3_27_PM__Default_Changelist_.xml	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
+++ /dev/null	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_1_13_2022_3_27_PM_[Default_Changelist]" date="1642087675963" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_3_27_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 1/13/2022 3:27 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_12_2022_11_58_PM_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_12_2022_11_58_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_1_12_2022_11_58_PM_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_1_12_2022_11_58_PM_[Default_Changelist]/shelved.patch	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
+++ /dev/null	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
@@ -1,56 +0,0 @@
-Index: app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.app.ActionBar\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.*\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.view.isVisible\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.drawer.CalendarActivity\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport com.singularity.ipcaplus.cryptography.getMetaOx\r\nimport com.singularity.ipcaplus.databinding.ActivityChatBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Backend.createJsonArrayString\r\nimport kotlinx.coroutines.*\r\nimport org.json.JSONArray\r\nimport org.json.JSONObject\r\nimport java.io.BufferedOutputStream\r\nimport java.io.BufferedWriter\r\nimport java.io.OutputStream\r\nimport java.io.OutputStreamWriter\r\nimport java.net.URL\r\nimport java.time.LocalDateTime\r\nimport java.time.format.DateTimeFormatter\r\nimport javax.net.ssl.HttpsURLConnection\r\n\r\nclass ChatActivity : AppCompatActivity() {\r\n\r\n    var messages = arrayListOf<Message>()\r\n    var currentUserIsAdmin = false\r\n    private lateinit var binding: ActivityChatBinding\r\n    private lateinit var chat_id : String\r\n    var tokens_adress = arrayListOf<String>()\r\n    var chat_user_uids = arrayListOf<String>()\r\n    private var mAdapter: RecyclerView.Adapter<*>? = null\r\n    private var mLayoutManager: LinearLayoutManager? = null\r\n\r\n    val db = Firebase.firestore\r\n    @SuppressLint(\"WrongConstant\")\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_chat)\r\n\r\n        binding = ActivityChatBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        supportActionBar?.displayOptions = ActionBar.DISPLAY_SHOW_CUSTOM\r\n        supportActionBar?.setCustomView(R.layout.custom_bar_layout)\r\n        findViewById<TextView>(R.id.AppBarTittle).text = \"Chat name\"\r\n        // Back button\r\n        findViewById<ImageView>(R.id.BackButtonImageView).setOnClickListener{\r\n            finish()\r\n        }\r\n\r\n        // Variables\r\n        chat_id = intent.getStringExtra(\"chat_id\").toString()\r\n        val current = LocalDateTime.now()\r\n\r\n        val formatter = DateTimeFormatter.BASIC_ISO_DATE\r\n        val formatted = current.format(formatter)\r\n\r\n        // Check if user is admin\r\n        Backend.getChatAdminIds(chat_id) {\r\n            val currentUser = Firebase.auth.currentUser!!.uid\r\n            for (admin in it) {\r\n                if (admin == currentUser)\r\n                    currentUserIsAdmin = true\r\n            }\r\n        }\r\n\r\n        // Get all members id of chat\r\n        Backend.getChatUsersUids(chat_id){\r\n            chat_user_uids.clear()\r\n            chat_user_uids.addAll(it)\r\n\r\n            for (userId in chat_user_uids){\r\n                // Getting all of tokens of  profile associated devices\r\n                Backend.getAllTokens(userId) {\r\n                    if (tokens_adress.isEmpty()){\r\n                        tokens_adress.clear()\r\n                    }\r\n                    tokens_adress.addAll(it)\r\n\r\n                    /*GlobalScope.launch {\r\n                        withContext(Dispatchers.IO){\r\n                            createNotificationGroup(\"grupotrablahotentativa\", createJsonArrayString(tokens_adress))\r\n                        }\r\n                    }*/\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        println(\"Current Date is: $formatted\")\r\n\r\n        // Send Message\r\n        binding.fabSend.setOnClickListener {\r\n            if(!binding.editTextMessage.text.isNullOrBlank()) {\r\n                // get data of ecripted shared preferences (\"chatuid\" -> \"key\")\r\n                val keygen = getMetaOx(this, chat_id)\r\n                // Build encryptation data of message send by the user\r\n                var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString())\r\n                val savedText = binding.editTextMessage.text.toString()\r\n\r\n                val message = Message(\r\n                    Firebase.auth.currentUser!!.uid,\r\n                    meta.toString(),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n                db.collection(\"chat\").document(\"$chat_id\").collection(\"message\")\r\n                    .add(message.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n\r\n                        GlobalScope.launch {\r\n                            withContext(Dispatchers.IO){\r\n                                //APA91bEKDInIYA242YofpahBmhB57pEI4gNT63DJJenWCccJGqeSYrWzj0BSruX49DhVp2vGSY5xJ2fEJk2vhtoraT3_bbjEKw4Nx3eJKj7tttVRPjQs0Uc_OPkrcj4twR70H5tAilnY\r\n                                println(\"AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\"+ savedText)\r\n                                sendNotificationToGroup( chat_id, savedText, \"APA91bGaOoMTjTD2s9MU63F1AvLqP6tkwdAFE0Mqs9jbghlSgcWlfe_38CboFiE2iiWFoKqNRwhF0G_TA5X9xegTL0_Tg0OGuFadJuBj1sGZqjqCcmF1EH2ZeRU7ySHosdNkmLmmOyFF\")\r\n                            }\r\n                        }\r\n                        Log.d(TAG, \"DocumentSnapshot added with ID: ${documentReference.id}\")\r\n\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(TAG, \"Error adding document\", e)\r\n                    }\r\n                binding.editTextMessage.text.clear()\r\n\r\n            }\r\n        }\r\n\r\n        // Show Messages\r\n        db.collection(\"chat\").document(\"$chat_id\").collection(\"message\").orderBy(\"time\", Query.Direction.DESCENDING)\r\n            .addSnapshotListener { documents, e ->\r\n\r\n                documents?.let {\r\n                    messages.clear()\r\n                    for (document in it) {\r\n                        Log.d(TAG, \"${document.id} => ${document.data}\")\r\n                        val message = Message.fromHash(document)\r\n                        messages.add(message)\r\n\r\n                    }\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n\r\n            }\r\n\r\n        // Recycler View Messages\r\n        mLayoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)\r\n        binding.recycleViewChat.layoutManager = mLayoutManager\r\n        mAdapter = MessageAdapter()\r\n        binding.recycleViewChat.itemAnimator = DefaultItemAnimator()\r\n        binding.recycleViewChat.adapter = mAdapter\r\n\r\n        mLayoutManager!!.reverseLayout = true\r\n\r\n    }\r\n\r\n    /*\r\n       This function create the action bar above the activity\r\n    */\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        val inflater: MenuInflater = menuInflater\r\n        inflater.inflate(R.menu.menu_chat, menu)\r\n\r\n        db.collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    for (document in it) {\r\n                        if(document.id == chat_id) {\r\n                            val chat = Chat.fromHash(document)\r\n                            supportActionBar?.title = chat.name\r\n                            findViewById<TextView>(R.id.AppBarTittle).text = chat.name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        return true\r\n    }\r\n\r\n\r\n    /*\r\n        This function define the events of the action bar buttons\r\n     */\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        super.onOptionsItemSelected(item)\r\n\r\n        when (item.itemId){\r\n            R.id.calendario -> {\r\n                val intent = Intent(this, CalendarActivity::class.java)\r\n                intent.putExtra(\"chat_id\", chat_id)\r\n                intent.putExtra(\"is_admin\", currentUserIsAdmin)\r\n                startActivity(intent)\r\n                return true\r\n            }\r\n            R.id.chatMore -> {\r\n                val intent = Intent(this, ChatMoreActivity::class.java)\r\n                intent.putExtra(\"chat_id\", chat_id)\r\n                println(\"3------------------------------ \" + currentUserIsAdmin)\r\n                intent.putExtra(\"is_admin\", currentUserIsAdmin)\r\n                intent.putExtra(\"chat_name\", findViewById<TextView>(R.id.AppBarTittle).text)\r\n                startActivity(intent)\r\n                return true\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n\r\n    // When the support action bar back button is pressed, the app will go back to the previous activity\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        onBackPressed()\r\n        return true\r\n    }\r\n\r\n\r\n    inner class MessageAdapter : RecyclerView.Adapter<MessageAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        var otherUser = false\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            if(viewType == 1) {\r\n                otherUser = false\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_self, parent, false))\r\n            } else if (viewType == 2){\r\n                otherUser = false\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_system, parent, false))\r\n            } else {\r\n                otherUser = true\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_others, parent, false))\r\n            }\r\n\r\n        }\r\n\r\n        @RequiresApi(Build.VERSION_CODES.M)\r\n         override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n\r\n            holder.v.apply {\r\n\r\n                val textViewMessage = findViewById<TextView>(R.id.textViewMessage)\r\n                val timeLastMessage = findViewById<TextView?>(R.id.timeLastMessage)\r\n                val textViewUsername = findViewById<TextView?>(R.id.textViewUsername)\r\n\r\n\r\n                timeLastMessage?.isVisible = false\r\n                val keygen = getMetaOx(context, chat_id)\r\n                val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message)\r\n\r\n               /* if (otherUser) {\r\n                        Backend.getUserProfile(messages[position].user) {\r\n                            val userName = Utilis.getFirstAndLastName(it.name)\r\n                            textViewUsername.text = userName\r\n                        }\r\n                    }\r\n                */\r\n\r\n                textViewMessage.text = message_decripted\r\n                println(message_decripted)\r\n                if(position == messages.size - 1) {\r\n                    val data = Utilis.getDate(\r\n                        messages[position].time.seconds * 1000,\r\n                        \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                    )\r\n                    timeLastMessage.isVisible = true\r\n                    timeLastMessage.text = Utilis.getHours(data) + \":\" + Utilis.getMinutes(data)\r\n                }\r\n\r\n                if (otherUser) {\r\n                    val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)\r\n                    if (imageViewUser != null) {\r\n                        Utilis.getFile(context, \"profilePictures/${messages[position].user}.png\", \"png\") { bitmap ->\r\n                            imageViewUser.setImageBitmap(bitmap)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        override fun getItemViewType(position: Int) : Int {\r\n            if (messages[position].user == Firebase.auth.currentUser!!.uid) {\r\n                return 1\r\n            } else if (messages[position].user == \"system\"){\r\n                return 2\r\n            } else {\r\n                return 0\r\n            }\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return messages.size\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    private suspend fun  createNotificationGroup(notificationKeyName : String, registrationIds : JSONArray)  {\r\n\r\n        try {\r\n\r\n            Log.d(\"json\", registrationIds.toString())\r\n\r\n            //Request\r\n            val endPoint = URL(\"https://fcm.googleapis.com/fcm/notification\")\r\n\r\n            //Establish a connection\r\n            val httpsURLConnection: HttpsURLConnection =\r\n                endPoint.openConnection() as HttpsURLConnection\r\n\r\n            //Connection to fcm\r\n            //The time available to read from the input stream when the connection is established\r\n            httpsURLConnection.readTimeout = 10000\r\n            //The time available to connect to the url\r\n            httpsURLConnection.connectTimeout = 15000\r\n            //Defining the type of request to be made to the fcm\r\n            httpsURLConnection.requestMethod = \"POST\"\r\n            //Defining that the url connection can be used to send and receive data\r\n            httpsURLConnection.doInput = true\r\n            httpsURLConnection.doOutput = true\r\n\r\n            // Build parameters for json\r\n            httpsURLConnection.setRequestProperty(\"Content-Type\", \"application/json\")\r\n            val project_key = \"AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs\"\r\n            val senderId = \"209455028652\"\r\n            httpsURLConnection.setRequestProperty(\"authorization\", \"key=$project_key\")\r\n            httpsURLConnection.setRequestProperty(\"project_id\", senderId)\r\n\r\n            val json = JSONObject()\r\n\r\n            json.put(\"operation\", \"create\")\r\n            json.put(\"notification_key_name\", notificationKeyName)\r\n            json.put(\"registration_ids\", registrationIds)\r\n\r\n\r\n            // Writer\r\n            val outputStream: OutputStream =\r\n                BufferedOutputStream(httpsURLConnection.outputStream)\r\n            val writer = BufferedWriter(OutputStreamWriter(outputStream, \"utf-8\"))\r\n\r\n            // POST\r\n            writer.write(json.toString())\r\n            writer.flush()\r\n            writer.close()\r\n\r\n            outputStream.close()\r\n\r\n            //The response code and message of the POST requests\r\n            val responseCode: Int = httpsURLConnection.responseCode\r\n            val responseMessage = httpsURLConnection.responseMessage\r\n\r\n            Log.d(TAG, \"$responseCode $responseMessage\")\r\n\r\n\r\n            // Check server STATUS\r\n            if (responseCode in 400..499) {\r\n                httpsURLConnection.errorStream\r\n            } else {\r\n                httpsURLConnection.inputStream\r\n            }\r\n\r\n            if (responseCode == 200) {\r\n                Log.e(TAG, \"Group Created!!\")\r\n\r\n                val response = httpsURLConnection.inputStream.bufferedReader()\r\n                    .use { it.readText() }  // defaults to UTF-8\r\n                withContext(Dispatchers.Main) {\r\n                    //notification_key\r\n                    val jsonObject  = JSONObject(response)\r\n                    val notificationKey = jsonObject.getString(\"notification_key\")\r\n                    println(\"NotifKey: $notificationKey\")\r\n                    Log.d(\"NotifKey\", notificationKey)\r\n                }\r\n            } else {\r\n                Log.e(TAG, \"Error it didn´t work\")\r\n            }\r\n\r\n            //Here i close the connection to the endPoint\r\n            httpsURLConnection.disconnect()\r\n\r\n\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n\r\n    //This function sends push notifications to devices that are subscribed to a specific topic\r\n    private suspend fun sendNotificationToGroup(title: String, message: String, notificationKey : String) {\r\n\r\n        delay(1500)\r\n\r\n        try {\r\n\r\n            //Request\r\n            val url = URL(\"https://fcm.googleapis.com/fcm/send\")\r\n\r\n            //Establish a connection\r\n            val httpsURLConnection: HttpsURLConnection =\r\n                url.openConnection() as HttpsURLConnection\r\n\r\n            //The time available to read from the input stream when the connection is established\r\n            httpsURLConnection.readTimeout = 10000\r\n            //The time available to connect to the url\r\n            httpsURLConnection.connectTimeout = 15000\r\n            //Defining the type of request to be made to the fcm\r\n            httpsURLConnection.requestMethod = \"POST\"\r\n            //Defining that the url connection can be used to send and receive data\r\n            httpsURLConnection.doInput = true\r\n            httpsURLConnection.doOutput = true\r\n\r\n            // Config of FCM\r\n            val project_key = \"AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs\"\r\n            httpsURLConnection.setRequestProperty(\"authorization\", \"key=$project_key\")\r\n            httpsURLConnection.setRequestProperty(\"Content-Type\", \"application/json\")\r\n\r\n            val jsonObject = JSONObject()\r\n            val data = JSONObject()\r\n\r\n            data.put(\"title\", title)\r\n            data.put(\"content\", message)\r\n            //On Notification Click Activity\r\n            data.put(\"click_action\", \".LoginActivity\")\r\n\r\n            //jsonObject for POST\r\n            jsonObject.put(\"data\", data)\r\n            //\r\n            jsonObject.put(\"to\", notificationKey)\r\n\r\n            val outputStream: OutputStream =\r\n                BufferedOutputStream(httpsURLConnection.outputStream)\r\n            val writer = BufferedWriter(OutputStreamWriter(outputStream, \"utf-8\"))\r\n            \r\n            writer.write(jsonObject.toString())\r\n            writer.flush()\r\n            writer.close()\r\n\r\n            outputStream.close()\r\n\r\n            //The response code and message of the POST requests\r\n            val responseCode: Int = httpsURLConnection.responseCode\r\n            val responseMessage: String = httpsURLConnection.responseMessage\r\n\r\n\r\n            Log.d(TAG, \"Response from sendMes: $responseCode $responseMessage\")\r\n\r\n\r\n            // Check server STATUS\r\n            if (responseCode in 400..499) {\r\n                httpsURLConnection.errorStream\r\n            } else {\r\n                httpsURLConnection.inputStream\r\n            }\r\n            if (responseCode == 200) {\r\n                Log.e(\r\n                    TAG,\r\n                    \"Notification Sent \\n Title: $title \\n Body: $message\"\r\n                )\r\n            } else {\r\n                Log.e(TAG, \"Notification Error\")\r\n            }\r\n\r\n            httpsURLConnection.disconnect()\r\n\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt
---- a/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt	(revision 729560612ae4481cd1a73d4c9808ac612b2880c6)
-+++ b/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt	(date 1642031792515)
-@@ -66,7 +66,7 @@
-         setContentView(binding.root)
- 
-         supportActionBar?.displayOptions = ActionBar.DISPLAY_SHOW_CUSTOM
--        supportActionBar?.setCustomView(R.layout.custom_bar_layout)
-+        supportActionBar?.setCustomView(R.layout.appbar_custom_layout_chat)
-         findViewById<TextView>(R.id.AppBarTittle).text = "Chat name"
-         // Back button
-         findViewById<ImageView>(R.id.BackButtonImageView).setOnClickListener{
-@@ -113,6 +113,10 @@
-             }
- 
-         }
-+        val profilePicfromTop = findViewById<ImageView>(R.id.ProfileImageView)
-+        Utilis.getFile(this, "chats/$chat_id/icon.png", "png") { bitmap ->
-+            profilePicfromTop.setImageBitmap(bitmap)
-+        }
- 
-         println("Current Date is: $formatted")
- 
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/breaktime_form.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_filtro.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_green.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_register.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/button_week_day.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_black_border.xml\" value=\"0.23802083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/custom_gray_background_outline.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/datetime_selected_item.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/event_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_add_folder.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_add_userdrawer_icons.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_arrow_back_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_back_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_baseline_arrow_forward_ios_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_contact_icon.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_delete.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_documentdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_file.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_folderdrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_foto_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_homedrawer_icons.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logo_branco_ipca.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_logout.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_camera.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_gallery.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_paper_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_plus.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_search_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/ic_swap_24.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/rounded_dialog.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/drawable/side_nav_bar.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_add_people.xml\" value=\"0.24375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_files.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_members.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat_more.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_news_web.xml\" value=\"0.24375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36277173913043476\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.2359375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_terms_and_condictions.xml\" value=\"0.21642145230185098\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_add_file.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_select_image.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/dialog_select_name.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_add_pp.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_event.xml\" value=\"0.7456647398843931\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_file.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_search.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_subject.xml\" value=\"0.3546195652173913\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_user.xml\" value=\"0.2375\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/row_user_in_chat.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/sample_date_time_picker.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/menu_add.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/menu_chat.xml\" value=\"0.20520833333333333\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/ipca_plus/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_message_shape.xml\" value=\"0.29074074074074074\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/circle.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_camera.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/ic_upload.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3101851851851852\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/drawable/user_message_photo.xml\" value=\"0.2953703703703704\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_add_people.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_chat_more.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_create_chat.xml\" value=\"0.2520833333333333\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_login.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_main.xml\" value=\"0.2957427536231884\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/fragment_home.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message.xml\" value=\"0.28940217391304346\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_others.xml\" value=\"0.2694746376811594\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_message_system.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.26268115942028986\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/ProjetosAndroid/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Asus/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/all_rounded_corners_dialog.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/button_week_day.xml\" value=\"1.0\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_menu_slideshow.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_dialog.xml\" value=\"0.22135416666666666\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml\" value=\"0.3828125\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.29528985507246375\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat_more.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.29528985507246375\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_splash_screen.xml\" value=\"0.20520833333333333\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/custom_bar_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/dialog_add_file.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/dialog_notifications_manager.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/dialog_select_image.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/dialog_select_name.xml\" value=\"0.20520833333333333\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.28306159420289856\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_calendar.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_chats.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.14010416666666667\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.13020833333333334\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/i/AndroidStudioProjects/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/chat_photo.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/gradient_shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/ic_video.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/drawable/shadow.xml\" value=\"0.3769230769230769\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_add_event.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_contacts.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_register.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_search.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_tab.xml\" value=\"0.26766304347826086\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/content_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/nav_header_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_chat.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_message_self.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_pesquisa.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_user.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/layout/row_user_in_chat.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/activity_drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/nunoi/Documents/GitHub/ipca_plus/app/src/main/res/menu/drawer.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"app/src/main/res/drawable/button_register.xml\" value=\"0.3425925925925926\" />\r\n        <entry key=\"app/src/main/res/drawable/event_shape.xml\" value=\"0.31203703703703706\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_add_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_baseline_dehaze_24.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_frame_4.xml\" value=\"0.3671875\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_lg_ipca.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/pop_up_round_corners.xml\" value=\"0.36153846153846153\" />\r\n        <entry key=\"app/src/main/res/drawable/round_corner_drawer.xml\" value=\"0.21354166666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/rounded_shape.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_chat.xml\" value=\"0.1265625\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/activity_drawer_activty.xml\" value=\"0.14402173913043478\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"app/src/main/res/layout/activity_search.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/activity_tab.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/activity_welcome.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/app_bar_main.xml\" value=\"0.1707193515704154\" />\r\n        <entry key=\"app/src/main/res/layout/content_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/content_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_gallery.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_official_chats.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_tab.xml\" value=\"0.3489583333333333\" />\r\n        <entry key=\"app/src/main/res/layout/nav_header_main.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/notification.xml\" value=\"0.5352697095435685\" />\r\n        <entry key=\"app/src/main/res/layout/row_chat.xml\" value=\"0.32563405797101447\" />\r\n        <entry key=\"app/src/main/res/layout/row_message_self.xml\" value=\"0.33\" />\r\n        <entry key=\"app/src/main/res/menu/activity_drawer.xml\" value=\"0.35104166666666664\" />\r\n        <entry key=\"app/src/main/res/menu/drawer.xml\" value=\"0.325\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision 729560612ae4481cd1a73d4c9808ac612b2880c6)
-+++ b/.idea/misc.xml	(date 1642031460523)
-@@ -118,12 +118,15 @@
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_dialog.xml" value="0.22135416666666666" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/drawable/rounded_shape.xml" value="0.3828125" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_calendar.xml" value="0.29528985507246375" />
-+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat_members.xml" value="0.24010416666666667" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_chat_more.xml" value="0.36666666666666664" />
-+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_create_chat.xml" value="0.36666666666666664" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_drawer_activty.xml" value="0.28306159420289856" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_profile.xml" value="0.29528985507246375" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_schedule.xml" value="0.5" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/activity_splash_screen.xml" value="0.20520833333333333" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/app_bar_main.xml" value="0.28306159420289856" />
-+        <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/appbar_custom_layout_chat.xml" value="0.24010416666666667" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/custom_bar_layout.xml" value="0.36666666666666664" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/dialog_add_file.xml" value="0.36666666666666664" />
-         <entry key="..\:/Users/diogo/Documents/GitHub/ipca_plus/app/src/main/res/layout/dialog_notifications_manager.xml" value="0.36666666666666664" />
Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_3_27_PM_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_3_27_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_3_27_PM_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_3_27_PM_[Default_Changelist]/shelved.patch	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
+++ /dev/null	(revision f7062029ccce00fb3edc0e08af27d8ec2a4d8edb)
@@ -1,1590 +0,0 @@
-Index: app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.MenuInflater\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityCreateChatBinding\r\nimport com.singularity.ipcaplus.drawer.DrawerActivty\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.ActivityImageHelper\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.utils.Utilis.buildSystemMessage\r\nimport com.theartofdev.edmodo.cropper.CropImage\r\nimport com.theartofdev.edmodo.cropper.CropImageView\r\n\r\nclass CreateDirectChatActivity : ActivityImageHelper() {\r\n\r\n\r\n    val db = Firebase.firestore\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        // Variables\r\n        var chatName : String\r\n\r\n        var type = intent.getStringExtra(\"type\")!!\r\n        var memberIds = intent.getStringArrayListExtra(\"users\")!!\r\n        println(memberIds)\r\n\r\n        // Generate key for chats\r\n        val keygen = metaGenrateKey()\r\n\r\n            Backend.getUserProfile(memberIds[1]) {\r\n\r\n\r\n                chatName = it.name\r\n                println(\"Nome antes\" + chatName)\r\n\r\n                // Chat data\r\n                var chat = Chat(\r\n                    chatName,\r\n                    type,\r\n                    keygen\r\n                )\r\n\r\n                // System message data\r\n                val message = Message(\r\n                    \"system\",\r\n                    buildSystemMessage(keygen),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n\r\n                val user = HashMap<String, Any>()\r\n                val admin = hashMapOf<String?, Any>(\r\n                    \"admin\" to true\r\n                )\r\n\r\n                db.collection(\"chat\")\r\n                    .add(chat.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n                        db.collection(\"chat\")\r\n                            .document(documentReference.id)\r\n                            .collection(\"message\")\r\n                            .add(message.toHash())\r\n                        for (member in memberIds) {\r\n                            println(\"IDSDSDS\" + memberIds)\r\n                            Backend.getUserProfile(memberIds[0]) {\r\n                                if (member == Firebase.auth.currentUser!!.uid) {\r\n                                    println(\"IF\")\r\n                                    // Chat data\r\n                                    chat = Chat(\r\n                                        it.name,\r\n                                        type,\r\n                                        keygen\r\n                                    )\r\n                                }\r\n                                println(\"NOMEEEEE\" + it.name)\r\n\r\n                                db.collection(\"profile\")\r\n                                    .document(member)\r\n                                    .collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .set(chat)\r\n                                db.collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .collection(\"user\")\r\n                                    .document(member)\r\n                                    .set(user)\r\n                                db.collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .collection(\"user\")\r\n                                    .document(member)\r\n                                    .update(admin)\r\n\r\n                            }\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                    }\r\n\r\n                val intent = Intent(this, DrawerActivty::class.java)\r\n                startActivity(intent)\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt
---- a/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt	(revision 5fa09412663837672a36a41fd04f1700573c5f37)
-+++ b/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt	(date 1642087624652)
-@@ -5,6 +5,7 @@
- import android.net.Uri
- import androidx.appcompat.app.AppCompatActivity
- import android.os.Bundle
-+import android.provider.Settings
- import android.util.Log
- import android.view.Menu
- import android.view.MenuInflater
-@@ -13,6 +14,7 @@
- import com.google.firebase.firestore.ktx.firestore
- import com.google.firebase.ktx.Firebase
- import com.singularity.ipcaplus.R
-+import com.singularity.ipcaplus.cryptography.generateRandomIV
- import com.singularity.ipcaplus.cryptography.metaGenrateKey
- import com.singularity.ipcaplus.databinding.ActivityCreateChatBinding
- import com.singularity.ipcaplus.drawer.DrawerActivty
-@@ -20,15 +22,22 @@
- import com.singularity.ipcaplus.models.Message
- import com.singularity.ipcaplus.utils.ActivityImageHelper
- import com.singularity.ipcaplus.utils.Backend
-+import com.singularity.ipcaplus.utils.Backend.createJsonArrayString
- import com.singularity.ipcaplus.utils.Utilis
- import com.singularity.ipcaplus.utils.Utilis.buildSystemMessage
-+import com.singularity.ipcaplus.utils.Utilis.createNotificationGroup
- import com.theartofdev.edmodo.cropper.CropImage
- import com.theartofdev.edmodo.cropper.CropImageView
-+import kotlinx.coroutines.Dispatchers
-+import kotlinx.coroutines.GlobalScope
-+import kotlinx.coroutines.launch
-+import kotlinx.coroutines.withContext
- 
- class CreateDirectChatActivity : ActivityImageHelper() {
- 
- 
-     val db = Firebase.firestore
-+    var noteKey : String = ""
-     override fun onCreate(savedInstanceState: Bundle?) {
-         super.onCreate(savedInstanceState)
- 
-@@ -37,7 +46,30 @@
- 
-         var type = intent.getStringExtra("type")!!
-         var memberIds = intent.getStringArrayListExtra("users")!!
-+        var tokens_adress = arrayListOf<String>()
-+
-         println(memberIds)
-+        val ivGenerated = generateRandomIV()
-+
-+        for (memberId in memberIds){
-+
-+            // Getting all of tokens of  profile associated devices
-+            Backend.getAllTokens(memberId) {
-+                if (tokens_adress.isEmpty()){
-+                    tokens_adress.clear()
-+                }
-+                tokens_adress.addAll(it)
-+
-+                GlobalScope.launch {
-+                    withContext(Dispatchers.IO){
-+                        Log.d("paaaaaa", tokens_adress.toString())
-+                        noteKey = createNotificationGroup(generateRandomIV(), createJsonArrayString(tokens_adress))
-+                    }
-+                }
-+
-+            }
-+
-+        }
- 
-         // Generate key for chats
-         val keygen = metaGenrateKey()
-@@ -52,13 +84,15 @@
-                 var chat = Chat(
-                     chatName,
-                     type,
--                    keygen
-+                    keygen,
-+                    ivGenerated,
-+                    noteKey
-                 )
- 
-                 // System message data
-                 val message = Message(
-                     "system",
--                    buildSystemMessage(keygen),
-+                    buildSystemMessage(keygen, ivGenerated),
-                     Timestamp.now(),
-                     ""
- 
-@@ -77,7 +111,6 @@
-                             .collection("message")
-                             .add(message.toHash())
-                         for (member in memberIds) {
--                            println("IDSDSDS" + memberIds)
-                             Backend.getUserProfile(memberIds[0]) {
-                                 if (member == Firebase.auth.currentUser!!.uid) {
-                                     println("IF")
-@@ -85,10 +118,11 @@
-                                     chat = Chat(
-                                         it.name,
-                                         type,
--                                        keygen
-+                                        keygen,
-+                                        ivGenerated,
-+                                        noteKey
-                                     )
-                                 }
--                                println("NOMEEEEE" + it.name)
- 
-                                 db.collection("profile")
-                                     .document(member)
-Index: app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.utils\r\n\r\nimport android.app.Activity\r\nimport android.app.DownloadManager\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.res.Resources\r\nimport android.graphics.Bitmap\r\nimport android.graphics.BitmapFactory\r\nimport android.graphics.drawable.BitmapDrawable\r\nimport android.graphics.drawable.GradientDrawable\r\nimport android.net.Uri\r\nimport android.os.Build\r\nimport android.provider.MediaStore\r\nimport android.util.Log\r\nimport androidx.annotation.RequiresApi\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.firebase.storage.FirebaseStorage\r\nimport com.google.firebase.storage.StorageReference\r\nimport com.google.firebase.storage.ktx.storage\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport java.io.File\r\nimport java.io.IOException\r\nimport java.lang.Exception\r\nimport java.net.URI\r\nimport java.text.SimpleDateFormat\r\nimport java.time.LocalDate\r\nimport java.util.*\r\nimport java.util.regex.Pattern\r\n\r\nimport androidx.core.content.res.ResourcesCompat\r\nimport androidx.core.graphics.drawable.toBitmap\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport java.io.ByteArrayOutputStream\r\nimport com.singularity.ipcaplus.chat.ChatActivity\r\n\r\n\r\nobject  Utilis {\r\n\r\n    /*\r\n        This function return the current month id\r\n     */\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getCurrentMonthId(): Int {\r\n\r\n        val c = LocalDate.now()\r\n        val strArray = Pattern.compile(\"-\").split(c.toString())\r\n\r\n        return strArray[1].toInt()\r\n    }\r\n\r\n    /*\r\n        This function return the current year id\r\n     */\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getCurrentYear(): String {\r\n\r\n        val c = LocalDate.now()\r\n        val strArray = Pattern.compile(\"-\").split(c.toString())\r\n\r\n        return strArray[0]\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getYearByCalendarId(id: Int): Int {\r\n\r\n        var count = id\r\n        var result = 2021 - 121 // add 1900\r\n\r\n        while (count > 0) {\r\n            count -= 1\r\n            result ++\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    /*\r\n        This function return the month value in string by an id\r\n        @month = month id\r\n     */\r\n    fun getMonthById(month: Int): String {\r\n        return when (month) {\r\n            1 -> \"Janeiro\"\r\n            2 -> \"Fevereiro\"\r\n            3 -> \"Março\"\r\n            4 -> \"Abril\"\r\n            5 -> \"Maio\"\r\n            6 -> \"Junho\"\r\n            7 -> \"Julho\"\r\n            8 -> \"Agosto\"\r\n            9 -> \"Setembro\"\r\n            10 -> \"Outubro\"\r\n            11 -> \"Novembro\"\r\n            12 -> \"Dezembro\"\r\n            else -> \"None\"\r\n        }\r\n    }\r\n\r\n    fun convertHoursStringToInt(strVal: String): Int {\r\n        val strArray = Pattern.compile(\":\").split(strVal)\r\n        val result = strArray[0] + strArray[1]\r\n        return result.toInt()\r\n    }\r\n\r\n    fun getDate(milliSeconds: Long, dateFormat: String?): String {\r\n        // Create a DateFormatter object for displaying date in specified format.\r\n        val formatter = SimpleDateFormat(dateFormat)\r\n\r\n        // Create a calendar object that will convert the date and time value in milliseconds to date.\r\n        val calendar: Calendar = Calendar.getInstance()\r\n        calendar.timeInMillis = milliSeconds\r\n        return formatter.format(calendar.time)\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the day\r\n        @date = default date\r\n     */\r\n    fun getDay(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\"T\").split(strArray[2])\r\n\r\n        return strArray2[0]\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the month in text\r\n        @date = default date\r\n     */\r\n    fun getMonth(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n\r\n        return strArray[1].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the year in text\r\n        @date = default date\r\n     */\r\n    fun getYear(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n\r\n        return strArray[0].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the Hours in text\r\n        @date = default date\r\n     */\r\n    fun getHours(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"T\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\":\").split(strArray[1])\r\n\r\n        return strArray2[0].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the Minutes in text\r\n        @date = default date\r\n     */\r\n    fun getMinutes(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"T\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\":\").split(strArray[1])\r\n\r\n        return strArray2[1].toString()\r\n    }\r\n\r\n    /*\r\n        This function get the buffer with the name of filename on assets folder\r\n     */\r\n\r\n    fun getJsonDataFromAsset(context: Context, fileName: String): String? {\r\n        val jsonString: String\r\n        try {\r\n            jsonString = context.assets.open(fileName).bufferedReader().use { it.readText() }\r\n        } catch (ioException: IOException) {\r\n            ioException.printStackTrace()\r\n            return null\r\n        }\r\n        return jsonString\r\n    }\r\n\r\n    fun getFirstAndLastName(fullName: String): String {\r\n\r\n        val nameArray = Pattern.compile(\" \").split(fullName)\r\n\r\n        return nameArray[0] + \" \" + nameArray[nameArray.size-1]\r\n    }\r\n\r\n    /*\r\n       ------------------------------------------------ Images ------------------------------------------------\r\n    */\r\n\r\n    fun convertDrawableToBitmap(context: Context, drawable: Int): Bitmap {\r\n        return BitmapFactory.decodeResource(context.resources, R.drawable.circle)\r\n    }\r\n\r\n\r\n    fun getFile(context: Context, path: String, suffix: String, callback:(Bitmap)->Unit) {\r\n\r\n        // Retrieve image from firebase\r\n        val storageRef = FirebaseStorage.getInstance().reference.child(path)\r\n        val localfile = File.createTempFile(\"tempImage\", suffix)\r\n\r\n        // Set ImageView\r\n        storageRef.getFile(localfile).addOnSuccessListener {\r\n            val bitmap = BitmapFactory.decodeFile(localfile.absolutePath)\r\n            callback(bitmap)\r\n        }.addOnFailureListener {\r\n            val bitmap = (ResourcesCompat.getDrawable(\r\n                context.resources,\r\n                R.drawable.circle,\r\n                null\r\n            ) as GradientDrawable?)!!.toBitmap()\r\n            callback(bitmap)\r\n        }\r\n\r\n    }\r\n\r\n    fun downloadFile(context: Context, fileName: String, fileExtension: String, destinationDirectory: String, uri: Uri) {\r\n\r\n        val downloadManager = context.getSystemService(Context.DOWNLOAD_SERVICE) as DownloadManager\r\n        val request = DownloadManager.Request(uri)\r\n\r\n        request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED)\r\n        request.setDestinationInExternalPublicDir(destinationDirectory, fileName + fileExtension)\r\n\r\n        downloadManager.enqueue(request)\r\n    }\r\n\r\n\r\n    fun uploadFile(filePath: Uri, targetPath: String) {\r\n\r\n        val storage = Firebase.storage\r\n        val storageRef = storage.reference\r\n\r\n        if (filePath != Uri.EMPTY) {\r\n            val ref: StorageReference = storageRef.child(targetPath)\r\n            ref.putFile(filePath)\r\n        }\r\n    }\r\n\r\n\r\n    fun getFileIcon(fileName:String): Int {\r\n        return if (fileName.contains(\".\")) {\r\n\r\n            val extensionArray = Pattern.compile(\"[.]\").split(fileName)\r\n            val extension = extensionArray[extensionArray.size-1]\r\n\r\n            when (extension) {\r\n                \"png\", \"jpg\", \"jpeg\", \"jep\", \"jfif\", \"gif\" -> R.drawable.ic_picture\r\n                \"invisible\" -> -1\r\n                else -> R.drawable.ic_file\r\n            }\r\n\r\n        } else\r\n            -1\r\n    }\r\n\r\n\r\n    fun uniqueImageNameGen(): String {\r\n        val characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!#$$%&/()=@[]{}\"\r\n\r\n        val sb = StringBuilder(15)\r\n\r\n        for(x in 0 until 15){\r\n            val random = (characters.indices).random()\r\n            sb.append(characters[random])\r\n        }\r\n\r\n        return sb.toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function gets the domain of email\r\n        split remove the @ and make the array like this -> [a20115][alunos.ipca.pt]\r\n     */\r\n    fun getEmailDomain(email: String) : String{\r\n        val strArray = Pattern.compile(\"@\").split(email)\r\n        val result= strArray[1]\r\n\r\n        return result.toString()\r\n\r\n    }\r\n\r\n    /*\r\n        ------------------------------------------------ Chat ------------------------------------------------\r\n     */\r\n\r\n    /*\r\n       This function returns the encrypted system message\r\n       @callBack = return the list\r\n    */\r\n    fun buildSystemMessage(key: String) : String {\r\n\r\n        // Build encryptation data of first message send by the system\r\n        var message = encryptMeta(\"This chat is being encripted with Singularity Encryption!\", key)\r\n\r\n        return message.toString()\r\n\r\n    }\r\n\r\n    // Que merda é esta :v\r\n    fun getUID(): String? {\r\n        val firebaseAuth = FirebaseAuth.getInstance()\r\n        return firebaseAuth.uid\r\n    }\r\n\r\n    fun calculateInSampleSize(options: BitmapFactory.Options, reqWidth: Int, reqHeight: Int): Int {\r\n        // Raw height and width of image\r\n        val (height: Int, width: Int) = options.run { outHeight to outWidth }\r\n        var inSampleSize = 1\r\n\r\n        if (height > reqHeight || width > reqWidth) {\r\n\r\n            val halfHeight: Int = height / 2\r\n            val halfWidth: Int = width / 2\r\n\r\n            // Calculate the largest inSampleSize value that is a power of 2 and keeps both\r\n            // height and width larger than the requested height and width.\r\n            while (halfHeight / inSampleSize >= reqHeight && halfWidth / inSampleSize >= reqWidth) {\r\n                inSampleSize *= 2\r\n            }\r\n        }\r\n\r\n        return inSampleSize\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt b/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt
---- a/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt	(revision 5fa09412663837672a36a41fd04f1700573c5f37)
-+++ b/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt	(date 1642084505643)
-@@ -2,6 +2,7 @@
- 
- import android.app.Activity
- import android.app.DownloadManager
-+import android.content.ContentValues
- import android.content.Context
- import android.content.Intent
- import android.content.res.Resources
-@@ -21,8 +22,6 @@
- import com.google.firebase.storage.ktx.storage
- import com.singularity.ipcaplus.R
- import com.singularity.ipcaplus.cryptography.encryptMeta
--import java.io.File
--import java.io.IOException
- import java.lang.Exception
- import java.net.URI
- import java.text.SimpleDateFormat
-@@ -33,8 +32,15 @@
- import androidx.core.content.res.ResourcesCompat
- import androidx.core.graphics.drawable.toBitmap
- import com.google.firebase.auth.FirebaseAuth
--import java.io.ByteArrayOutputStream
- import com.singularity.ipcaplus.chat.ChatActivity
-+import kotlinx.coroutines.Dispatchers
-+import kotlinx.coroutines.delay
-+import kotlinx.coroutines.withContext
-+import org.json.JSONArray
-+import org.json.JSONObject
-+import java.io.*
-+import java.net.URL
-+import javax.net.ssl.HttpsURLConnection
- 
- 
- object  Utilis {
-@@ -310,10 +316,10 @@
-        This function returns the encrypted system message
-        @callBack = return the list
-     */
--    fun buildSystemMessage(key: String) : String {
-+    fun buildSystemMessage(key: String, iv : String) : String {
- 
-         // Build encryptation data of first message send by the system
--        var message = encryptMeta("This chat is being encripted with Singularity Encryption!", key)
-+        var message = encryptMeta("This chat is being encripted with Singularity Encryption!", key, iv)
- 
-         return message.toString()
- 
-@@ -345,4 +351,181 @@
-         return inSampleSize
-     }
- 
-+    suspend fun  createNotificationGroup(notificationKeyName : String, registrationIds : JSONArray) : String {
-+
-+        var notificationKey = ""
-+
-+        try {
-+
-+            Log.d("json", registrationIds.toString())
-+
-+            //Request
-+            val endPoint = URL("https://fcm.googleapis.com/fcm/notification")
-+
-+            //Establish a connection
-+            val httpsURLConnection: HttpsURLConnection =
-+                endPoint.openConnection() as HttpsURLConnection
-+
-+            //Connection to fcm
-+            //The time available to read from the input stream when the connection is established
-+            httpsURLConnection.readTimeout = 10000
-+            //The time available to connect to the url
-+            httpsURLConnection.connectTimeout = 15000
-+            //Defining the type of request to be made to the fcm
-+            httpsURLConnection.requestMethod = "POST"
-+            //Defining that the url connection can be used to send and receive data
-+            httpsURLConnection.doInput = true
-+            httpsURLConnection.doOutput = true
-+
-+            // Build parameters for json
-+            httpsURLConnection.setRequestProperty("Content-Type", "application/json")
-+            val project_key = "AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs"
-+            val senderId = "209455028652"
-+            httpsURLConnection.setRequestProperty("authorization", "key=$project_key")
-+            httpsURLConnection.setRequestProperty("project_id", senderId)
-+
-+            val json = JSONObject()
-+
-+            json.put("operation", "create")
-+            json.put("notification_key_name", notificationKeyName)
-+            json.put("registration_ids", registrationIds)
-+
-+
-+            // Writer
-+            val outputStream: OutputStream =
-+                BufferedOutputStream(httpsURLConnection.outputStream)
-+            val writer = BufferedWriter(OutputStreamWriter(outputStream, "utf-8"))
-+
-+            // POST
-+            writer.write(json.toString())
-+            writer.flush()
-+            writer.close()
-+
-+            outputStream.close()
-+
-+            //The response code and message of the POST requests
-+            val responseCode: Int = httpsURLConnection.responseCode
-+            val responseMessage = httpsURLConnection.responseMessage
-+
-+            Log.d(ContentValues.TAG, "$responseCode $responseMessage")
-+
-+
-+            // Check server STATUS
-+            if (responseCode in 400..499) {
-+                httpsURLConnection.errorStream
-+            } else {
-+                httpsURLConnection.inputStream
-+            }
-+            println("CUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU NAO CHEGOU SEU BURRO")
-+            if (responseCode == 200) {
-+                Log.e(ContentValues.TAG, "Group Created!!")
-+
-+                val response = httpsURLConnection.inputStream.bufferedReader()
-+                    .use { it.readText() }  // defaults to UTF-8
-+                withContext(Dispatchers.Main) {
-+                    //notification_key
-+                    val jsonObject  = JSONObject(response)
-+                    notificationKey = jsonObject.getString("notification_key")
-+                    println("NotifKey: $notificationKey")
-+                    Log.d("NotifKey", notificationKey)
-+                }
-+                println("CUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $notificationKey")
-+                return notificationKey
-+            } else {
-+                Log.e(ContentValues.TAG, "Error it didn´t work")
-+            }
-+
-+            //Here i close the connection to the endPoint
-+            httpsURLConnection.disconnect()
-+
-+
-+        } catch (e: Exception) {
-+            e.printStackTrace()
-+        }
-+        return notificationKey
-+    }
-+
-+    //This function sends push notifications to devices that are subscribed to a specific topic
-+    suspend fun sendNotificationToGroup(title: String, message: String, notificationKey : String) {
-+
-+        delay(1500)
-+
-+        try {
-+
-+            //Request
-+            val url = URL("https://fcm.googleapis.com/fcm/send")
-+
-+            //Establish a connection
-+            val httpsURLConnection: HttpsURLConnection =
-+                url.openConnection() as HttpsURLConnection
-+
-+            //The time available to read from the input stream when the connection is established
-+            httpsURLConnection.readTimeout = 10000
-+            //The time available to connect to the url
-+            httpsURLConnection.connectTimeout = 15000
-+            //Defining the type of request to be made to the fcm
-+            httpsURLConnection.requestMethod = "POST"
-+            //Defining that the url connection can be used to send and receive data
-+            httpsURLConnection.doInput = true
-+            httpsURLConnection.doOutput = true
-+
-+            // Config of FCM
-+            val project_key =
-+                "AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs"
-+            httpsURLConnection.setRequestProperty("authorization", "key=$project_key")
-+            httpsURLConnection.setRequestProperty("Content-Type", "application/json")
-+
-+            val jsonObject = JSONObject()
-+            val data = JSONObject()
-+
-+            data.put("title", title)
-+            data.put("content", message)
-+            //On Notification Click Activity
-+            data.put("click_action", ".LoginActivity")
-+
-+            //jsonObject for POST
-+            jsonObject.put("data", data)
-+            //
-+            jsonObject.put("to", notificationKey)
-+
-+            val outputStream: OutputStream =
-+                BufferedOutputStream(httpsURLConnection.outputStream)
-+            val writer = BufferedWriter(OutputStreamWriter(outputStream, "utf-8"))
-+
-+            writer.write(jsonObject.toString())
-+            writer.flush()
-+            writer.close()
-+
-+            outputStream.close()
-+
-+            //The response code and message of the POST requests
-+            val responseCode: Int = httpsURLConnection.responseCode
-+            val responseMessage: String = httpsURLConnection.responseMessage
-+
-+
-+            Log.d(ContentValues.TAG, "Response from sendMes: $responseCode $responseMessage")
-+
-+
-+            // Check server STATUS
-+            if (responseCode in 400..499) {
-+                httpsURLConnection.errorStream
-+            } else {
-+                httpsURLConnection.inputStream
-+            }
-+            if (responseCode == 200) {
-+                Log.e(
-+                    ContentValues.TAG,
-+                    "Notification Sent \n Title: $title \n Body: $message"
-+                )
-+            } else {
-+                Log.e(ContentValues.TAG, "Notification Error")
-+            }
-+
-+            httpsURLConnection.disconnect()
-+
-+        } catch (e: Exception) {
-+            e.printStackTrace()
-+        }
-+    }
-+
- }
-\ No newline at end of file
-Index: app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.MenuInflater\r\nimport android.widget.ImageView\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityCreateChatBinding\r\nimport com.singularity.ipcaplus.drawer.DrawerActivty\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.ActivityImageHelper\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.utils.Utilis.buildSystemMessage\r\nimport com.theartofdev.edmodo.cropper.CropImage\r\nimport com.theartofdev.edmodo.cropper.CropImageView\r\n\r\nclass CreateChatActivity : ActivityImageHelper() {\r\n\r\n    // Variables\r\n    private lateinit var binding: ActivityCreateChatBinding\r\n    var uri = Uri.EMPTY\r\n\r\n    val db = Firebase.firestore\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_create_chat)\r\n\r\n        binding = ActivityCreateChatBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        // Variables\r\n        var chatName : String\r\n\r\n        var type = intent.getStringExtra(\"type\")!!\r\n        var memberIds = intent.getStringArrayListExtra(\"users\")!!\r\n\r\n        // Generate key for chats\r\n        val keygen = metaGenrateKey()\r\n\r\n        binding.imageViewChatPhoto.setOnClickListener {\r\n            checkPermission(android.Manifest.permission.READ_EXTERNAL_STORAGE, STORAGE_PERMISSION_CODE)\r\n        }\r\n\r\n\r\n            // Create Chat\r\n            binding.fabCreateChat.setOnClickListener {\r\n\r\n\r\n                chatName = binding.editTextChatName.text.toString()\r\n\r\n                // Chat data\r\n                val chat = Chat(\r\n                    chatName,\r\n                    type.toString(),\r\n                    keygen\r\n                )\r\n\r\n                // System message data\r\n                val message = Message(\r\n                    \"system\",\r\n                    buildSystemMessage(keygen),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n\r\n                val user = HashMap<String, Any>()\r\n                val admin = hashMapOf<String?, Any>(\r\n                    \"admin\" to true\r\n                )\r\n\r\n                db.collection(\"chat\")\r\n                    .add(chat.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n                        db.collection(\"chat\")\r\n                            .document(documentReference.id)\r\n                            .collection(\"message\")\r\n                            .add(message.toHash())\r\n                        for (member in memberIds) {\r\n                            db.collection(\"profile\")\r\n                                .document(member)\r\n                                .collection(\"chat\")\r\n                                .document(documentReference.id)\r\n                                .set(chat)\r\n                            db.collection(\"chat\")\r\n                                .document(documentReference.id)\r\n                                .collection(\"user\")\r\n                                .document(member)\r\n                                .set(user)\r\n                            if (member == Firebase.auth.currentUser!!.uid) {\r\n                                db.collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .collection(\"user\")\r\n                                    .document(member)\r\n                                    .update(admin)\r\n                            }\r\n                            if (uri != Uri.EMPTY)\r\n                                Utilis.uploadFile(uri, \"chats/${documentReference.id}/icon.png\")\r\n\r\n                        }\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                    }\r\n\r\n                val intent = Intent(this, DrawerActivty::class.java)\r\n                startActivity(intent)\r\n\r\n            }\r\n\r\n    }\r\n    /*\r\n       This function happen after picking photo, and make changes in the activity\r\n    */\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n\r\n        if(requestCode == IMAGE_REQUEST_CODE && resultCode == RESULT_OK){\r\n            CropImage.activity(data?.data)\r\n                .setGuidelines(CropImageView.Guidelines.ON)\r\n                .setAspectRatio(1,1)\r\n                .start(this)\r\n        }\r\n\r\n        if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {\r\n            val result = CropImage.getActivityResult(data)\r\n            if (resultCode == RESULT_OK) {\r\n                binding.imageViewChatPhoto.setImageURI(result.uri)\r\n                uri = result.uri\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n       This function create the action bar above the activity\r\n    */\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        val inflater: MenuInflater = menuInflater\r\n        inflater.inflate(R.menu.menu_chat, menu)\r\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\r\n        supportActionBar?.setHomeAsUpIndicator(R.drawable.ic_arrow_back_24)\r\n\r\n\r\n        return true\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt
---- a/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt	(revision 5fa09412663837672a36a41fd04f1700573c5f37)
-+++ b/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt	(date 1642084878652)
-@@ -9,11 +9,14 @@
- import android.view.Menu
- import android.view.MenuInflater
- import android.widget.ImageView
-+import android.widget.TextView
-+import androidx.appcompat.app.ActionBar
- import com.google.firebase.Timestamp
- import com.google.firebase.auth.ktx.auth
- import com.google.firebase.firestore.ktx.firestore
- import com.google.firebase.ktx.Firebase
- import com.singularity.ipcaplus.R
-+import com.singularity.ipcaplus.cryptography.generateRandomIV
- import com.singularity.ipcaplus.cryptography.metaGenrateKey
- import com.singularity.ipcaplus.databinding.ActivityCreateChatBinding
- import com.singularity.ipcaplus.drawer.DrawerActivty
-@@ -25,20 +28,33 @@
- import com.singularity.ipcaplus.utils.Utilis.buildSystemMessage
- import com.theartofdev.edmodo.cropper.CropImage
- import com.theartofdev.edmodo.cropper.CropImageView
-+import kotlinx.coroutines.Dispatchers
-+import kotlinx.coroutines.GlobalScope
-+import kotlinx.coroutines.launch
-+import kotlinx.coroutines.withContext
- 
- class CreateChatActivity : ActivityImageHelper() {
- 
-     // Variables
-     private lateinit var binding: ActivityCreateChatBinding
-     var uri = Uri.EMPTY
--
-     val db = Firebase.firestore
-+    var noteKey : String = ""
-+
-     override fun onCreate(savedInstanceState: Bundle?) {
-         super.onCreate(savedInstanceState)
-         setContentView(R.layout.activity_create_chat)
- 
-         binding = ActivityCreateChatBinding.inflate(layoutInflater)
-         setContentView(binding.root)
-+        supportActionBar?.displayOptions = ActionBar.DISPLAY_SHOW_CUSTOM
-+        supportActionBar?.setCustomView(R.layout.custom_bar_layout)
-+        var tokens_adress = arrayListOf<String>()
-+        findViewById<TextView>(R.id.AppBarTittle).text = "Novo Grupo"
-+        // Back button
-+        findViewById<ImageView>(R.id.BackButtonImageView).setOnClickListener{
-+            finish()
-+        }
- 
-         // Variables
-         var chatName : String
-@@ -49,6 +65,25 @@
-         // Generate key for chats
-         val keygen = metaGenrateKey()
- 
-+        for (memberId in memberIds){
-+
-+            // Getting all of tokens of  profile associated devices
-+            Backend.getAllTokens(memberId) {
-+                if (tokens_adress.isEmpty()){
-+                    tokens_adress.clear()
-+                }
-+                tokens_adress.addAll(it)
-+
-+                GlobalScope.launch {
-+                    withContext(Dispatchers.IO){
-+                        noteKey = Utilis.createNotificationGroup(generateRandomIV(), Backend.createJsonArrayString(tokens_adress))
-+                    }
-+                }
-+
-+            }
-+
-+        }
-+
-         binding.imageViewChatPhoto.setOnClickListener {
-             checkPermission(android.Manifest.permission.READ_EXTERNAL_STORAGE, STORAGE_PERMISSION_CODE)
-         }
-@@ -59,18 +94,21 @@
- 
- 
-                 chatName = binding.editTextChatName.text.toString()
-+                val ivGenerated = generateRandomIV()
- 
-                 // Chat data
-                 val chat = Chat(
-                     chatName,
-                     type.toString(),
--                    keygen
-+                    keygen,
-+                    ivGenerated,
-+                    noteKey
-                 )
- 
-                 // System message data
-                 val message = Message(
-                     "system",
--                    buildSystemMessage(keygen),
-+                    buildSystemMessage(keygen, ivGenerated),
-                     Timestamp.now(),
-                     ""
- 
-@@ -144,17 +182,4 @@
-             }
-         }
-     }
--
--    /*
--       This function create the action bar above the activity
--    */
--    override fun onCreateOptionsMenu(menu: Menu): Boolean {
--        val inflater: MenuInflater = menuInflater
--        inflater.inflate(R.menu.menu_chat, menu)
--        supportActionBar?.setDisplayHomeAsUpEnabled(true)
--        supportActionBar?.setHomeAsUpIndicator(R.drawable.ic_arrow_back_24)
--
--
--        return true
--    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/singularity/ipcaplus/models/Chat.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.models\r\n\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot\r\n\r\nclass Chat {\r\n    var name : String = \"\"\r\n    var type : String = \"\"\r\n    var ox : String? = \"\"\r\n    var id : String? =  null\r\n\r\n    constructor(name : String, type : String, ox : String) {\r\n        this.name = name\r\n        this.type = type\r\n        this.ox = ox\r\n    }\r\n\r\n    fun toHash() :HashMap<String, Any> {\r\n        var hashMap = HashMap<String, Any>()\r\n        hashMap.put(\"name\", name)\r\n        hashMap.put(\"type\", type)\r\n        hashMap.put(\"ox\", ox!!)\r\n        return hashMap\r\n    }\r\n\r\n    companion object {\r\n        fun fromHash(hashMap: QueryDocumentSnapshot) : Chat {\r\n            val chat = Chat(\r\n                hashMap[\"name\"] as String,\r\n                hashMap[\"type\"] as String,\r\n                hashMap[\"ox\"] as String\r\n            )\r\n            return chat\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt b/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt
---- a/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt	(revision 5fa09412663837672a36a41fd04f1700573c5f37)
-+++ b/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt	(date 1642080867530)
-@@ -7,11 +7,15 @@
-     var type : String = ""
-     var ox : String? = ""
-     var id : String? =  null
-+    var iv : String? = ""
-+    var notificationKey : String? = ""
- 
--    constructor(name : String, type : String, ox : String) {
-+    constructor(name : String, type : String, ox : String, iv : String, notificationKey : String) {
-         this.name = name
-         this.type = type
-         this.ox = ox
-+        this.iv = iv
-+        this.notificationKey = notificationKey
-     }
- 
-     fun toHash() :HashMap<String, Any> {
-@@ -19,6 +23,8 @@
-         hashMap.put("name", name)
-         hashMap.put("type", type)
-         hashMap.put("ox", ox!!)
-+        hashMap.put("iv", iv!!)
-+        hashMap.put("notificationKey", notificationKey!!)
-         return hashMap
-     }
- 
-@@ -27,7 +33,10 @@
-             val chat = Chat(
-                 hashMap["name"] as String,
-                 hashMap["type"] as String,
--                hashMap["ox"] as String
-+                hashMap["ox"] as String,
-+                hashMap["iv"] as String,
-+                hashMap["notificationKey"] as String
-+
-             )
-             return chat
-         }
-Index: app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.app.ActionBar\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.*\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.view.isVisible\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.drawer.CalendarActivity\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport com.singularity.ipcaplus.cryptography.getMetaOx\r\nimport com.singularity.ipcaplus.databinding.ActivityChatBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Backend.createJsonArrayString\r\nimport kotlinx.coroutines.*\r\nimport org.json.JSONArray\r\nimport org.json.JSONObject\r\nimport java.io.BufferedOutputStream\r\nimport java.io.BufferedWriter\r\nimport java.io.OutputStream\r\nimport java.io.OutputStreamWriter\r\nimport java.net.URL\r\nimport java.time.LocalDateTime\r\nimport java.time.format.DateTimeFormatter\r\nimport javax.net.ssl.HttpsURLConnection\r\n\r\nclass ChatActivity : AppCompatActivity() {\r\n\r\n    var messages = arrayListOf<Message>()\r\n    var currentUserIsAdmin = false\r\n    private lateinit var binding: ActivityChatBinding\r\n    private lateinit var chat_id : String\r\n    var tokens_adress = arrayListOf<String>()\r\n    var chat_user_uids = arrayListOf<String>()\r\n    private var mAdapter: RecyclerView.Adapter<*>? = null\r\n    private var mLayoutManager: LinearLayoutManager? = null\r\n\r\n    val db = Firebase.firestore\r\n    @SuppressLint(\"WrongConstant\")\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_chat)\r\n\r\n        binding = ActivityChatBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        supportActionBar?.displayOptions = ActionBar.DISPLAY_SHOW_CUSTOM\r\n        supportActionBar?.setCustomView(R.layout.appbar_custom_layout_chat)\r\n        findViewById<TextView>(R.id.AppBarTittle).text = \"Chat name\"\r\n        // Back button\r\n        findViewById<ImageView>(R.id.BackButtonImageView).setOnClickListener{\r\n            finish()\r\n        }\r\n\r\n        // Variables\r\n        chat_id = intent.getStringExtra(\"chat_id\").toString()\r\n        val current = LocalDateTime.now()\r\n\r\n        val formatter = DateTimeFormatter.BASIC_ISO_DATE\r\n        val formatted = current.format(formatter)\r\n\r\n        // Check if user is admin\r\n        Backend.getChatAdminIds(chat_id) {\r\n            val currentUser = Firebase.auth.currentUser!!.uid\r\n            for (admin in it) {\r\n                if (admin == currentUser)\r\n                    currentUserIsAdmin = true\r\n            }\r\n        }\r\n\r\n        // Get all members id of chat\r\n        Backend.getChatUsersUids(chat_id){\r\n            chat_user_uids.clear()\r\n            chat_user_uids.addAll(it)\r\n\r\n            for (userId in chat_user_uids){\r\n                // Getting all of tokens of  profile associated devices\r\n                Backend.getAllTokens(userId) {\r\n                    if (tokens_adress.isEmpty()){\r\n                        tokens_adress.clear()\r\n                    }\r\n                    tokens_adress.addAll(it)\r\n\r\n                    /*GlobalScope.launch {\r\n                        withContext(Dispatchers.IO){\r\n                            createNotificationGroup(\"grupotrablahotentativa\", createJsonArrayString(tokens_adress))\r\n                        }\r\n                    }*/\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        val profilePicfromTop = findViewById<ImageView>(R.id.ProfileImageView)\r\n        Utilis.getFile(this, \"chats/$chat_id/icon.png\", \"png\") { bitmap ->\r\n            profilePicfromTop.setImageBitmap(bitmap)\r\n        }\r\n\r\n        println(\"Current Date is: $formatted\")\r\n\r\n        // Send Message\r\n        binding.fabSend.setOnClickListener {\r\n            if(!binding.editTextMessage.text.isNullOrBlank()) {\r\n                // get data of ecripted shared preferences (\"chatuid\" -> \"key\")\r\n                val keygen = getMetaOx(this, chat_id)\r\n                // Build encryptation data of message send by the user\r\n                var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString())\r\n                val savedText = binding.editTextMessage.text.toString()\r\n\r\n                val message = Message(\r\n                    Firebase.auth.currentUser!!.uid,\r\n                    meta.toString(),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n                db.collection(\"chat\").document(\"$chat_id\").collection(\"message\")\r\n                    .add(message.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n\r\n                        GlobalScope.launch {\r\n                            withContext(Dispatchers.IO){\r\n                                //APA91bEKDInIYA242YofpahBmhB57pEI4gNT63DJJenWCccJGqeSYrWzj0BSruX49DhVp2vGSY5xJ2fEJk2vhtoraT3_bbjEKw4Nx3eJKj7tttVRPjQs0Uc_OPkrcj4twR70H5tAilnY\r\n                                println(\"AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\"+ savedText)\r\n                                sendNotificationToGroup( chat_id, savedText, \"APA91bGaOoMTjTD2s9MU63F1AvLqP6tkwdAFE0Mqs9jbghlSgcWlfe_38CboFiE2iiWFoKqNRwhF0G_TA5X9xegTL0_Tg0OGuFadJuBj1sGZqjqCcmF1EH2ZeRU7ySHosdNkmLmmOyFF\")\r\n                            }\r\n                        }\r\n                        Log.d(TAG, \"DocumentSnapshot added with ID: ${documentReference.id}\")\r\n\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(TAG, \"Error adding document\", e)\r\n                    }\r\n                binding.editTextMessage.text.clear()\r\n\r\n            }\r\n        }\r\n\r\n        // Show Messages\r\n        db.collection(\"chat\").document(\"$chat_id\").collection(\"message\").orderBy(\"time\", Query.Direction.DESCENDING)\r\n            .addSnapshotListener { documents, e ->\r\n\r\n                documents?.let {\r\n                    messages.clear()\r\n                    for (document in it) {\r\n                        Log.d(TAG, \"${document.id} => ${document.data}\")\r\n                        val message = Message.fromHash(document)\r\n                        messages.add(message)\r\n\r\n                    }\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n\r\n            }\r\n\r\n        // Recycler View Messages\r\n        mLayoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)\r\n        binding.recycleViewChat.layoutManager = mLayoutManager\r\n        mAdapter = MessageAdapter()\r\n        binding.recycleViewChat.itemAnimator = DefaultItemAnimator()\r\n        binding.recycleViewChat.adapter = mAdapter\r\n\r\n        mLayoutManager!!.reverseLayout = true\r\n\r\n    }\r\n\r\n    /*\r\n       This function create the action bar above the activity\r\n    */\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        val inflater: MenuInflater = menuInflater\r\n        inflater.inflate(R.menu.menu_chat, menu)\r\n\r\n        db.collection(\"profile\")\r\n            .document(Firebase.auth.currentUser!!.uid)\r\n            .collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    for (document in it) {\r\n                        if(document.id == chat_id) {\r\n                            val chat = Chat.fromHash(document)\r\n                            var name = chat.name\r\n                            if (chat.type == \"chat\") {\r\n                                name  = Utilis.getFirstAndLastName(chat.name)\r\n                            }\r\n                            //supportActionBar?.title = chat.name\r\n                            findViewById<TextView>(R.id.AppBarTittle).text = name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        return true\r\n    }\r\n\r\n\r\n    /*\r\n        This function define the events of the action bar buttons\r\n     */\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        super.onOptionsItemSelected(item)\r\n\r\n        when (item.itemId){\r\n            R.id.calendario -> {\r\n                val intent = Intent(this, CalendarActivity::class.java)\r\n                intent.putExtra(\"chat_id\", chat_id)\r\n                intent.putExtra(\"is_admin\", currentUserIsAdmin)\r\n                startActivity(intent)\r\n                return true\r\n            }\r\n            R.id.chatMore -> {\r\n                val intent = Intent(this, ChatMoreActivity::class.java)\r\n                intent.putExtra(\"chat_id\", chat_id)\r\n                println(\"3------------------------------ \" + currentUserIsAdmin)\r\n                intent.putExtra(\"is_admin\", currentUserIsAdmin)\r\n                intent.putExtra(\"chat_name\",  findViewById<TextView>(R.id.AppBarTittle).text.toString())\r\n                startActivity(intent)\r\n                return true\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n\r\n    // When the support action bar back button is pressed, the app will go back to the previous activity\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        onBackPressed()\r\n        return true\r\n    }\r\n\r\n\r\n    inner class MessageAdapter : RecyclerView.Adapter<MessageAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        var otherUser = false\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            if(viewType == 1) {\r\n                otherUser = false\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_self, parent, false))\r\n            } else if (viewType == 2){\r\n                otherUser = false\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_system, parent, false))\r\n            } else {\r\n                otherUser = true\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_others, parent, false))\r\n            }\r\n\r\n        }\r\n\r\n        @RequiresApi(Build.VERSION_CODES.M)\r\n         override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n\r\n            holder.v.apply {\r\n\r\n                val textViewMessage = findViewById<TextView>(R.id.textViewMessage)\r\n                val timeLastMessage = findViewById<TextView?>(R.id.timeLastMessage)\r\n                val textViewUsername = findViewById<TextView?>(R.id.textViewUsername)\r\n\r\n\r\n                timeLastMessage?.isVisible = false\r\n                val keygen = getMetaOx(context, chat_id)\r\n                val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message)\r\n\r\n               /* if (otherUser) {\r\n                        Backend.getUserProfile(messages[position].user) {\r\n                            val userName = Utilis.getFirstAndLastName(it.name)\r\n                            textViewUsername.text = userName\r\n                        }\r\n                    }\r\n                */\r\n\r\n                textViewMessage.text = message_decripted\r\n                println(message_decripted)\r\n                if(position == messages.size - 1) {\r\n                    val data = Utilis.getDate(\r\n                        messages[position].time.seconds * 1000,\r\n                        \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                    )\r\n                    timeLastMessage.isVisible = true\r\n                    timeLastMessage.text = Utilis.getHours(data) + \":\" + Utilis.getMinutes(data)\r\n                }\r\n\r\n                if (otherUser) {\r\n                    val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)\r\n                    if (imageViewUser != null) {\r\n                        Utilis.getFile(context, \"profilePictures/${messages[position].user}.png\", \"png\") { bitmap ->\r\n                            imageViewUser.setImageBitmap(bitmap)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        override fun getItemViewType(position: Int) : Int {\r\n            if (messages[position].user == Firebase.auth.currentUser!!.uid) {\r\n                return 1\r\n            } else if (messages[position].user == \"system\"){\r\n                return 2\r\n            } else {\r\n                return 0\r\n            }\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return messages.size\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    private suspend fun  createNotificationGroup(notificationKeyName : String, registrationIds : JSONArray)  {\r\n\r\n        try {\r\n\r\n            Log.d(\"json\", registrationIds.toString())\r\n\r\n            //Request\r\n            val endPoint = URL(\"https://fcm.googleapis.com/fcm/notification\")\r\n\r\n            //Establish a connection\r\n            val httpsURLConnection: HttpsURLConnection =\r\n                endPoint.openConnection() as HttpsURLConnection\r\n\r\n            //Connection to fcm\r\n            //The time available to read from the input stream when the connection is established\r\n            httpsURLConnection.readTimeout = 10000\r\n            //The time available to connect to the url\r\n            httpsURLConnection.connectTimeout = 15000\r\n            //Defining the type of request to be made to the fcm\r\n            httpsURLConnection.requestMethod = \"POST\"\r\n            //Defining that the url connection can be used to send and receive data\r\n            httpsURLConnection.doInput = true\r\n            httpsURLConnection.doOutput = true\r\n\r\n            // Build parameters for json\r\n            httpsURLConnection.setRequestProperty(\"Content-Type\", \"application/json\")\r\n            val project_key = \"AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs\"\r\n            val senderId = \"209455028652\"\r\n            httpsURLConnection.setRequestProperty(\"authorization\", \"key=$project_key\")\r\n            httpsURLConnection.setRequestProperty(\"project_id\", senderId)\r\n\r\n            val json = JSONObject()\r\n\r\n            json.put(\"operation\", \"create\")\r\n            json.put(\"notification_key_name\", notificationKeyName)\r\n            json.put(\"registration_ids\", registrationIds)\r\n\r\n\r\n            // Writer\r\n            val outputStream: OutputStream =\r\n                BufferedOutputStream(httpsURLConnection.outputStream)\r\n            val writer = BufferedWriter(OutputStreamWriter(outputStream, \"utf-8\"))\r\n\r\n            // POST\r\n            writer.write(json.toString())\r\n            writer.flush()\r\n            writer.close()\r\n\r\n            outputStream.close()\r\n\r\n            //The response code and message of the POST requests\r\n            val responseCode: Int = httpsURLConnection.responseCode\r\n            val responseMessage = httpsURLConnection.responseMessage\r\n\r\n            Log.d(TAG, \"$responseCode $responseMessage\")\r\n\r\n\r\n            // Check server STATUS\r\n            if (responseCode in 400..499) {\r\n                httpsURLConnection.errorStream\r\n            } else {\r\n                httpsURLConnection.inputStream\r\n            }\r\n\r\n            if (responseCode == 200) {\r\n                Log.e(TAG, \"Group Created!!\")\r\n\r\n                val response = httpsURLConnection.inputStream.bufferedReader()\r\n                    .use { it.readText() }  // defaults to UTF-8\r\n                withContext(Dispatchers.Main) {\r\n                    //notification_key\r\n                    val jsonObject  = JSONObject(response)\r\n                    val notificationKey = jsonObject.getString(\"notification_key\")\r\n                    println(\"NotifKey: $notificationKey\")\r\n                    Log.d(\"NotifKey\", notificationKey)\r\n                }\r\n            } else {\r\n                Log.e(TAG, \"Error it didn´t work\")\r\n            }\r\n\r\n            //Here i close the connection to the endPoint\r\n            httpsURLConnection.disconnect()\r\n\r\n\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n\r\n    //This function sends push notifications to devices that are subscribed to a specific topic\r\n    private suspend fun sendNotificationToGroup(title: String, message: String, notificationKey : String) {\r\n\r\n        delay(1500)\r\n\r\n        try {\r\n\r\n            //Request\r\n            val url = URL(\"https://fcm.googleapis.com/fcm/send\")\r\n\r\n            //Establish a connection\r\n            val httpsURLConnection: HttpsURLConnection =\r\n                url.openConnection() as HttpsURLConnection\r\n\r\n            //The time available to read from the input stream when the connection is established\r\n            httpsURLConnection.readTimeout = 10000\r\n            //The time available to connect to the url\r\n            httpsURLConnection.connectTimeout = 15000\r\n            //Defining the type of request to be made to the fcm\r\n            httpsURLConnection.requestMethod = \"POST\"\r\n            //Defining that the url connection can be used to send and receive data\r\n            httpsURLConnection.doInput = true\r\n            httpsURLConnection.doOutput = true\r\n\r\n            // Config of FCM\r\n            val project_key = \"AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs\"\r\n            httpsURLConnection.setRequestProperty(\"authorization\", \"key=$project_key\")\r\n            httpsURLConnection.setRequestProperty(\"Content-Type\", \"application/json\")\r\n\r\n            val jsonObject = JSONObject()\r\n            val data = JSONObject()\r\n\r\n            data.put(\"title\", title)\r\n            data.put(\"content\", message)\r\n            //On Notification Click Activity\r\n            data.put(\"click_action\", \".LoginActivity\")\r\n\r\n            //jsonObject for POST\r\n            jsonObject.put(\"data\", data)\r\n            //\r\n            jsonObject.put(\"to\", notificationKey)\r\n\r\n            val outputStream: OutputStream =\r\n                BufferedOutputStream(httpsURLConnection.outputStream)\r\n            val writer = BufferedWriter(OutputStreamWriter(outputStream, \"utf-8\"))\r\n            \r\n            writer.write(jsonObject.toString())\r\n            writer.flush()\r\n            writer.close()\r\n\r\n            outputStream.close()\r\n\r\n            //The response code and message of the POST requests\r\n            val responseCode: Int = httpsURLConnection.responseCode\r\n            val responseMessage: String = httpsURLConnection.responseMessage\r\n\r\n\r\n            Log.d(TAG, \"Response from sendMes: $responseCode $responseMessage\")\r\n\r\n\r\n            // Check server STATUS\r\n            if (responseCode in 400..499) {\r\n                httpsURLConnection.errorStream\r\n            } else {\r\n                httpsURLConnection.inputStream\r\n            }\r\n            if (responseCode == 200) {\r\n                Log.e(\r\n                    TAG,\r\n                    \"Notification Sent \\n Title: $title \\n Body: $message\"\r\n                )\r\n            } else {\r\n                Log.e(TAG, \"Notification Error\")\r\n            }\r\n\r\n            httpsURLConnection.disconnect()\r\n\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt
---- a/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt	(revision 5fa09412663837672a36a41fd04f1700573c5f37)
-+++ b/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt	(date 1642084049841)
-@@ -32,6 +32,9 @@
- import com.singularity.ipcaplus.models.Message
- import com.singularity.ipcaplus.utils.Backend
- import com.singularity.ipcaplus.utils.Backend.createJsonArrayString
-+import com.singularity.ipcaplus.utils.Backend.getIv
-+import com.singularity.ipcaplus.utils.Backend.getNotificationKey
-+import com.singularity.ipcaplus.utils.Utilis.sendNotificationToGroup
- import kotlinx.coroutines.*
- import org.json.JSONArray
- import org.json.JSONObject
-@@ -89,30 +92,7 @@
-             }
-         }
- 
--        // Get all members id of chat
--        Backend.getChatUsersUids(chat_id){
--            chat_user_uids.clear()
--            chat_user_uids.addAll(it)
--
--            for (userId in chat_user_uids){
--                // Getting all of tokens of  profile associated devices
--                Backend.getAllTokens(userId) {
--                    if (tokens_adress.isEmpty()){
--                        tokens_adress.clear()
--                    }
--                    tokens_adress.addAll(it)
--
--                    /*GlobalScope.launch {
--                        withContext(Dispatchers.IO){
--                            createNotificationGroup("grupotrablahotentativa", createJsonArrayString(tokens_adress))
--                        }
--                    }*/
--
--                }
- 
--            }
--
--        }
-         val profilePicfromTop = findViewById<ImageView>(R.id.ProfileImageView)
-         Utilis.getFile(this, "chats/$chat_id/icon.png", "png") { bitmap ->
-             profilePicfromTop.setImageBitmap(bitmap)
-@@ -126,39 +106,50 @@
-                 // get data of ecripted shared preferences ("chatuid" -> "key")
-                 val keygen = getMetaOx(this, chat_id)
-                 // Build encryptation data of message send by the user
--                var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString())
--                val savedText = binding.editTextMessage.text.toString()
-+                getIv(chat_id) {
-+
-+                    var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString(), it.toString())
-+                    val savedText = binding.editTextMessage.text.toString()
- 
--                val message = Message(
--                    Firebase.auth.currentUser!!.uid,
--                    meta.toString(),
--                    Timestamp.now(),
--                    ""
-+                    val message = Message(
-+                        Firebase.auth.currentUser!!.uid,
-+                        meta.toString(),
-+                        Timestamp.now(),
-+                        ""
- 
--                )
--                db.collection("chat").document("$chat_id").collection("message")
--                    .add(message.toHash())
--                    .addOnSuccessListener { documentReference ->
-+                    )
-+                    db.collection("chat").document("$chat_id").collection("message")
-+                        .add(message.toHash())
-+                        .addOnSuccessListener { documentReference ->
- 
--                        GlobalScope.launch {
--                            withContext(Dispatchers.IO){
--                                //APA91bEKDInIYA242YofpahBmhB57pEI4gNT63DJJenWCccJGqeSYrWzj0BSruX49DhVp2vGSY5xJ2fEJk2vhtoraT3_bbjEKw4Nx3eJKj7tttVRPjQs0Uc_OPkrcj4twR70H5tAilnY
--                                println("AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"+ savedText)
--                                sendNotificationToGroup( chat_id, savedText, "APA91bGaOoMTjTD2s9MU63F1AvLqP6tkwdAFE0Mqs9jbghlSgcWlfe_38CboFiE2iiWFoKqNRwhF0G_TA5X9xegTL0_Tg0OGuFadJuBj1sGZqjqCcmF1EH2ZeRU7ySHosdNkmLmmOyFF")
--                            }
--                        }
--                        Log.d(TAG, "DocumentSnapshot added with ID: ${documentReference.id}")
-+                            GlobalScope.launch {
-+                                withContext(Dispatchers.IO){
-+                                    //APA91bEKDInIYA242YofpahBmhB57pEI4gNT63DJJenWCccJGqeSYrWzj0BSruX49DhVp2vGSY5xJ2fEJk2vhtoraT3_bbjEKw4Nx3eJKj7tttVRPjQs0Uc_OPkrcj4twR70H5tAilnY
-+                                    // APA91bGaOoMTjTD2s9MU63F1AvLqP6tkwdAFE0Mqs9jbghlSgcWlfe_38CboFiE2iiWFoKqNRwhF0G_TA5X9xegTL0_Tg0OGuFadJuBj1sGZqjqCcmF1EH2ZeRU7ySHosdNkmLmmOyFF
-+                                    println("AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"+ savedText)
-+                                    getNotificationKey(chat_id){
-+                                        GlobalScope.launch {
-+                                            withContext(Dispatchers.IO){
-+                                                sendNotificationToGroup( chat_id, savedText, it.toString())
-+                                            }
-+                                        }
-+                                    }
-+                                }
-+                            }
-+                            Log.d(TAG, "DocumentSnapshot added with ID: ${documentReference.id}")
- 
- 
--                    }
--                    .addOnFailureListener { e ->
--                        Log.w(TAG, "Error adding document", e)
--                    }
--                binding.editTextMessage.text.clear()
-+                        }
-+                        .addOnFailureListener { e ->
-+                            Log.w(TAG, "Error adding document", e)
-+                        }
-+                    binding.editTextMessage.text.clear()
- 
--            }
--        }
-+                }
-+            }
- 
-+        }
-+
-         // Show Messages
-         db.collection("chat").document("$chat_id").collection("message").orderBy("time", Query.Direction.DESCENDING)
-             .addSnapshotListener { documents, e ->
-@@ -290,32 +281,34 @@
- 
-                 timeLastMessage?.isVisible = false
-                 val keygen = getMetaOx(context, chat_id)
--                val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message)
-+                getIv(chat_id){
-+                    val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message, it.toString())
- 
--               /* if (otherUser) {
--                        Backend.getUserProfile(messages[position].user) {
--                            val userName = Utilis.getFirstAndLastName(it.name)
--                            textViewUsername.text = userName
--                        }
--                    }
--                */
-+                    /* if (otherUser) {
-+                             Backend.getUserProfile(messages[position].user) {
-+                                 val userName = Utilis.getFirstAndLastName(it.name)
-+                                 textViewUsername.text = userName
-+                             }
-+                         }
-+                     */
- 
--                textViewMessage.text = message_decripted
--                println(message_decripted)
--                if(position == messages.size - 1) {
--                    val data = Utilis.getDate(
--                        messages[position].time.seconds * 1000,
--                        "yyyy-MM-dd'T'HH:mm:ss.SSS"
--                    )
--                    timeLastMessage.isVisible = true
--                    timeLastMessage.text = Utilis.getHours(data) + ":" + Utilis.getMinutes(data)
--                }
-+                    textViewMessage.text = message_decripted
-+                    println(message_decripted)
-+                    if(position == messages.size - 1) {
-+                        val data = Utilis.getDate(
-+                            messages[position].time.seconds * 1000,
-+                            "yyyy-MM-dd'T'HH:mm:ss.SSS"
-+                        )
-+                        timeLastMessage.isVisible = true
-+                        timeLastMessage.text = Utilis.getHours(data) + ":" + Utilis.getMinutes(data)
-+                    }
- 
--                if (otherUser) {
--                    val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)
--                    if (imageViewUser != null) {
--                        Utilis.getFile(context, "profilePictures/${messages[position].user}.png", "png") { bitmap ->
--                            imageViewUser.setImageBitmap(bitmap)
-+                    if (otherUser) {
-+                        val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)
-+                        if (imageViewUser != null) {
-+                            Utilis.getFile(context, "profilePictures/${messages[position].user}.png", "png") { bitmap ->
-+                                imageViewUser.setImageBitmap(bitmap)
-+                            }
-                         }
-                     }
-                 }
-@@ -340,175 +333,4 @@
- 
- 
-     }
--
--    private suspend fun  createNotificationGroup(notificationKeyName : String, registrationIds : JSONArray)  {
--
--        try {
--
--            Log.d("json", registrationIds.toString())
--
--            //Request
--            val endPoint = URL("https://fcm.googleapis.com/fcm/notification")
--
--            //Establish a connection
--            val httpsURLConnection: HttpsURLConnection =
--                endPoint.openConnection() as HttpsURLConnection
--
--            //Connection to fcm
--            //The time available to read from the input stream when the connection is established
--            httpsURLConnection.readTimeout = 10000
--            //The time available to connect to the url
--            httpsURLConnection.connectTimeout = 15000
--            //Defining the type of request to be made to the fcm
--            httpsURLConnection.requestMethod = "POST"
--            //Defining that the url connection can be used to send and receive data
--            httpsURLConnection.doInput = true
--            httpsURLConnection.doOutput = true
--
--            // Build parameters for json
--            httpsURLConnection.setRequestProperty("Content-Type", "application/json")
--            val project_key = "AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs"
--            val senderId = "209455028652"
--            httpsURLConnection.setRequestProperty("authorization", "key=$project_key")
--            httpsURLConnection.setRequestProperty("project_id", senderId)
--
--            val json = JSONObject()
--
--            json.put("operation", "create")
--            json.put("notification_key_name", notificationKeyName)
--            json.put("registration_ids", registrationIds)
--
--
--            // Writer
--            val outputStream: OutputStream =
--                BufferedOutputStream(httpsURLConnection.outputStream)
--            val writer = BufferedWriter(OutputStreamWriter(outputStream, "utf-8"))
--
--            // POST
--            writer.write(json.toString())
--            writer.flush()
--            writer.close()
--
--            outputStream.close()
--
--            //The response code and message of the POST requests
--            val responseCode: Int = httpsURLConnection.responseCode
--            val responseMessage = httpsURLConnection.responseMessage
--
--            Log.d(TAG, "$responseCode $responseMessage")
--
--
--            // Check server STATUS
--            if (responseCode in 400..499) {
--                httpsURLConnection.errorStream
--            } else {
--                httpsURLConnection.inputStream
--            }
--
--            if (responseCode == 200) {
--                Log.e(TAG, "Group Created!!")
--
--                val response = httpsURLConnection.inputStream.bufferedReader()
--                    .use { it.readText() }  // defaults to UTF-8
--                withContext(Dispatchers.Main) {
--                    //notification_key
--                    val jsonObject  = JSONObject(response)
--                    val notificationKey = jsonObject.getString("notification_key")
--                    println("NotifKey: $notificationKey")
--                    Log.d("NotifKey", notificationKey)
--                }
--            } else {
--                Log.e(TAG, "Error it didn´t work")
--            }
--
--            //Here i close the connection to the endPoint
--            httpsURLConnection.disconnect()
--
--
--        } catch (e: Exception) {
--            e.printStackTrace()
--        }
--    }
--
--    //This function sends push notifications to devices that are subscribed to a specific topic
--    private suspend fun sendNotificationToGroup(title: String, message: String, notificationKey : String) {
--
--        delay(1500)
--
--        try {
--
--            //Request
--            val url = URL("https://fcm.googleapis.com/fcm/send")
--
--            //Establish a connection
--            val httpsURLConnection: HttpsURLConnection =
--                url.openConnection() as HttpsURLConnection
--
--            //The time available to read from the input stream when the connection is established
--            httpsURLConnection.readTimeout = 10000
--            //The time available to connect to the url
--            httpsURLConnection.connectTimeout = 15000
--            //Defining the type of request to be made to the fcm
--            httpsURLConnection.requestMethod = "POST"
--            //Defining that the url connection can be used to send and receive data
--            httpsURLConnection.doInput = true
--            httpsURLConnection.doOutput = true
--
--            // Config of FCM
--            val project_key = "AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs"
--            httpsURLConnection.setRequestProperty("authorization", "key=$project_key")
--            httpsURLConnection.setRequestProperty("Content-Type", "application/json")
--
--            val jsonObject = JSONObject()
--            val data = JSONObject()
--
--            data.put("title", title)
--            data.put("content", message)
--            //On Notification Click Activity
--            data.put("click_action", ".LoginActivity")
--
--            //jsonObject for POST
--            jsonObject.put("data", data)
--            //
--            jsonObject.put("to", notificationKey)
--
--            val outputStream: OutputStream =
--                BufferedOutputStream(httpsURLConnection.outputStream)
--            val writer = BufferedWriter(OutputStreamWriter(outputStream, "utf-8"))
--            
--            writer.write(jsonObject.toString())
--            writer.flush()
--            writer.close()
--
--            outputStream.close()
--
--            //The response code and message of the POST requests
--            val responseCode: Int = httpsURLConnection.responseCode
--            val responseMessage: String = httpsURLConnection.responseMessage
--
--
--            Log.d(TAG, "Response from sendMes: $responseCode $responseMessage")
--
--
--            // Check server STATUS
--            if (responseCode in 400..499) {
--                httpsURLConnection.errorStream
--            } else {
--                httpsURLConnection.inputStream
--            }
--            if (responseCode == 200) {
--                Log.e(
--                    TAG,
--                    "Notification Sent \n Title: $title \n Body: $message"
--                )
--            } else {
--                Log.e(TAG, "Notification Error")
--            }
--
--            httpsURLConnection.disconnect()
--
--        } catch (e: Exception) {
--            e.printStackTrace()
--        }
--    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.chat.CreateChatActivity\r\nimport com.singularity.ipcaplus.databinding.ActivityAddPeopleBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Profile\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Utilis\r\n\r\nclass AddPeopleActivity: AppCompatActivity() {\r\n\r\n    var users = arrayListOf<Profile>()\r\n    var selectedUsers = arrayListOf<Profile>()\r\n\r\n    private lateinit var binding: ActivityAddPeopleBinding\r\n\r\n    private var userAdapter: RecyclerView.Adapter<*>? = null\r\n    private var userSelectedAdapter: RecyclerView.Adapter<*>? = null\r\n\r\n    private var userLayoutManager: LinearLayoutManager? = null\r\n    private var userSelectedLayoutManager: LinearLayoutManager? = null\r\n\r\n\r\n    val db = Firebase.firestore\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_add_people)\r\n        binding = ActivityAddPeopleBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.backBtn.setOnClickListener {\r\n            finish()\r\n        }\r\n\r\n        // Add people with a chat already created\r\n        if (intent.hasExtra(\"chat_id\")) {\r\n            val chat_id = intent.getStringExtra(\"chat_id\")\r\n            Backend.getAllUsersExceptChatUsers(chat_id!!) {\r\n                users.clear()\r\n                users.addAll(it)\r\n                userAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n            // Continue button\r\n            binding.fabCreateChat.setOnClickListener {\r\n\r\n                Backend.db.collection(\"chat\")\r\n                    .document(chat_id)\r\n                    .get()\r\n                    .addOnSuccessListener { document ->\r\n\r\n                        val chat = Chat(\r\n                            document[\"name\"] as String,\r\n                            document[\"type\"] as String,\r\n                            document[\"ox\"] as String\r\n                        )\r\n\r\n                        val selectedUsersIds = arrayListOf<String>()\r\n                        for(user in selectedUsers) {\r\n                            selectedUsersIds.add(user.id!!)\r\n                        }\r\n\r\n                        Backend.addUsersIntoChat(chat, chat_id, selectedUsersIds) {\r\n                            finish()\r\n                        }\r\n\r\n                    }\r\n\r\n            }\r\n        }\r\n        // Add people and create chat for the first time\r\n        else {\r\n            Backend.getAllUsersExceptCurrent {\r\n                users.clear()\r\n                users.addAll(it)\r\n                userAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n            // Continue button\r\n            binding.fabCreateChat.setOnClickListener {\r\n\r\n                val selectedUsersIds = arrayListOf<String>()\r\n                for(user in selectedUsers) {\r\n                    selectedUsersIds.add(user.id!!)\r\n                }\r\n\r\n                // Add current user to users list\r\n                Backend.getUserProfile(Firebase.auth.currentUser!!.uid) {\r\n                    selectedUsersIds.add(it.id!!)\r\n\r\n                    // Send users list to chat creation\r\n                    val intent = Intent(this, CreateChatActivity::class.java)\r\n                    intent.putExtra(\"users\", selectedUsersIds)\r\n                    intent.putExtra(\"type\", \"group\")\r\n                    startActivity(intent)\r\n                }\r\n            }\r\n        }\r\n\r\n        // Recycler View All Users\r\n        userLayoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)\r\n        binding.recyclerViewUsers.layoutManager = userLayoutManager\r\n        userAdapter = AllUsersAdapter()\r\n        binding.recyclerViewUsers.itemAnimator = DefaultItemAnimator()\r\n        binding.recyclerViewUsers.adapter = userAdapter\r\n\r\n        // Recycler View Selected Users\r\n        userSelectedLayoutManager = LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false)\r\n        binding.recyclerViewUsersSelected.layoutManager = userSelectedLayoutManager\r\n        userSelectedAdapter = SelectedUsersAdapter()\r\n        binding.recyclerViewUsersSelected.itemAnimator = DefaultItemAnimator()\r\n        binding.recyclerViewUsersSelected.adapter = userSelectedAdapter\r\n\r\n    }\r\n\r\n\r\n    inner class AllUsersAdapter : RecyclerView.Adapter<AllUsersAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            return ViewHolder(\r\n                LayoutInflater.from(parent.context).inflate(R.layout.row_user, parent, false)\r\n            )\r\n        }\r\n\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n            holder.v.apply {\r\n                // Variables\r\n                val username = findViewById<TextView>(R.id.textViewProfileName)\r\n                val imageViewUser = findViewById<ImageView>(R.id.imageViewProfile)\r\n\r\n                // Set data\r\n                Utilis.getFile(context, \"profilePictures/${users[position].id}.png\", \"png\") { bitmap ->\r\n                    imageViewUser.setImageBitmap(bitmap)\r\n                }\r\n\r\n                username.text = Utilis.getFirstAndLastName(users[position].name)\r\n\r\n            }\r\n            holder.v.setOnClickListener {\r\n\r\n                selectedUsers.add(users[position])\r\n                users.remove(users[position])\r\n                userSelectedAdapter?.notifyDataSetChanged()\r\n                userAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return users.size\r\n        }\r\n    }\r\n\r\n    inner class SelectedUsersAdapter : RecyclerView.Adapter<SelectedUsersAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            return ViewHolder(\r\n                LayoutInflater.from(parent.context).inflate(R.layout.row_add_pp, parent, false)\r\n            )\r\n        }\r\n\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n            holder.v.apply {\r\n                // Variables\r\n                val username = findViewById<TextView>(R.id.textViewProfileNameAdd)\r\n                val imageViewUser = findViewById<ImageView>(R.id.imageViewProfile)\r\n\r\n                // Set data\r\n                Utilis.getFile(context,\"profilePictures/${selectedUsers[position].id}.png\", \"png\") { bitmap ->\r\n                    imageViewUser.setImageBitmap(bitmap)\r\n                }\r\n\r\n                username.text = Utilis.getFirstAndLastName(selectedUsers[position].name)\r\n\r\n            }\r\n            holder.v.setOnClickListener {\r\n\r\n                users.add(selectedUsers[position])\r\n                selectedUsers.remove(selectedUsers[position])\r\n                userAdapter?.notifyDataSetChanged()\r\n                userSelectedAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return selectedUsers.size\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt b/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt
---- a/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt	(revision 5fa09412663837672a36a41fd04f1700573c5f37)
-+++ b/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt	(date 1642080867525)
-@@ -67,7 +67,9 @@
-                         val chat = Chat(
-                             document["name"] as String,
-                             document["type"] as String,
--                            document["ox"] as String
-+                            document["ox"] as String,
-+                            document["iv"] as String,
-+                            document["notificationKey"] as String
-                         )
- 
-                         val selectedUsersIds = arrayListOf<String>()
-Index: app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.utils\r\n\r\nimport android.net.Uri\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.firebase.storage.FirebaseStorage\r\nimport com.google.firebase.storage.ktx.storage\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.models.*\r\nimport org.json.JSONArray\r\nimport java.io.File\r\n\r\nobject Backend {\r\n\r\n    val db = Firebase.firestore\r\n\r\n    /*\r\n       ------------------------------------------------ Events ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all events during the month in the firebase to an list\r\n       @month = selected month\r\n       @callBack = return the list\r\n    */\r\n    fun getAllMonthEvents(month: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        // Get all user chat ids\r\n        val chatIds = arrayListOf<String>()\r\n        getAllUserChatIds {\r\n            chatIds.addAll(it)\r\n\r\n            // Search in all chats\r\n            for (id in chatIds) {\r\n                db.collection(\"chat\")\r\n                    .document(id)\r\n                    .collection(\"event\")\r\n                    .addSnapshotListener { documents, _ ->\r\n\r\n                        documents?.let {\r\n\r\n                            for (document in documents) {\r\n                                val event = EventCalendar.fromHash(document)\r\n                                event.id = document.id\r\n\r\n                                val date = Utilis.getDate(event.datetime.seconds * 1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                                if (month == Utilis.getMonthById(Utilis.getMonth(date).toInt())) {\r\n                                    events.add(event)\r\n                                }\r\n                            }\r\n                            callBack(events)\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private fun getAllUserChatIds(callBack: (List<String>)->Unit) {\r\n\r\n        val chatIds = arrayListOf<String>()\r\n\r\n        // Get Group Chats Ids\r\n        db.collection(\"profile\").document(Firebase.auth.currentUser!!.uid).collection(\"chat\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in it) {\r\n                        chatIds.add(document.id)\r\n                    }\r\n\r\n                    callBack(chatIds)\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the month in the firebase to an list\r\n       @month = selected month\r\n       @callBack = return the list\r\n    */\r\n    fun getAllChatMonthEvents(month: String, chat_id: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        db.collection(\"chat\")\r\n            .document(chat_id)\r\n            .collection(\"event\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val event = EventCalendar.fromHash(document)\r\n                        event.id = document.id\r\n\r\n                        val date = Utilis.getDate(\r\n                            event.datetime.seconds * 1000,\r\n                            \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                        )\r\n                        if (month == Utilis.getMonthById(Utilis.getMonth(date).toInt())) {\r\n                            events.add(event)\r\n                        }\r\n                    }\r\n\r\n                    callBack(events)\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the day in the firebase to an list\r\n       @day = selected day\r\n       @callBack = return the list\r\n    */\r\n    fun getAllChatMonthDayEvents(month: String, day: Int, chat_id: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        db.collection(\"chat\")\r\n            .document(chat_id)\r\n            .collection(\"event\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val event = EventCalendar.fromHash(document)\r\n                        event.id = document.id\r\n\r\n                        val date = Utilis.getDate(\r\n                            event.datetime.seconds * 1000,\r\n                            \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                        )\r\n                        if (day == Utilis.getDay(date).toInt() && month == Utilis.getMonthById(\r\n                                Utilis.getMonth(date).toInt()\r\n                            )\r\n                        ) {\r\n                            events.add(event)\r\n                        }\r\n                    }\r\n\r\n                    callBack(events)\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the day in the firebase to an list\r\n       @day = selected day\r\n       @callBack = return the list\r\n    */\r\n    fun getAllMonthDayEvents(month: String, day: Int, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        // Get all user chat ids\r\n        val chatIds = arrayListOf<String>()\r\n        getAllUserChatIds {\r\n            chatIds.addAll(it)\r\n\r\n            // Search in all chats\r\n            for (id in chatIds) {\r\n                db.collection(\"chat\")\r\n                    .document(id)\r\n                    .collection(\"event\")\r\n                    .addSnapshotListener { documents, _ ->\r\n\r\n                        documents?.let {\r\n\r\n                            for (document in documents) {\r\n                                val event = EventCalendar.fromHash(document)\r\n                                event.id = document.id\r\n\r\n                                val date = Utilis.getDate(event.datetime.seconds * 1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                                if (day == Utilis.getDay(date).toInt() && month == Utilis.getMonthById(\r\n                                        Utilis.getMonth(date).toInt())\r\n                                ) {\r\n                                    events.add(event)\r\n                                }\r\n                            }\r\n\r\n                            callBack(events)\r\n                        }\r\n\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    fun deleteEvent(chatID: String, eventID: String) {\r\n\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"event\")\r\n            .document(eventID)\r\n            .delete()\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Schedule ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all events in the firebase to an list\r\n       @callBack = return the list\r\n    */\r\n    fun getDayCourseSubjects(day: String, courseId: String, callBack: (List<Subject>)->Unit) {\r\n\r\n        val subjects = arrayListOf<Subject>()\r\n        val subjectsWithBreaks = arrayListOf<Subject>()\r\n\r\n        db.collection(\"course\").document(courseId).collection(\"subject\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n\r\n                    // Add every subject to the list\r\n                    for (document in documents) {\r\n                        val subject = Subject.fromHash(document)\r\n                        if (day == subject.day) {\r\n                            subjects.add(subject)\r\n                        }\r\n                    }\r\n\r\n                    // Order the subjects by time\r\n                    for (i in 0 until subjects.size) {\r\n                        for (j in 0 until subjects.size - 1) {\r\n\r\n                            if (Utilis.convertHoursStringToInt(subjects[j].start_time) > Utilis.convertHoursStringToInt(\r\n                                    subjects[j + 1].start_time\r\n                                )\r\n                            ) {\r\n                                val temp = subjects[j]\r\n                                subjects[j] = subjects[j + 1]\r\n                                subjects[j + 1] = temp\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Add Break Times Between Classes\r\n                    for (i in 0 until subjects.size) {\r\n                        if (i % 2 == 0) {\r\n                            subjectsWithBreaks.add(subjects[i])\r\n                        }\r\n                        else {\r\n                            val diff = Utilis.convertHoursStringToInt(subjects[i].start_time) - Utilis.convertHoursStringToInt(\r\n                                subjects[i - 1].end_time\r\n                            )\r\n                            subjectsWithBreaks.add(Subject(\"breaktime\", diff.toString()))\r\n                            subjectsWithBreaks.add(subjects[i])\r\n                        }\r\n                    }\r\n\r\n                    callBack(subjectsWithBreaks)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns the user course by callback\r\n       @id = user uid\r\n    */\r\n    fun getUserCourses(uid: String, callBack:(String)->Unit) {\r\n\r\n        db.collection(\"profile\")\r\n            .document(uid)\r\n            .collection(\"course\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    var courseId = \"\"\r\n                    for (document in documents)\r\n                        courseId = document.id\r\n\r\n                    callBack(courseId)\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns the user course by callback\r\n       @id = user uid\r\n    */\r\n    fun getUserCoursesIds(uid: String, courseTag: String, callBack:(List<String>)->Unit) {\r\n\r\n        val courseIds = arrayListOf<String>()\r\n\r\n        db.collection(\"course\")\r\n            .whereEqualTo(\"tag\", courseTag)\r\n            .get()\r\n            .addOnSuccessListener { documents ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents)\r\n                        courseIds.add(document.id)\r\n\r\n                    callBack(courseIds)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    fun setUserCourses(userID: String, courseID: String) {\r\n\r\n        val profile = HashMap<String, Any>()\r\n        db.collection(\"profile\")\r\n            .document(userID)\r\n            .collection(\"course\")\r\n            .document(courseID)\r\n            .set(profile)\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Contacts ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all contacts in the firebase to an list\r\n       @callBack = return the list\r\n    */\r\n    fun getAllContacts(callBack: (List<Contact>)->Unit) {\r\n\r\n        val contacts = arrayListOf<Contact>()\r\n\r\n        db.collection(\"contacts\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val contact = Contact.fromHash(document)\r\n                        contacts.add(contact)\r\n                    }\r\n\r\n                    callBack(contacts)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Profile ------------------------------------------------\r\n    */\r\n\r\n    fun getUserProfile(userId: String, callBack:(Profile)->Unit) {\r\n\r\n        var profile = Profile()\r\n\r\n        db.collection(\"profile\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n\r\n                        if (document.id == userId) {\r\n                            profile = Profile.fromHash(document)\r\n                            profile.id = document.id\r\n                        }\r\n                    }\r\n\r\n                    callBack(profile)\r\n                }\r\n            }\r\n    }\r\n\r\n    fun getAllUsers (callBack:(List<Profile>)->Unit) {\r\n        val profiles = arrayListOf<Profile>()\r\n\r\n        db.collection(\"profile\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val profile = Profile.fromHash(document)\r\n                        profile.id = document.id\r\n                        profiles.add(profile)\r\n                    }\r\n                }\r\n\r\n                callBack(profiles)\r\n            }\r\n    }\r\n\r\n    fun getAllUsersExceptCurrent (callBack:(List<Profile>)->Unit) {\r\n        val profiles = arrayListOf<Profile>()\r\n\r\n        db.collection(\"profile\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val profile = Profile.fromHash(document)\r\n\r\n                        if (Firebase.auth.currentUser!!.uid != document.id) {\r\n                            profile.id = document.id\r\n                            profiles.add(profile)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                callBack(profiles)\r\n            }\r\n    }\r\n\r\n\r\n    fun getAllUsersExceptChatUsers (chatID: String, callBack:(List<Profile>)->Unit) {\r\n\r\n        val currentUserIds = arrayListOf<String>()\r\n        val profiles = arrayListOf<Profile>()\r\n\r\n        // Get current chat users ids\r\n        getChatUsers(chatID) {\r\n            for (user in it)\r\n                currentUserIds.add(user.id!!)\r\n\r\n            db.collection(\"profile\")\r\n                .addSnapshotListener { documents, _ ->\r\n                    documents?.let {\r\n\r\n                        for (document in documents) {\r\n                            val profile = Profile.fromHash(document)\r\n\r\n                            // Verify if user is not in the chat\r\n                            var found = false\r\n                            for (id in currentUserIds) {\r\n                                if (id == document.id)\r\n                                    found = true\r\n                            }\r\n\r\n                            if (!found) {\r\n                                profile.id = document.id\r\n                                profiles.add(profile)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    callBack(profiles)\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    fun changeUserChatAdminStatus(chatId: String, userId: String, status: Boolean) {\r\n\r\n        db.collection(\"chat\")\r\n            .document(chatId)\r\n            .collection(\"user\")\r\n            .document(userId)\r\n            .update(\"admin\", status)\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Chats ------------------------------------------------\r\n    */\r\n\r\n\r\n    fun getChatUsers(chatID: String, callBack: (List<Profile>)->Unit) {\r\n\r\n        val userIds = arrayListOf<String>()\r\n        val adminIds = arrayListOf<String>()\r\n        val users = arrayListOf<Profile>()\r\n\r\n        // Get the ids of the users in the chat\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        userIds.add(document.id)\r\n\r\n                        if (document[\"admin\"] != true)\r\n                            adminIds.add(document.id)\r\n\r\n                    }\r\n                }\r\n\r\n                // Find the data for each id\r\n                db.collection(\"profile\")\r\n                    .addSnapshotListener { documents2, _ ->\r\n                        documents2?.let {\r\n                            for (document in documents2) {\r\n                                for (id in userIds) {\r\n                                    if (document.id == id) {\r\n                                        val profile = Profile.fromHash(document)\r\n                                        profile.id = document.id\r\n                                        users.add(profile)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        // Get Admins\r\n                        for (u in users) {\r\n                            for (a in adminIds) {\r\n                                if (u.id == a) {\r\n                                    u.isAdmin = true\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        callBack(users)\r\n                    }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    fun getChatUsersUids(chatID: String, callBack: (List<String>) -> Unit){\r\n        var userIds = arrayListOf<String>()\r\n\r\n        // Get the ids of the users in the chat\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        userIds.add(document.id)\r\n                    }\r\n                }\r\n\r\n                callBack(userIds)\r\n            }\r\n    }\r\n\r\n\r\n    fun changeChatName(chatID: String, newName: String) {\r\n\r\n        var userIds = arrayListOf<String>()\r\n\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .update(\"name\", newName)\r\n\r\n        getChatUsersUids(chatID) {\r\n            userIds.addAll(it)\r\n\r\n            for (userId in userIds) {\r\n                db.collection(\"profile\")\r\n                    .document(userId)\r\n                    .collection(\"chat\")\r\n                    .document(chatID)\r\n                    .update(\"name\", newName)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns last chat message by chat id\r\n       @callBack = return the message\r\n    */\r\n    fun getLastMessageByChatID(chatID: String, callBack: (Message?)->Unit) {\r\n\r\n        var message : Message? = null\r\n\r\n        db.collection(\"chat\").document(\"${chatID}\").collection(\"message\")\r\n            .orderBy(\"time\", Query.Direction.DESCENDING).limit(1)\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        message = Message.fromHash(document)\r\n                        }\r\n                    }\r\n\r\n                    callBack(message)\r\n                }\r\n\r\n    }\r\n\r\n\r\n    fun getChatAdminIds(chatID: String, callBack: (List<String>)->Unit) {\r\n\r\n        val adminIds = arrayListOf<String>()\r\n\r\n        // Get Admins\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n\r\n                        if (document[\"admin\"] == true)\r\n                            adminIds.add(document.id)\r\n\r\n                    }\r\n\r\n                    callBack(adminIds)\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n\r\n    fun removeUserFromChat(chatId: String, userId: String) {\r\n\r\n        // remover user from chat user list\r\n        db.collection(\"chat\")\r\n            .document(chatId)\r\n            .collection(\"user\")\r\n            .document(userId)\r\n            .delete()\r\n\r\n        // remove chat from user chat list\r\n        db.collection(\"profile\")\r\n            .document(userId)\r\n            .collection(\"chat\")\r\n            .document(chatId)\r\n            .delete()\r\n    }\r\n\r\n\r\n    fun addUsersIntoChat(chat: Chat, chatId: String, usersId: ArrayList<String>, callBack: ()->Unit) {\r\n\r\n        for (userId in usersId) {\r\n\r\n            // Create chat in user profile\r\n            db.collection(\"profile\")\r\n                .document(userId)\r\n                .collection(\"chat\")\r\n                .document(chatId)\r\n                .set(chat)\r\n                .addOnCompleteListener {\r\n\r\n                    val profile = HashMap<String, Any>()\r\n                    db.collection(\"chat\")\r\n                        .document(chatId)\r\n                        .collection(\"user\")\r\n                        .document(userId)\r\n                        .set(profile)\r\n                        .addOnCompleteListener {\r\n                            callBack()\r\n                        }\r\n\r\n                }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    fun deleteChat(chatId: String, callback: ()->Unit) {\r\n\r\n        val userIds = arrayListOf<String>()\r\n\r\n        // get all chat members ids\r\n        db.collection(\"chat\")\r\n            .document(chatId)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        userIds.add(document.id)\r\n                    }\r\n\r\n                    // <------------------------------------------------------- Missing here\r\n\r\n                    // delete chat\r\n                    /*\r\n                    db.collection(\"chat\")\r\n                        .document(chatId)\r\n                        .delete()\r\n*/\r\n\r\n                    // delete chat references in members\r\n                    for (i in 0 until userIds.size) {\r\n\r\n                        db.collection(\"profile\")\r\n                            .document(userIds[i])\r\n                            .collection(\"chat\")\r\n                            .document(chatId)\r\n                            .delete()\r\n                            .addOnCompleteListener {\r\n                                // If its the last callback refresh the activity\r\n                                if (i == userIds.size - 1)\r\n                                    callback()\r\n                            }\r\n\r\n                    }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    fun getAllDirectChatIdsByUser(userId: String, callBack: (List<String?>) -> Unit){\r\n\r\n        var chatIds = arrayListOf<String?>()\r\n\r\n        // Get all profile chat ids\r\n        db.collection(\"profile\")\r\n            .document(userId)\r\n            .collection(\"chat\")\r\n            .whereEqualTo(\"type\", \"chat\")\r\n            .get()\r\n            .addOnSuccessListener { documents ->\r\n                for (document in documents) {\r\n                    chatIds.add(document.id)\r\n                }\r\n\r\n                println(\"DEntroooo\" + chatIds)\r\n                callBack(chatIds)\r\n            }\r\n\r\n    }\r\n\r\n    fun getDirectChatById(chatIds: List<String?>, userId: String, callBack: (String?)-> Unit) {\r\n\r\n        var chatId : String? = null\r\n\r\n        for (id in chatIds) {\r\n            db.collection(\"chat\")\r\n                .document(id!!)\r\n                .collection(\"user\")\r\n                .get()\r\n                .addOnSuccessListener { documents ->\r\n                    for(document in documents) {\r\n                        if(document.id == userId){\r\n                            chatId = id\r\n                        }\r\n                    }\r\n\r\n                    println(\"ACABOU2---------------------------------------\")\r\n                    callBack(chatId)\r\n                }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Register Manipulation ------------------------------------------------\r\n    */\r\n\r\n    fun getIpcaData(email: String, callBack: (Profile?)->Unit) {\r\n\r\n        var profile : Profile? = null\r\n\r\n        db.collection(\"ipca_data\")\r\n            .whereEqualTo(\"email\", email)\r\n            .get()\r\n            .addOnSuccessListener { documents ->\r\n\r\n                for (document in documents) {\r\n                    profile = Profile.fromHash(document)\r\n                }\r\n\r\n                callBack(profile)\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Files ------------------------------------------------\r\n    */\r\n\r\n    fun getAllChatFolderFiles(path: String, callBack: (List<FirebaseFile>) -> Unit) {\r\n\r\n        val files = arrayListOf<FirebaseFile>()\r\n        val listRef = Firebase.storage.reference.child(path)\r\n\r\n        // Find all the prefixes and items.\r\n        listRef.listAll().addOnSuccessListener {\r\n\r\n            for (i in it.prefixes) {\r\n                files.add(FirebaseFile(i.name, R.drawable.ic_folder))\r\n            }\r\n\r\n            for (i in it.items) {\r\n                val icon = Utilis.getFileIcon(i.name)\r\n                if (icon != -1) {\r\n                    val file = FirebaseFile(i.name, icon)\r\n                    files.add(file)\r\n                }\r\n            }\r\n\r\n            callBack(files)\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n      ------------------------------------------------ Files ------------------------------------------------\r\n   */\r\n\r\n\r\n    fun deleteAllFilesInsideFolder(filePath: String, callback: ()->Unit) {\r\n\r\n        val storage = Firebase.storage\r\n        val listRef = storage.reference.child(filePath)\r\n\r\n        listRef.listAll()\r\n            .addOnSuccessListener {\r\n\r\n                it.items.forEach { item ->\r\n                    item.delete()\r\n                        .addOnCompleteListener {\r\n                            callback()\r\n                        }\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    fun getFileUrl(filePath: String, callback: (Uri)->Unit) {\r\n\r\n        val storageRef = FirebaseStorage.getInstance().reference.child(filePath)\r\n\r\n        storageRef.downloadUrl.addOnCompleteListener {\r\n            callback(it.result!!)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    fun postTokenAddress(tokenAdress: String, uid: String){\r\n        println(tokenAdress)\r\n        println(uid)\r\n        var token = HashMap<String, String>()\r\n        db.collection(\"profile\")\r\n            .document(uid)\r\n            .collection(\"tokens\")\r\n            .document(tokenAdress)\r\n            .set(token)\r\n    }\r\n\r\n    fun getAllTokens(uid: String, callBack: (List<String>) -> Unit){\r\n        val tokens = arrayListOf<String>()\r\n\r\n        db.collection(\"profile\").document(uid).collection(\"tokens\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                            tokens.add(document.id)\r\n                    }\r\n\r\n                    callBack(tokens)\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    fun createJsonArrayString(array: List<String>): JSONArray {\r\n        return JSONArray(array)\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt b/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt
---- a/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt	(revision 5fa09412663837672a36a41fd04f1700573c5f37)
-+++ b/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt	(date 1642080867521)
-@@ -880,4 +880,39 @@
-     fun createJsonArrayString(array: List<String>): JSONArray {
-         return JSONArray(array)
-     }
-+
-+    fun getIv(chat_id: String, callBack: (String?)->Unit) {
-+
-+        var iv : String? = null
-+
-+        db.collection("chat")
-+            .get()
-+            .addOnSuccessListener { documents ->
-+                for(document in documents) {
-+                    if (document.id == chat_id) {
-+                        val chat = Chat.fromHash(document)
-+                        iv = chat.iv.toString()
-+                    }
-+                }
-+                callBack(iv)
-+            }
-+    }
-+
-+    fun getNotificationKey(chat_id: String, callBack: (String?)->Unit) {
-+
-+        var notificationKey : String? = null
-+
-+        db.collection("chat")
-+            .get()
-+            .addOnSuccessListener { documents ->
-+                for(document in documents) {
-+                    if (document.id == chat_id) {
-+                        val chat = Chat.fromHash(document)
-+                        notificationKey = chat.notificationKey.toString()
-+                    }
-+                }
-+                callBack(notificationKey)
-+            }
-+    }
-+
- }
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]/shelved.patch
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]/shelved.patch
-new file mode 100644
---- /dev/null	(date 1642080053207)
-+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]/shelved.patch	(date 1642080053207)
-@@ -0,0 +1,497 @@
-+Index: app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.app.ActionBar\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.*\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.view.isVisible\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.drawer.CalendarActivity\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport com.singularity.ipcaplus.cryptography.getMetaOx\r\nimport com.singularity.ipcaplus.databinding.ActivityChatBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Backend.createJsonArrayString\r\nimport kotlinx.coroutines.*\r\nimport org.json.JSONArray\r\nimport org.json.JSONObject\r\nimport java.io.BufferedOutputStream\r\nimport java.io.BufferedWriter\r\nimport java.io.OutputStream\r\nimport java.io.OutputStreamWriter\r\nimport java.net.URL\r\nimport java.time.LocalDateTime\r\nimport java.time.format.DateTimeFormatter\r\nimport javax.net.ssl.HttpsURLConnection\r\n\r\nclass ChatActivity : AppCompatActivity() {\r\n\r\n    var messages = arrayListOf<Message>()\r\n    var currentUserIsAdmin = false\r\n    private lateinit var binding: ActivityChatBinding\r\n    private lateinit var chat_id : String\r\n    var tokens_adress = arrayListOf<String>()\r\n    var chat_user_uids = arrayListOf<String>()\r\n    private var mAdapter: RecyclerView.Adapter<*>? = null\r\n    private var mLayoutManager: LinearLayoutManager? = null\r\n\r\n    val db = Firebase.firestore\r\n    @SuppressLint(\"WrongConstant\")\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_chat)\r\n\r\n        binding = ActivityChatBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        supportActionBar?.displayOptions = ActionBar.DISPLAY_SHOW_CUSTOM\r\n        supportActionBar?.setCustomView(R.layout.appbar_custom_layout_chat)\r\n        findViewById<TextView>(R.id.AppBarTittle).text = \"Chat name\"\r\n        // Back button\r\n        findViewById<ImageView>(R.id.BackButtonImageView).setOnClickListener{\r\n            finish()\r\n        }\r\n\r\n        // Variables\r\n        chat_id = intent.getStringExtra(\"chat_id\").toString()\r\n        val current = LocalDateTime.now()\r\n\r\n        val formatter = DateTimeFormatter.BASIC_ISO_DATE\r\n        val formatted = current.format(formatter)\r\n\r\n        // Check if user is admin\r\n        Backend.getChatAdminIds(chat_id) {\r\n            val currentUser = Firebase.auth.currentUser!!.uid\r\n            for (admin in it) {\r\n                if (admin == currentUser)\r\n                    currentUserIsAdmin = true\r\n            }\r\n        }\r\n\r\n        // Get all members id of chat\r\n        Backend.getChatUsersUids(chat_id){\r\n            chat_user_uids.clear()\r\n            chat_user_uids.addAll(it)\r\n\r\n            for (userId in chat_user_uids){\r\n                // Getting all of tokens of  profile associated devices\r\n                Backend.getAllTokens(userId) {\r\n                    if (tokens_adress.isEmpty()){\r\n                        tokens_adress.clear()\r\n                    }\r\n                    tokens_adress.addAll(it)\r\n\r\n                    /*GlobalScope.launch {\r\n                        withContext(Dispatchers.IO){\r\n                            createNotificationGroup(\"grupotrablahotentativa\", createJsonArrayString(tokens_adress))\r\n                        }\r\n                    }*/\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        val profilePicfromTop = findViewById<ImageView>(R.id.ProfileImageView)\r\n        Utilis.getFile(this, \"chats/$chat_id/icon.png\", \"png\") { bitmap ->\r\n            profilePicfromTop.setImageBitmap(bitmap)\r\n        }\r\n\r\n        println(\"Current Date is: $formatted\")\r\n\r\n        // Send Message\r\n        binding.fabSend.setOnClickListener {\r\n            if(!binding.editTextMessage.text.isNullOrBlank()) {\r\n                // get data of ecripted shared preferences (\"chatuid\" -> \"key\")\r\n                val keygen = getMetaOx(this, chat_id)\r\n                // Build encryptation data of message send by the user\r\n                var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString())\r\n                val savedText = binding.editTextMessage.text.toString()\r\n\r\n                val message = Message(\r\n                    Firebase.auth.currentUser!!.uid,\r\n                    meta.toString(),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n                db.collection(\"chat\").document(\"$chat_id\").collection(\"message\")\r\n                    .add(message.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n\r\n                        GlobalScope.launch {\r\n                            withContext(Dispatchers.IO){\r\n                                //APA91bEKDInIYA242YofpahBmhB57pEI4gNT63DJJenWCccJGqeSYrWzj0BSruX49DhVp2vGSY5xJ2fEJk2vhtoraT3_bbjEKw4Nx3eJKj7tttVRPjQs0Uc_OPkrcj4twR70H5tAilnY\r\n                                println(\"AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\"+ savedText)\r\n                                sendNotificationToGroup( chat_id, savedText, \"APA91bGaOoMTjTD2s9MU63F1AvLqP6tkwdAFE0Mqs9jbghlSgcWlfe_38CboFiE2iiWFoKqNRwhF0G_TA5X9xegTL0_Tg0OGuFadJuBj1sGZqjqCcmF1EH2ZeRU7ySHosdNkmLmmOyFF\")\r\n                            }\r\n                        }\r\n                        Log.d(TAG, \"DocumentSnapshot added with ID: ${documentReference.id}\")\r\n\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(TAG, \"Error adding document\", e)\r\n                    }\r\n                binding.editTextMessage.text.clear()\r\n\r\n            }\r\n        }\r\n\r\n        // Show Messages\r\n        db.collection(\"chat\").document(\"$chat_id\").collection(\"message\").orderBy(\"time\", Query.Direction.DESCENDING)\r\n            .addSnapshotListener { documents, e ->\r\n\r\n                documents?.let {\r\n                    messages.clear()\r\n                    for (document in it) {\r\n                        Log.d(TAG, \"${document.id} => ${document.data}\")\r\n                        val message = Message.fromHash(document)\r\n                        messages.add(message)\r\n\r\n                    }\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n\r\n            }\r\n\r\n        // Recycler View Messages\r\n        mLayoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)\r\n        binding.recycleViewChat.layoutManager = mLayoutManager\r\n        mAdapter = MessageAdapter()\r\n        binding.recycleViewChat.itemAnimator = DefaultItemAnimator()\r\n        binding.recycleViewChat.adapter = mAdapter\r\n\r\n        mLayoutManager!!.reverseLayout = true\r\n\r\n    }\r\n\r\n    /*\r\n       This function create the action bar above the activity\r\n    */\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        val inflater: MenuInflater = menuInflater\r\n        inflater.inflate(R.menu.menu_chat, menu)\r\n\r\n        db.collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    for (document in it) {\r\n                        if(document.id == chat_id) {\r\n                            val chat = Chat.fromHash(document)\r\n                            val name = Utilis.getFirstAndLastName(chat.name)\r\n                            //supportActionBar?.title = chat.name\r\n                            findViewById<TextView>(R.id.AppBarTittle).text = name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        return true\r\n    }\r\n\r\n\r\n    /*\r\n        This function define the events of the action bar buttons\r\n     */\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        super.onOptionsItemSelected(item)\r\n\r\n        when (item.itemId){\r\n            R.id.calendario -> {\r\n                val intent = Intent(this, CalendarActivity::class.java)\r\n                intent.putExtra(\"chat_id\", chat_id)\r\n                intent.putExtra(\"is_admin\", currentUserIsAdmin)\r\n                startActivity(intent)\r\n                return true\r\n            }\r\n            R.id.chatMore -> {\r\n                val intent = Intent(this, ChatMoreActivity::class.java)\r\n                intent.putExtra(\"chat_id\", chat_id)\r\n                println(\"3------------------------------ \" + currentUserIsAdmin)\r\n                intent.putExtra(\"is_admin\", currentUserIsAdmin)\r\n                intent.putExtra(\"chat_name\",  Utilis.getFirstAndLastName(findViewById<TextView>(R.id.AppBarTittle).text.toString()))\r\n                startActivity(intent)\r\n                return true\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n\r\n    // When the support action bar back button is pressed, the app will go back to the previous activity\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        onBackPressed()\r\n        return true\r\n    }\r\n\r\n\r\n    inner class MessageAdapter : RecyclerView.Adapter<MessageAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        var otherUser = false\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            if(viewType == 1) {\r\n                otherUser = false\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_self, parent, false))\r\n            } else if (viewType == 2){\r\n                otherUser = false\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_system, parent, false))\r\n            } else {\r\n                otherUser = true\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_message_others, parent, false))\r\n            }\r\n\r\n        }\r\n\r\n        @RequiresApi(Build.VERSION_CODES.M)\r\n         override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n\r\n            holder.v.apply {\r\n\r\n                val textViewMessage = findViewById<TextView>(R.id.textViewMessage)\r\n                val timeLastMessage = findViewById<TextView?>(R.id.timeLastMessage)\r\n                val textViewUsername = findViewById<TextView?>(R.id.textViewUsername)\r\n\r\n\r\n                timeLastMessage?.isVisible = false\r\n                val keygen = getMetaOx(context, chat_id)\r\n                val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message)\r\n\r\n               /* if (otherUser) {\r\n                        Backend.getUserProfile(messages[position].user) {\r\n                            val userName = Utilis.getFirstAndLastName(it.name)\r\n                            textViewUsername.text = userName\r\n                        }\r\n                    }\r\n                */\r\n\r\n                textViewMessage.text = message_decripted\r\n                println(message_decripted)\r\n                if(position == messages.size - 1) {\r\n                    val data = Utilis.getDate(\r\n                        messages[position].time.seconds * 1000,\r\n                        \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                    )\r\n                    timeLastMessage.isVisible = true\r\n                    timeLastMessage.text = Utilis.getHours(data) + \":\" + Utilis.getMinutes(data)\r\n                }\r\n\r\n                if (otherUser) {\r\n                    val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)\r\n                    if (imageViewUser != null) {\r\n                        Utilis.getFile(context, \"profilePictures/${messages[position].user}.png\", \"png\") { bitmap ->\r\n                            imageViewUser.setImageBitmap(bitmap)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        override fun getItemViewType(position: Int) : Int {\r\n            if (messages[position].user == Firebase.auth.currentUser!!.uid) {\r\n                return 1\r\n            } else if (messages[position].user == \"system\"){\r\n                return 2\r\n            } else {\r\n                return 0\r\n            }\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return messages.size\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    private suspend fun  createNotificationGroup(notificationKeyName : String, registrationIds : JSONArray)  {\r\n\r\n        try {\r\n\r\n            Log.d(\"json\", registrationIds.toString())\r\n\r\n            //Request\r\n            val endPoint = URL(\"https://fcm.googleapis.com/fcm/notification\")\r\n\r\n            //Establish a connection\r\n            val httpsURLConnection: HttpsURLConnection =\r\n                endPoint.openConnection() as HttpsURLConnection\r\n\r\n            //Connection to fcm\r\n            //The time available to read from the input stream when the connection is established\r\n            httpsURLConnection.readTimeout = 10000\r\n            //The time available to connect to the url\r\n            httpsURLConnection.connectTimeout = 15000\r\n            //Defining the type of request to be made to the fcm\r\n            httpsURLConnection.requestMethod = \"POST\"\r\n            //Defining that the url connection can be used to send and receive data\r\n            httpsURLConnection.doInput = true\r\n            httpsURLConnection.doOutput = true\r\n\r\n            // Build parameters for json\r\n            httpsURLConnection.setRequestProperty(\"Content-Type\", \"application/json\")\r\n            val project_key = \"AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs\"\r\n            val senderId = \"209455028652\"\r\n            httpsURLConnection.setRequestProperty(\"authorization\", \"key=$project_key\")\r\n            httpsURLConnection.setRequestProperty(\"project_id\", senderId)\r\n\r\n            val json = JSONObject()\r\n\r\n            json.put(\"operation\", \"create\")\r\n            json.put(\"notification_key_name\", notificationKeyName)\r\n            json.put(\"registration_ids\", registrationIds)\r\n\r\n\r\n            // Writer\r\n            val outputStream: OutputStream =\r\n                BufferedOutputStream(httpsURLConnection.outputStream)\r\n            val writer = BufferedWriter(OutputStreamWriter(outputStream, \"utf-8\"))\r\n\r\n            // POST\r\n            writer.write(json.toString())\r\n            writer.flush()\r\n            writer.close()\r\n\r\n            outputStream.close()\r\n\r\n            //The response code and message of the POST requests\r\n            val responseCode: Int = httpsURLConnection.responseCode\r\n            val responseMessage = httpsURLConnection.responseMessage\r\n\r\n            Log.d(TAG, \"$responseCode $responseMessage\")\r\n\r\n\r\n            // Check server STATUS\r\n            if (responseCode in 400..499) {\r\n                httpsURLConnection.errorStream\r\n            } else {\r\n                httpsURLConnection.inputStream\r\n            }\r\n\r\n            if (responseCode == 200) {\r\n                Log.e(TAG, \"Group Created!!\")\r\n\r\n                val response = httpsURLConnection.inputStream.bufferedReader()\r\n                    .use { it.readText() }  // defaults to UTF-8\r\n                withContext(Dispatchers.Main) {\r\n                    //notification_key\r\n                    val jsonObject  = JSONObject(response)\r\n                    val notificationKey = jsonObject.getString(\"notification_key\")\r\n                    println(\"NotifKey: $notificationKey\")\r\n                    Log.d(\"NotifKey\", notificationKey)\r\n                }\r\n            } else {\r\n                Log.e(TAG, \"Error it didn´t work\")\r\n            }\r\n\r\n            //Here i close the connection to the endPoint\r\n            httpsURLConnection.disconnect()\r\n\r\n\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n\r\n    //This function sends push notifications to devices that are subscribed to a specific topic\r\n    private suspend fun sendNotificationToGroup(title: String, message: String, notificationKey : String) {\r\n\r\n        delay(1500)\r\n\r\n        try {\r\n\r\n            //Request\r\n            val url = URL(\"https://fcm.googleapis.com/fcm/send\")\r\n\r\n            //Establish a connection\r\n            val httpsURLConnection: HttpsURLConnection =\r\n                url.openConnection() as HttpsURLConnection\r\n\r\n            //The time available to read from the input stream when the connection is established\r\n            httpsURLConnection.readTimeout = 10000\r\n            //The time available to connect to the url\r\n            httpsURLConnection.connectTimeout = 15000\r\n            //Defining the type of request to be made to the fcm\r\n            httpsURLConnection.requestMethod = \"POST\"\r\n            //Defining that the url connection can be used to send and receive data\r\n            httpsURLConnection.doInput = true\r\n            httpsURLConnection.doOutput = true\r\n\r\n            // Config of FCM\r\n            val project_key = \"AAAAMMR-Gaw:APA91bFeijRa909_QEdEFsQeDSaJZRYD7rOk8B8Bc2QiYcGoyLG1xqqpZLkOJXmZrG0FbScojvqBCsweSEWDrMLM6kr67boS-BVB2oy7fL6Zn1N9ICVk6efGniauDa3z8eaOb1TENmEs\"\r\n            httpsURLConnection.setRequestProperty(\"authorization\", \"key=$project_key\")\r\n            httpsURLConnection.setRequestProperty(\"Content-Type\", \"application/json\")\r\n\r\n            val jsonObject = JSONObject()\r\n            val data = JSONObject()\r\n\r\n            data.put(\"title\", title)\r\n            data.put(\"content\", message)\r\n            //On Notification Click Activity\r\n            data.put(\"click_action\", \".LoginActivity\")\r\n\r\n            //jsonObject for POST\r\n            jsonObject.put(\"data\", data)\r\n            //\r\n            jsonObject.put(\"to\", notificationKey)\r\n\r\n            val outputStream: OutputStream =\r\n                BufferedOutputStream(httpsURLConnection.outputStream)\r\n            val writer = BufferedWriter(OutputStreamWriter(outputStream, \"utf-8\"))\r\n            \r\n            writer.write(jsonObject.toString())\r\n            writer.flush()\r\n            writer.close()\r\n\r\n            outputStream.close()\r\n\r\n            //The response code and message of the POST requests\r\n            val responseCode: Int = httpsURLConnection.responseCode\r\n            val responseMessage: String = httpsURLConnection.responseMessage\r\n\r\n\r\n            Log.d(TAG, \"Response from sendMes: $responseCode $responseMessage\")\r\n\r\n\r\n            // Check server STATUS\r\n            if (responseCode in 400..499) {\r\n                httpsURLConnection.errorStream\r\n            } else {\r\n                httpsURLConnection.inputStream\r\n            }\r\n            if (responseCode == 200) {\r\n                Log.e(\r\n                    TAG,\r\n                    \"Notification Sent \\n Title: $title \\n Body: $message\"\r\n                )\r\n            } else {\r\n                Log.e(TAG, \"Notification Error\")\r\n            }\r\n\r\n            httpsURLConnection.disconnect()\r\n\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n}
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt
-+--- a/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-++++ b/app/src/main/java/com/singularity/ipcaplus/chat/ChatActivity.kt	(date 1642079549061)
-+@@ -32,6 +32,7 @@
-+ import com.singularity.ipcaplus.models.Message
-+ import com.singularity.ipcaplus.utils.Backend
-+ import com.singularity.ipcaplus.utils.Backend.createJsonArrayString
-++import com.singularity.ipcaplus.utils.Backend.getIv
-+ import kotlinx.coroutines.*
-+ import org.json.JSONArray
-+ import org.json.JSONObject
-+@@ -126,39 +127,43 @@
-+                 // get data of ecripted shared preferences ("chatuid" -> "key")
-+                 val keygen = getMetaOx(this, chat_id)
-+                 // Build encryptation data of message send by the user
-+-                var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString())
-+-                val savedText = binding.editTextMessage.text.toString()
-++                getIv(chat_id) {
-++
-++                    var meta = encryptMeta( binding.editTextMessage.text.toString(), keygen.toString(), it.toString())
-++                    val savedText = binding.editTextMessage.text.toString()
-+ 
-+-                val message = Message(
-+-                    Firebase.auth.currentUser!!.uid,
-+-                    meta.toString(),
-+-                    Timestamp.now(),
-+-                    ""
-++                    val message = Message(
-++                        Firebase.auth.currentUser!!.uid,
-++                        meta.toString(),
-++                        Timestamp.now(),
-++                        ""
-+ 
-+-                )
-+-                db.collection("chat").document("$chat_id").collection("message")
-+-                    .add(message.toHash())
-+-                    .addOnSuccessListener { documentReference ->
-++                    )
-++                    db.collection("chat").document("$chat_id").collection("message")
-++                        .add(message.toHash())
-++                        .addOnSuccessListener { documentReference ->
-+ 
-+-                        GlobalScope.launch {
-+-                            withContext(Dispatchers.IO){
-+-                                //APA91bEKDInIYA242YofpahBmhB57pEI4gNT63DJJenWCccJGqeSYrWzj0BSruX49DhVp2vGSY5xJ2fEJk2vhtoraT3_bbjEKw4Nx3eJKj7tttVRPjQs0Uc_OPkrcj4twR70H5tAilnY
-+-                                println("AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"+ savedText)
-+-                                sendNotificationToGroup( chat_id, savedText, "APA91bGaOoMTjTD2s9MU63F1AvLqP6tkwdAFE0Mqs9jbghlSgcWlfe_38CboFiE2iiWFoKqNRwhF0G_TA5X9xegTL0_Tg0OGuFadJuBj1sGZqjqCcmF1EH2ZeRU7ySHosdNkmLmmOyFF")
-+-                            }
-+-                        }
-+-                        Log.d(TAG, "DocumentSnapshot added with ID: ${documentReference.id}")
-++                            GlobalScope.launch {
-++                                withContext(Dispatchers.IO){
-++                                    //APA91bEKDInIYA242YofpahBmhB57pEI4gNT63DJJenWCccJGqeSYrWzj0BSruX49DhVp2vGSY5xJ2fEJk2vhtoraT3_bbjEKw4Nx3eJKj7tttVRPjQs0Uc_OPkrcj4twR70H5tAilnY
-++                                    println("AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"+ savedText)
-++                                    sendNotificationToGroup( chat_id, savedText, "APA91bGaOoMTjTD2s9MU63F1AvLqP6tkwdAFE0Mqs9jbghlSgcWlfe_38CboFiE2iiWFoKqNRwhF0G_TA5X9xegTL0_Tg0OGuFadJuBj1sGZqjqCcmF1EH2ZeRU7ySHosdNkmLmmOyFF")
-++                                }
-++                            }
-++                            Log.d(TAG, "DocumentSnapshot added with ID: ${documentReference.id}")
-+ 
-+ 
-+-                    }
-+-                    .addOnFailureListener { e ->
-+-                        Log.w(TAG, "Error adding document", e)
-+-                    }
-+-                binding.editTextMessage.text.clear()
-++                        }
-++                        .addOnFailureListener { e ->
-++                            Log.w(TAG, "Error adding document", e)
-++                        }
-++                    binding.editTextMessage.text.clear()
-+ 
-+-            }
-+-        }
-++                }
-++            }
-+ 
-++        }
-++
-+         // Show Messages
-+         db.collection("chat").document("$chat_id").collection("message").orderBy("time", Query.Direction.DESCENDING)
-+             .addSnapshotListener { documents, e ->
-+@@ -285,32 +290,34 @@
-+ 
-+                 timeLastMessage?.isVisible = false
-+                 val keygen = getMetaOx(context, chat_id)
-+-                val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message)
-++                getIv(chat_id){
-++                    val message_decripted = decryptWithAESmeta(keygen.toString(), messages[position].message, it.toString())
-+ 
-+-               /* if (otherUser) {
-+-                        Backend.getUserProfile(messages[position].user) {
-+-                            val userName = Utilis.getFirstAndLastName(it.name)
-+-                            textViewUsername.text = userName
-+-                        }
-+-                    }
-+-                */
-++                    /* if (otherUser) {
-++                             Backend.getUserProfile(messages[position].user) {
-++                                 val userName = Utilis.getFirstAndLastName(it.name)
-++                                 textViewUsername.text = userName
-++                             }
-++                         }
-++                     */
-+ 
-+-                textViewMessage.text = message_decripted
-+-                println(message_decripted)
-+-                if(position == messages.size - 1) {
-+-                    val data = Utilis.getDate(
-+-                        messages[position].time.seconds * 1000,
-+-                        "yyyy-MM-dd'T'HH:mm:ss.SSS"
-+-                    )
-+-                    timeLastMessage.isVisible = true
-+-                    timeLastMessage.text = Utilis.getHours(data) + ":" + Utilis.getMinutes(data)
-+-                }
-++                    textViewMessage.text = message_decripted
-++                    println(message_decripted)
-++                    if(position == messages.size - 1) {
-++                        val data = Utilis.getDate(
-++                            messages[position].time.seconds * 1000,
-++                            "yyyy-MM-dd'T'HH:mm:ss.SSS"
-++                        )
-++                        timeLastMessage.isVisible = true
-++                        timeLastMessage.text = Utilis.getHours(data) + ":" + Utilis.getMinutes(data)
-++                    }
-+ 
-+-                if (otherUser) {
-+-                    val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)
-+-                    if (imageViewUser != null) {
-+-                        Utilis.getFile(context, "profilePictures/${messages[position].user}.png", "png") { bitmap ->
-+-                            imageViewUser.setImageBitmap(bitmap)
-++                    if (otherUser) {
-++                        val imageViewUser = findViewById<ImageView?>(R.id.imageViewUser)
-++                        if (imageViewUser != null) {
-++                            Utilis.getFile(context, "profilePictures/${messages[position].user}.png", "png") { bitmap ->
-++                                imageViewUser.setImageBitmap(bitmap)
-++                            }
-+                         }
-+                     }
-+                 }
-+Index: app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.MenuInflater\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityCreateChatBinding\r\nimport com.singularity.ipcaplus.drawer.DrawerActivty\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.ActivityImageHelper\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.utils.Utilis.buildSystemMessage\r\nimport com.theartofdev.edmodo.cropper.CropImage\r\nimport com.theartofdev.edmodo.cropper.CropImageView\r\n\r\nclass CreateDirectChatActivity : ActivityImageHelper() {\r\n\r\n\r\n    val db = Firebase.firestore\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        // Variables\r\n        var chatName : String\r\n\r\n        var type = intent.getStringExtra(\"type\")!!\r\n        var memberIds = intent.getStringArrayListExtra(\"users\")!!\r\n        println(memberIds)\r\n\r\n        // Generate key for chats\r\n        val keygen = metaGenrateKey()\r\n\r\n            Backend.getUserProfile(memberIds[1]) {\r\n\r\n\r\n                chatName = it.name\r\n                println(\"Nome antes\" + chatName)\r\n\r\n                // Chat data\r\n                var chat = Chat(\r\n                    chatName,\r\n                    type,\r\n                    keygen\r\n                )\r\n\r\n                // System message data\r\n                val message = Message(\r\n                    \"system\",\r\n                    buildSystemMessage(keygen),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n\r\n                val user = HashMap<String, Any>()\r\n                val admin = hashMapOf<String?, Any>(\r\n                    \"admin\" to true\r\n                )\r\n\r\n                db.collection(\"chat\")\r\n                    .add(chat.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n                        db.collection(\"chat\")\r\n                            .document(documentReference.id)\r\n                            .collection(\"message\")\r\n                            .add(message.toHash())\r\n                        for (member in memberIds) {\r\n                            println(\"IDSDSDS\" + memberIds)\r\n                            Backend.getUserProfile(memberIds[0]) {\r\n                                if (member == Firebase.auth.currentUser!!.uid) {\r\n                                    println(\"IF\")\r\n                                    // Chat data\r\n                                    chat = Chat(\r\n                                        it.name,\r\n                                        type,\r\n                                        keygen\r\n                                    )\r\n                                }\r\n                                println(\"NOMEEEEE\" + it.name)\r\n\r\n                                db.collection(\"profile\")\r\n                                    .document(member)\r\n                                    .collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .set(chat)\r\n                                db.collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .collection(\"user\")\r\n                                    .document(member)\r\n                                    .set(user)\r\n                                db.collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .collection(\"user\")\r\n                                    .document(member)\r\n                                    .update(admin)\r\n\r\n                            }\r\n\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                    }\r\n\r\n                val intent = Intent(this, DrawerActivty::class.java)\r\n                startActivity(intent)\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt
-+--- a/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-++++ b/app/src/main/java/com/singularity/ipcaplus/chat/CreateDirectChatActivity.kt	(date 1642079549076)
-+@@ -13,6 +13,7 @@
-+ import com.google.firebase.firestore.ktx.firestore
-+ import com.google.firebase.ktx.Firebase
-+ import com.singularity.ipcaplus.R
-++import com.singularity.ipcaplus.cryptography.generateRandomIV
-+ import com.singularity.ipcaplus.cryptography.metaGenrateKey
-+ import com.singularity.ipcaplus.databinding.ActivityCreateChatBinding
-+ import com.singularity.ipcaplus.drawer.DrawerActivty
-+@@ -38,6 +39,7 @@
-+         var type = intent.getStringExtra("type")!!
-+         var memberIds = intent.getStringArrayListExtra("users")!!
-+         println(memberIds)
-++        val ivGenerated = generateRandomIV()
-+ 
-+         // Generate key for chats
-+         val keygen = metaGenrateKey()
-+@@ -52,13 +54,14 @@
-+                 var chat = Chat(
-+                     chatName,
-+                     type,
-+-                    keygen
-++                    keygen,
-++                    ivGenerated
-+                 )
-+ 
-+                 // System message data
-+                 val message = Message(
-+                     "system",
-+-                    buildSystemMessage(keygen),
-++                    buildSystemMessage(keygen, ivGenerated),
-+                     Timestamp.now(),
-+                     ""
-+ 
-+@@ -85,7 +88,8 @@
-+                                     chat = Chat(
-+                                         it.name,
-+                                         type,
-+-                                        keygen
-++                                        keygen,
-++                                        ivGenerated
-+                                     )
-+                                 }
-+                                 println("NOMEEEEE" + it.name)
-+Index: app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package com.singularity.ipcaplus.utils\r\n\r\nimport android.app.Activity\r\nimport android.app.DownloadManager\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.res.Resources\r\nimport android.graphics.Bitmap\r\nimport android.graphics.BitmapFactory\r\nimport android.graphics.drawable.BitmapDrawable\r\nimport android.graphics.drawable.GradientDrawable\r\nimport android.net.Uri\r\nimport android.os.Build\r\nimport android.provider.MediaStore\r\nimport android.util.Log\r\nimport androidx.annotation.RequiresApi\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.firebase.storage.FirebaseStorage\r\nimport com.google.firebase.storage.StorageReference\r\nimport com.google.firebase.storage.ktx.storage\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.encryptMeta\r\nimport java.io.File\r\nimport java.io.IOException\r\nimport java.lang.Exception\r\nimport java.net.URI\r\nimport java.text.SimpleDateFormat\r\nimport java.time.LocalDate\r\nimport java.util.*\r\nimport java.util.regex.Pattern\r\n\r\nimport androidx.core.content.res.ResourcesCompat\r\nimport androidx.core.graphics.drawable.toBitmap\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport java.io.ByteArrayOutputStream\r\nimport com.singularity.ipcaplus.chat.ChatActivity\r\n\r\n\r\nobject  Utilis {\r\n\r\n    /*\r\n        This function return the current month id\r\n     */\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getCurrentMonthId(): Int {\r\n\r\n        val c = LocalDate.now()\r\n        val strArray = Pattern.compile(\"-\").split(c.toString())\r\n\r\n        return strArray[1].toInt()\r\n    }\r\n\r\n    /*\r\n        This function return the current year id\r\n     */\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getCurrentYear(): String {\r\n\r\n        val c = LocalDate.now()\r\n        val strArray = Pattern.compile(\"-\").split(c.toString())\r\n\r\n        return strArray[0]\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    fun getYearByCalendarId(id: Int): Int {\r\n\r\n        var count = id\r\n        var result = 2021 - 121 // add 1900\r\n\r\n        while (count > 0) {\r\n            count -= 1\r\n            result ++\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    /*\r\n        This function return the month value in string by an id\r\n        @month = month id\r\n     */\r\n    fun getMonthById(month: Int): String {\r\n        return when (month) {\r\n            1 -> \"Janeiro\"\r\n            2 -> \"Fevereiro\"\r\n            3 -> \"Março\"\r\n            4 -> \"Abril\"\r\n            5 -> \"Maio\"\r\n            6 -> \"Junho\"\r\n            7 -> \"Julho\"\r\n            8 -> \"Agosto\"\r\n            9 -> \"Setembro\"\r\n            10 -> \"Outubro\"\r\n            11 -> \"Novembro\"\r\n            12 -> \"Dezembro\"\r\n            else -> \"None\"\r\n        }\r\n    }\r\n\r\n    fun convertHoursStringToInt(strVal: String): Int {\r\n        val strArray = Pattern.compile(\":\").split(strVal)\r\n        val result = strArray[0] + strArray[1]\r\n        return result.toInt()\r\n    }\r\n\r\n    fun getDate(milliSeconds: Long, dateFormat: String?): String {\r\n        // Create a DateFormatter object for displaying date in specified format.\r\n        val formatter = SimpleDateFormat(dateFormat)\r\n\r\n        // Create a calendar object that will convert the date and time value in milliseconds to date.\r\n        val calendar: Calendar = Calendar.getInstance()\r\n        calendar.timeInMillis = milliSeconds\r\n        return formatter.format(calendar.time)\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the day\r\n        @date = default date\r\n     */\r\n    fun getDay(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\"T\").split(strArray[2])\r\n\r\n        return strArray2[0]\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the month in text\r\n        @date = default date\r\n     */\r\n    fun getMonth(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n\r\n        return strArray[1].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the year in text\r\n        @date = default date\r\n     */\r\n    fun getYear(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"-\").split(dateTime)\r\n\r\n        return strArray[0].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the Hours in text\r\n        @date = default date\r\n     */\r\n    fun getHours(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"T\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\":\").split(strArray[1])\r\n\r\n        return strArray2[0].toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function split the date and return only the Minutes in text\r\n        @date = default date\r\n     */\r\n    fun getMinutes(dateTime: String): String {\r\n\r\n        // Split the date\r\n        val strArray = Pattern.compile(\"T\").split(dateTime)\r\n        val strArray2 = Pattern.compile(\":\").split(strArray[1])\r\n\r\n        return strArray2[1].toString()\r\n    }\r\n\r\n    /*\r\n        This function get the buffer with the name of filename on assets folder\r\n     */\r\n\r\n    fun getJsonDataFromAsset(context: Context, fileName: String): String? {\r\n        val jsonString: String\r\n        try {\r\n            jsonString = context.assets.open(fileName).bufferedReader().use { it.readText() }\r\n        } catch (ioException: IOException) {\r\n            ioException.printStackTrace()\r\n            return null\r\n        }\r\n        return jsonString\r\n    }\r\n\r\n    fun getFirstAndLastName(fullName: String): String {\r\n\r\n        val nameArray = Pattern.compile(\" \").split(fullName)\r\n\r\n        return nameArray[0] + \" \" + nameArray[nameArray.size-1]\r\n    }\r\n\r\n    /*\r\n       ------------------------------------------------ Images ------------------------------------------------\r\n    */\r\n\r\n    fun convertDrawableToBitmap(context: Context, drawable: Int): Bitmap {\r\n        return BitmapFactory.decodeResource(context.resources, R.drawable.circle)\r\n    }\r\n\r\n\r\n    fun getFile(context: Context, path: String, suffix: String, callback:(Bitmap)->Unit) {\r\n\r\n        // Retrieve image from firebase\r\n        val storageRef = FirebaseStorage.getInstance().reference.child(path)\r\n        val localfile = File.createTempFile(\"tempImage\", suffix)\r\n\r\n        // Set ImageView\r\n        storageRef.getFile(localfile).addOnSuccessListener {\r\n            val bitmap = BitmapFactory.decodeFile(localfile.absolutePath)\r\n            callback(bitmap)\r\n        }.addOnFailureListener {\r\n            val bitmap = (ResourcesCompat.getDrawable(\r\n                context.resources,\r\n                R.drawable.circle,\r\n                null\r\n            ) as GradientDrawable?)!!.toBitmap()\r\n            callback(bitmap)\r\n        }\r\n\r\n    }\r\n\r\n    fun downloadFile(context: Context, fileName: String, fileExtension: String, destinationDirectory: String, uri: Uri) {\r\n\r\n        val downloadManager = context.getSystemService(Context.DOWNLOAD_SERVICE) as DownloadManager\r\n        val request = DownloadManager.Request(uri)\r\n\r\n        request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED)\r\n        request.setDestinationInExternalPublicDir(destinationDirectory, fileName + fileExtension)\r\n\r\n        downloadManager.enqueue(request)\r\n    }\r\n\r\n\r\n    fun uploadFile(filePath: Uri, targetPath: String) {\r\n\r\n        val storage = Firebase.storage\r\n        val storageRef = storage.reference\r\n\r\n        if (filePath != Uri.EMPTY) {\r\n            val ref: StorageReference = storageRef.child(targetPath)\r\n            ref.putFile(filePath)\r\n        }\r\n    }\r\n\r\n\r\n    fun getFileIcon(fileName:String): Int {\r\n        return if (fileName.contains(\".\")) {\r\n\r\n            val extensionArray = Pattern.compile(\"[.]\").split(fileName)\r\n            val extension = extensionArray[extensionArray.size-1]\r\n\r\n            when (extension) {\r\n                \"png\", \"jpg\", \"jpeg\", \"jep\", \"jfif\", \"gif\" -> R.drawable.ic_picture\r\n                \"invisible\" -> -1\r\n                else -> R.drawable.ic_file\r\n            }\r\n\r\n        } else\r\n            -1\r\n    }\r\n\r\n\r\n    fun uniqueImageNameGen(): String {\r\n        val characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!#$$%&/()=@[]{}\"\r\n\r\n        val sb = StringBuilder(15)\r\n\r\n        for(x in 0 until 15){\r\n            val random = (characters.indices).random()\r\n            sb.append(characters[random])\r\n        }\r\n\r\n        return sb.toString()\r\n    }\r\n\r\n\r\n    /*\r\n        This function gets the domain of email\r\n        split remove the @ and make the array like this -> [a20115][alunos.ipca.pt]\r\n     */\r\n    fun getEmailDomain(email: String) : String{\r\n        val strArray = Pattern.compile(\"@\").split(email)\r\n        val result= strArray[1]\r\n\r\n        return result.toString()\r\n\r\n    }\r\n\r\n    /*\r\n        ------------------------------------------------ Chat ------------------------------------------------\r\n     */\r\n\r\n    /*\r\n       This function returns the encrypted system message\r\n       @callBack = return the list\r\n    */\r\n    fun buildSystemMessage(key: String) : String {\r\n\r\n        // Build encryptation data of first message send by the system\r\n        var message = encryptMeta(\"This chat is being encripted with Singularity Encryption!\", key)\r\n\r\n        return message.toString()\r\n\r\n    }\r\n\r\n    // Que merda é esta :v\r\n    fun getUID(): String? {\r\n        val firebaseAuth = FirebaseAuth.getInstance()\r\n        return firebaseAuth.uid\r\n    }\r\n\r\n    fun calculateInSampleSize(options: BitmapFactory.Options, reqWidth: Int, reqHeight: Int): Int {\r\n        // Raw height and width of image\r\n        val (height: Int, width: Int) = options.run { outHeight to outWidth }\r\n        var inSampleSize = 1\r\n\r\n        if (height > reqHeight || width > reqWidth) {\r\n\r\n            val halfHeight: Int = height / 2\r\n            val halfWidth: Int = width / 2\r\n\r\n            // Calculate the largest inSampleSize value that is a power of 2 and keeps both\r\n            // height and width larger than the requested height and width.\r\n            while (halfHeight / inSampleSize >= reqHeight && halfWidth / inSampleSize >= reqWidth) {\r\n                inSampleSize *= 2\r\n            }\r\n        }\r\n\r\n        return inSampleSize\r\n    }\r\n\r\n}
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+diff --git a/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt b/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt
-+--- a/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-++++ b/app/src/main/java/com/singularity/ipcaplus/utils/Utilis.kt	(date 1642079549049)
-+@@ -310,10 +310,10 @@
-+        This function returns the encrypted system message
-+        @callBack = return the list
-+     */
-+-    fun buildSystemMessage(key: String) : String {
-++    fun buildSystemMessage(key: String, iv : String) : String {
-+ 
-+         // Build encryptation data of first message send by the system
-+-        var message = encryptMeta("This chat is being encripted with Singularity Encryption!", key)
-++        var message = encryptMeta("This chat is being encripted with Singularity Encryption!", key, iv)
-+ 
-+         return message.toString()
-+ 
-+Index: app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.getMetaOx\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.cryptography.saveKeygenOx\r\nimport com.singularity.ipcaplus.databinding.FragmentChatsBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\n\r\n\r\nclass ChatsFragment : Fragment() {\r\n\r\n    // Variables\r\n    var chats = arrayListOf<Chat>()\r\n    var chatIds = arrayListOf<String>()\r\n\r\n    private var _binding: FragmentChatsBinding? = null\r\n    private var mAdapter: RecyclerView.Adapter<*>? = null\r\n    private var mLayoutManager: LinearLayoutManager? = null\r\n\r\n    private val binding get() = _binding!!\r\n\r\n    val db = Firebase.firestore\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n\r\n        _binding = FragmentChatsBinding.inflate(layoutInflater)\r\n        val root: View = binding.root\r\n\r\n        // Get Group Chats\r\n        db.collection(\"profile\").document(\"${Firebase.auth.currentUser!!.uid}\").collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    chats.clear()\r\n                    chatIds.clear()\r\n                    for (document in it) {\r\n                        val chat = Chat.fromHash(document)\r\n                        if (chat.type == \"chat\") {\r\n                            chats.add(chat)\r\n                            chatIds.add(document.id)\r\n                        }\r\n                    }\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n            }\r\n\r\n        // RecyclerView Chat\r\n        mLayoutManager = LinearLayoutManager(activity, LinearLayoutManager.VERTICAL, false)\r\n        binding.recyclerViewGroups.layoutManager = mLayoutManager\r\n        mAdapter = ChatAdapter()\r\n        binding.recyclerViewGroups.itemAnimator = DefaultItemAnimator()\r\n        binding.recyclerViewGroups.adapter = mAdapter\r\n\r\n        return root\r\n    }\r\n\r\n    /*\r\n        Refresh Activity Content\r\n    */\r\n    override fun onResume() {\r\n        super.onResume()\r\n\r\n        // Get Group Chats\r\n        db.collection(\"profile\").document(\"${Firebase.auth.currentUser!!.uid}\").collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    chats.clear()\r\n                    chatIds.clear()\r\n                    for (document in it) {\r\n                        val chat = Chat.fromHash(document)\r\n                        if (chat.type == \"chat\" || chat.type == \"group\") {\r\n                            chats.add(chat)\r\n                            chatIds.add(document.id)\r\n                        }\r\n                    }\r\n                    println(\"CHAT \" + chats)\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n\r\n\r\n    inner class ChatAdapter : RecyclerView.Adapter<ChatAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_chat, parent, false)\r\n                )\r\n\r\n        }\r\n\r\n        @RequiresApi(Build.VERSION_CODES.M)\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n                holder.v.apply {\r\n\r\n                    // Variables\r\n                    val textViewMessage = findViewById<TextView>(R.id.textViewChatName)\r\n                    val imageViewChatGroup = findViewById<ImageView>(R.id.imageViewChatGroup)\r\n                    val lastMessageTime = findViewById<TextView>(R.id.lastMessageTime)\r\n                    val lastMessageText = findViewById<TextView>(R.id.textViewLastMessage)\r\n\r\n\r\n                    textViewMessage.text = chats[position].name\r\n\r\n                    // sync data recieved form direbase with encrypted shared preferences (key -> 1x)\r\n                    saveKeygenOx(context, chatIds[position], chats[position].ox.toString())\r\n                    // Set Last Chat Message\r\n                    Backend.getLastMessageByChatID(chatIds[position]) {\r\n                        val data = Utilis.getDate(it!!.time.seconds *1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                        lastMessageTime.text = Utilis.getHours(data) + \":\" + Utilis.getMinutes(data)\r\n                        val keygen = getMetaOx(context, chatIds[position])\r\n                        val message_decripted = decryptWithAESmeta(keygen.toString(), it.message)\r\n                        lastMessageText.text = message_decripted\r\n                    }\r\n\r\n                    Utilis.getFile(this.context, \"chats/${chatIds[position]}/icon.png\", \"png\") { bitmap ->\r\n                        imageViewChatGroup.setImageBitmap(bitmap)\r\n                    }\r\n\r\n                }\r\n                holder.v.setOnClickListener {\r\n                    val intent = Intent(activity, ChatActivity::class.java)\r\n                    intent.putExtra(\"chat_id\", chatIds[position])\r\n                    activity?.startActivity(intent)\r\n                }\r\n\r\n        }\r\n\r\n        override fun getItemViewType(position: Int) : Int {\r\n            if (chats[position].type == \"group\") {\r\n                return 1\r\n            } else {\r\n                return 0\r\n            }\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return chats.size\r\n        }\r\n    }\r\n\r\n\r\n}
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt b/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt
-+--- a/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-++++ b/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt	(date 1642079549072)
-+@@ -24,6 +24,7 @@
-+ import com.singularity.ipcaplus.cryptography.saveKeygenOx
-+ import com.singularity.ipcaplus.databinding.FragmentChatsBinding
-+ import com.singularity.ipcaplus.models.Chat
-++import com.singularity.ipcaplus.utils.Backend.getIv
-+ 
-+ 
-+ class ChatsFragment : Fragment() {
-+@@ -138,13 +139,18 @@
-+                     saveKeygenOx(context, chatIds[position], chats[position].ox.toString())
-+                     // Set Last Chat Message
-+                     Backend.getLastMessageByChatID(chatIds[position]) {
-++
-+                         val data = Utilis.getDate(it!!.time.seconds *1000, "yyyy-MM-dd'T'HH:mm:ss.SSS")
-+                         lastMessageTime.text = Utilis.getHours(data) + ":" + Utilis.getMinutes(data)
-++
-+                         val keygen = getMetaOx(context, chatIds[position])
-+-                        val message_decripted = decryptWithAESmeta(keygen.toString(), it.message)
-+-                        lastMessageText.text = message_decripted
-+-                    }
-++                        getIv(chatIds[position]){iv ->
-++                            val message_decripted = decryptWithAESmeta(keygen.toString(), it.message, iv.toString())
-++                            lastMessageText.text = message_decripted
-++                        }
-+ 
-++                    }
-++
-+                     Utilis.getFile(this.context, "chats/${chatIds[position]}/icon.png", "png") { bitmap ->
-+                         imageViewChatGroup.setImageBitmap(bitmap)
-+                     }
-+Index: app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Menu\r\nimport android.view.MenuInflater\r\nimport android.widget.ImageView\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.metaGenrateKey\r\nimport com.singularity.ipcaplus.databinding.ActivityCreateChatBinding\r\nimport com.singularity.ipcaplus.drawer.DrawerActivty\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Message\r\nimport com.singularity.ipcaplus.utils.ActivityImageHelper\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.utils.Utilis.buildSystemMessage\r\nimport com.theartofdev.edmodo.cropper.CropImage\r\nimport com.theartofdev.edmodo.cropper.CropImageView\r\n\r\nclass CreateChatActivity : ActivityImageHelper() {\r\n\r\n    // Variables\r\n    private lateinit var binding: ActivityCreateChatBinding\r\n    var uri = Uri.EMPTY\r\n\r\n    val db = Firebase.firestore\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_create_chat)\r\n\r\n        binding = ActivityCreateChatBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        // Variables\r\n        var chatName : String\r\n\r\n        var type = intent.getStringExtra(\"type\")!!\r\n        var memberIds = intent.getStringArrayListExtra(\"users\")!!\r\n\r\n        // Generate key for chats\r\n        val keygen = metaGenrateKey()\r\n\r\n        binding.imageViewChatPhoto.setOnClickListener {\r\n            checkPermission(android.Manifest.permission.READ_EXTERNAL_STORAGE, STORAGE_PERMISSION_CODE)\r\n        }\r\n\r\n\r\n            // Create Chat\r\n            binding.fabCreateChat.setOnClickListener {\r\n\r\n\r\n                chatName = binding.editTextChatName.text.toString()\r\n\r\n                // Chat data\r\n                val chat = Chat(\r\n                    chatName,\r\n                    type.toString(),\r\n                    keygen\r\n                )\r\n\r\n                // System message data\r\n                val message = Message(\r\n                    \"system\",\r\n                    buildSystemMessage(keygen),\r\n                    Timestamp.now(),\r\n                    \"\"\r\n\r\n                )\r\n\r\n                val user = HashMap<String, Any>()\r\n                val admin = hashMapOf<String?, Any>(\r\n                    \"admin\" to true\r\n                )\r\n\r\n                db.collection(\"chat\")\r\n                    .add(chat.toHash())\r\n                    .addOnSuccessListener { documentReference ->\r\n                        db.collection(\"chat\")\r\n                            .document(documentReference.id)\r\n                            .collection(\"message\")\r\n                            .add(message.toHash())\r\n                        for (member in memberIds) {\r\n                            db.collection(\"profile\")\r\n                                .document(member)\r\n                                .collection(\"chat\")\r\n                                .document(documentReference.id)\r\n                                .set(chat)\r\n                            db.collection(\"chat\")\r\n                                .document(documentReference.id)\r\n                                .collection(\"user\")\r\n                                .document(member)\r\n                                .set(user)\r\n                            if (member == Firebase.auth.currentUser!!.uid) {\r\n                                db.collection(\"chat\")\r\n                                    .document(documentReference.id)\r\n                                    .collection(\"user\")\r\n                                    .document(member)\r\n                                    .update(admin)\r\n                            }\r\n                            if (uri != Uri.EMPTY)\r\n                                Utilis.uploadFile(uri, \"chats/${documentReference.id}/icon.png\")\r\n\r\n                        }\r\n\r\n                    }\r\n                    .addOnFailureListener { e ->\r\n                        Log.w(ContentValues.TAG, \"Error adding document\", e)\r\n                    }\r\n\r\n                val intent = Intent(this, DrawerActivty::class.java)\r\n                startActivity(intent)\r\n\r\n            }\r\n\r\n    }\r\n    /*\r\n       This function happen after picking photo, and make changes in the activity\r\n    */\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n\r\n        if(requestCode == IMAGE_REQUEST_CODE && resultCode == RESULT_OK){\r\n            CropImage.activity(data?.data)\r\n                .setGuidelines(CropImageView.Guidelines.ON)\r\n                .setAspectRatio(1,1)\r\n                .start(this)\r\n        }\r\n\r\n        if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {\r\n            val result = CropImage.getActivityResult(data)\r\n            if (resultCode == RESULT_OK) {\r\n                binding.imageViewChatPhoto.setImageURI(result.uri)\r\n                uri = result.uri\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n       This function create the action bar above the activity\r\n    */\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        val inflater: MenuInflater = menuInflater\r\n        inflater.inflate(R.menu.menu_chat, menu)\r\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\r\n        supportActionBar?.setHomeAsUpIndicator(R.drawable.ic_arrow_back_24)\r\n\r\n\r\n        return true\r\n    }\r\n}
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt b/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt
-+--- a/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-++++ b/app/src/main/java/com/singularity/ipcaplus/chat/CreateChatActivity.kt	(date 1642079549065)
-+@@ -9,11 +9,14 @@
-+ import android.view.Menu
-+ import android.view.MenuInflater
-+ import android.widget.ImageView
-++import android.widget.TextView
-++import androidx.appcompat.app.ActionBar
-+ import com.google.firebase.Timestamp
-+ import com.google.firebase.auth.ktx.auth
-+ import com.google.firebase.firestore.ktx.firestore
-+ import com.google.firebase.ktx.Firebase
-+ import com.singularity.ipcaplus.R
-++import com.singularity.ipcaplus.cryptography.generateRandomIV
-+ import com.singularity.ipcaplus.cryptography.metaGenrateKey
-+ import com.singularity.ipcaplus.databinding.ActivityCreateChatBinding
-+ import com.singularity.ipcaplus.drawer.DrawerActivty
-+@@ -39,6 +42,13 @@
-+ 
-+         binding = ActivityCreateChatBinding.inflate(layoutInflater)
-+         setContentView(binding.root)
-++        supportActionBar?.displayOptions = ActionBar.DISPLAY_SHOW_CUSTOM
-++        supportActionBar?.setCustomView(R.layout.custom_bar_layout)
-++        findViewById<TextView>(R.id.AppBarTittle).text = "Novo Grupo"
-++        // Back button
-++        findViewById<ImageView>(R.id.BackButtonImageView).setOnClickListener{
-++            finish()
-++        }
-+ 
-+         // Variables
-+         var chatName : String
-+@@ -59,18 +69,20 @@
-+ 
-+ 
-+                 chatName = binding.editTextChatName.text.toString()
-++                val ivGenerated = generateRandomIV()
-+ 
-+                 // Chat data
-+                 val chat = Chat(
-+                     chatName,
-+                     type.toString(),
-+-                    keygen
-++                    keygen,
-++                    ivGenerated
-+                 )
-+ 
-+                 // System message data
-+                 val message = Message(
-+                     "system",
-+-                    buildSystemMessage(keygen),
-++                    buildSystemMessage(keygen, ivGenerated),
-+                     Timestamp.now(),
-+                     ""
-+ 
-+@@ -144,17 +156,4 @@
-+             }
-+         }
-+     }
-+-
-+-    /*
-+-       This function create the action bar above the activity
-+-    */
-+-    override fun onCreateOptionsMenu(menu: Menu): Boolean {
-+-        val inflater: MenuInflater = menuInflater
-+-        inflater.inflate(R.menu.menu_chat, menu)
-+-        supportActionBar?.setDisplayHomeAsUpEnabled(true)
-+-        supportActionBar?.setHomeAsUpIndicator(R.drawable.ic_arrow_back_24)
-+-
-+-
-+-        return true
-+-    }
-+ }
-+\ No newline at end of file
-+Index: app/src/main/java/com/singularity/ipcaplus/models/Chat.kt
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package com.singularity.ipcaplus.models\r\n\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot\r\n\r\nclass Chat {\r\n    var name : String = \"\"\r\n    var type : String = \"\"\r\n    var ox : String? = \"\"\r\n    var id : String? =  null\r\n\r\n    constructor(name : String, type : String, ox : String) {\r\n        this.name = name\r\n        this.type = type\r\n        this.ox = ox\r\n    }\r\n\r\n    fun toHash() :HashMap<String, Any> {\r\n        var hashMap = HashMap<String, Any>()\r\n        hashMap.put(\"name\", name)\r\n        hashMap.put(\"type\", type)\r\n        hashMap.put(\"ox\", ox!!)\r\n        return hashMap\r\n    }\r\n\r\n    companion object {\r\n        fun fromHash(hashMap: QueryDocumentSnapshot) : Chat {\r\n            val chat = Chat(\r\n                hashMap[\"name\"] as String,\r\n                hashMap[\"type\"] as String,\r\n                hashMap[\"ox\"] as String\r\n            )\r\n            return chat\r\n        }\r\n    }\r\n}
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+diff --git a/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt b/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt
-+--- a/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-++++ b/app/src/main/java/com/singularity/ipcaplus/models/Chat.kt	(date 1642077007855)
-+@@ -7,11 +7,13 @@
-+     var type : String = ""
-+     var ox : String? = ""
-+     var id : String? =  null
-++    var iv : String? = ""
-+ 
-+-    constructor(name : String, type : String, ox : String) {
-++    constructor(name : String, type : String, ox : String, iv : String) {
-+         this.name = name
-+         this.type = type
-+         this.ox = ox
-++        this.iv = iv
-+     }
-+ 
-+     fun toHash() :HashMap<String, Any> {
-+@@ -19,6 +21,7 @@
-+         hashMap.put("name", name)
-+         hashMap.put("type", type)
-+         hashMap.put("ox", ox!!)
-++        hashMap.put("iv", iv!!)
-+         return hashMap
-+     }
-+ 
-+@@ -27,7 +30,9 @@
-+             val chat = Chat(
-+                 hashMap["name"] as String,
-+                 hashMap["type"] as String,
-+-                hashMap["ox"] as String
-++                hashMap["ox"] as String,
-++                hashMap["iv"] as String
-++
-+             )
-+             return chat
-+         }
-+Index: app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package com.singularity.ipcaplus\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.chat.CreateChatActivity\r\nimport com.singularity.ipcaplus.databinding.ActivityAddPeopleBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\nimport com.singularity.ipcaplus.models.Profile\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.utils.Utilis\r\n\r\nclass AddPeopleActivity: AppCompatActivity() {\r\n\r\n    var users = arrayListOf<Profile>()\r\n    var selectedUsers = arrayListOf<Profile>()\r\n\r\n    private lateinit var binding: ActivityAddPeopleBinding\r\n\r\n    private var userAdapter: RecyclerView.Adapter<*>? = null\r\n    private var userSelectedAdapter: RecyclerView.Adapter<*>? = null\r\n\r\n    private var userLayoutManager: LinearLayoutManager? = null\r\n    private var userSelectedLayoutManager: LinearLayoutManager? = null\r\n\r\n\r\n    val db = Firebase.firestore\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_add_people)\r\n        binding = ActivityAddPeopleBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.backBtn.setOnClickListener {\r\n            finish()\r\n        }\r\n\r\n        // Add people with a chat already created\r\n        if (intent.hasExtra(\"chat_id\")) {\r\n            val chat_id = intent.getStringExtra(\"chat_id\")\r\n            Backend.getAllUsersExceptChatUsers(chat_id!!) {\r\n                users.clear()\r\n                users.addAll(it)\r\n                userAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n            // Continue button\r\n            binding.fabCreateChat.setOnClickListener {\r\n\r\n                Backend.db.collection(\"chat\")\r\n                    .document(chat_id)\r\n                    .get()\r\n                    .addOnSuccessListener { document ->\r\n\r\n                        val chat = Chat(\r\n                            document[\"name\"] as String,\r\n                            document[\"type\"] as String,\r\n                            document[\"ox\"] as String\r\n                        )\r\n\r\n                        val selectedUsersIds = arrayListOf<String>()\r\n                        for(user in selectedUsers) {\r\n                            selectedUsersIds.add(user.id!!)\r\n                        }\r\n\r\n                        Backend.addUsersIntoChat(chat, chat_id, selectedUsersIds) {\r\n                            finish()\r\n                        }\r\n\r\n                    }\r\n\r\n            }\r\n        }\r\n        // Add people and create chat for the first time\r\n        else {\r\n            Backend.getAllUsersExceptCurrent {\r\n                users.clear()\r\n                users.addAll(it)\r\n                userAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n            // Continue button\r\n            binding.fabCreateChat.setOnClickListener {\r\n\r\n                val selectedUsersIds = arrayListOf<String>()\r\n                for(user in selectedUsers) {\r\n                    selectedUsersIds.add(user.id!!)\r\n                }\r\n\r\n                // Add current user to users list\r\n                Backend.getUserProfile(Firebase.auth.currentUser!!.uid) {\r\n                    selectedUsersIds.add(it.id!!)\r\n\r\n                    // Send users list to chat creation\r\n                    val intent = Intent(this, CreateChatActivity::class.java)\r\n                    intent.putExtra(\"users\", selectedUsersIds)\r\n                    intent.putExtra(\"type\", \"group\")\r\n                    startActivity(intent)\r\n                }\r\n            }\r\n        }\r\n\r\n        // Recycler View All Users\r\n        userLayoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)\r\n        binding.recyclerViewUsers.layoutManager = userLayoutManager\r\n        userAdapter = AllUsersAdapter()\r\n        binding.recyclerViewUsers.itemAnimator = DefaultItemAnimator()\r\n        binding.recyclerViewUsers.adapter = userAdapter\r\n\r\n        // Recycler View Selected Users\r\n        userSelectedLayoutManager = LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false)\r\n        binding.recyclerViewUsersSelected.layoutManager = userSelectedLayoutManager\r\n        userSelectedAdapter = SelectedUsersAdapter()\r\n        binding.recyclerViewUsersSelected.itemAnimator = DefaultItemAnimator()\r\n        binding.recyclerViewUsersSelected.adapter = userSelectedAdapter\r\n\r\n    }\r\n\r\n\r\n    inner class AllUsersAdapter : RecyclerView.Adapter<AllUsersAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            return ViewHolder(\r\n                LayoutInflater.from(parent.context).inflate(R.layout.row_user, parent, false)\r\n            )\r\n        }\r\n\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n            holder.v.apply {\r\n                // Variables\r\n                val username = findViewById<TextView>(R.id.textViewProfileName)\r\n                val imageViewUser = findViewById<ImageView>(R.id.imageViewProfile)\r\n\r\n                // Set data\r\n                Utilis.getFile(context, \"profilePictures/${users[position].id}.png\", \"png\") { bitmap ->\r\n                    imageViewUser.setImageBitmap(bitmap)\r\n                }\r\n\r\n                username.text = Utilis.getFirstAndLastName(users[position].name)\r\n\r\n            }\r\n            holder.v.setOnClickListener {\r\n\r\n                selectedUsers.add(users[position])\r\n                users.remove(users[position])\r\n                userSelectedAdapter?.notifyDataSetChanged()\r\n                userAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return users.size\r\n        }\r\n    }\r\n\r\n    inner class SelectedUsersAdapter : RecyclerView.Adapter<SelectedUsersAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            return ViewHolder(\r\n                LayoutInflater.from(parent.context).inflate(R.layout.row_add_pp, parent, false)\r\n            )\r\n        }\r\n\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n            holder.v.apply {\r\n                // Variables\r\n                val username = findViewById<TextView>(R.id.textViewProfileNameAdd)\r\n                val imageViewUser = findViewById<ImageView>(R.id.imageViewProfile)\r\n\r\n                // Set data\r\n                Utilis.getFile(context,\"profilePictures/${selectedUsers[position].id}.png\", \"png\") { bitmap ->\r\n                    imageViewUser.setImageBitmap(bitmap)\r\n                }\r\n\r\n                username.text = Utilis.getFirstAndLastName(selectedUsers[position].name)\r\n\r\n            }\r\n            holder.v.setOnClickListener {\r\n\r\n                users.add(selectedUsers[position])\r\n                selectedUsers.remove(selectedUsers[position])\r\n                userAdapter?.notifyDataSetChanged()\r\n                userSelectedAdapter?.notifyDataSetChanged()\r\n            }\r\n\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return selectedUsers.size\r\n        }\r\n    }\r\n}
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+diff --git a/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt b/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt
-+--- a/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-++++ b/app/src/main/java/com/singularity/ipcaplus/AddPeopleActivity.kt	(date 1642078572739)
-+@@ -67,7 +67,8 @@
-+                         val chat = Chat(
-+                             document["name"] as String,
-+                             document["type"] as String,
-+-                            document["ox"] as String
-++                            document["ox"] as String,
-++                            document["iv"] as String
-+                         )
-+ 
-+                         val selectedUsersIds = arrayListOf<String>()
-+Index: app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package com.singularity.ipcaplus.cryptography\r\n\r\nimport android.content.Context\r\nimport android.os.Build\r\nimport android.util.Log\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.security.crypto.EncryptedSharedPreferences\r\nimport androidx.security.crypto.MasterKeys\r\nimport com.google.gson.Gson\r\nimport com.google.gson.GsonBuilder\r\nimport org.bouncycastle.jce.provider.BouncyCastleProvider\r\nimport org.bouncycastle.util.encoders.Base64\r\nimport java.io.UnsupportedEncodingException\r\nimport java.security.InvalidKeyException\r\nimport java.security.NoSuchAlgorithmException\r\nimport java.security.SecureRandom\r\nimport java.security.Security\r\nimport java.util.Objects.hash\r\nimport javax.crypto.*\r\nimport javax.crypto.spec.IvParameterSpec\r\nimport javax.crypto.spec.SecretKeySpec\r\n\r\n\r\n\r\n\r\n\r\nfun encryptMeta(strToEncrypt: String, secret_key: String): String? {\r\n    Security.addProvider(BouncyCastleProvider())\r\n    hash(strToEncrypt)\r\n    var keyBytes: ByteArray\r\n    //val initVector = generateRandomIV()\r\n    val initVector = \"7c5afb00aaecb1a1\"\r\n    val iv = IvParameterSpec(initVector.toByteArray(charset(\"UTF-8\")))\r\n    println(\"AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE $initVector\")\r\n\r\n\r\n    try {\r\n        keyBytes = secret_key.toByteArray(charset(\"UTF8\"))\r\n        val skey = SecretKeySpec(keyBytes, \"AES\")\r\n        val input = strToEncrypt.toByteArray(charset(\"UTF8\"))\r\n\r\n        synchronized(Cipher::class.java) {\r\n            val cipher = Cipher.getInstance(\"AES/CBC/PKCS7Padding\")\r\n            cipher.init(Cipher.ENCRYPT_MODE, skey, iv)\r\n\r\n            val cipherText = ByteArray(cipher.getOutputSize(input.size))\r\n            var ctLength = cipher.update(\r\n                input, 0, input.size,\r\n                cipherText, 0\r\n            )\r\n            ctLength += cipher.doFinal(cipherText, ctLength)\r\n            return String(\r\n                Base64.encode(cipherText)\r\n            )\r\n        }\r\n    } catch (uee: UnsupportedEncodingException) {\r\n        uee.printStackTrace()\r\n    } catch (ibse: IllegalBlockSizeException) {\r\n        ibse.printStackTrace()\r\n    } catch (bpe: BadPaddingException) {\r\n        bpe.printStackTrace()\r\n    } catch (ike: InvalidKeyException) {\r\n        ike.printStackTrace()\r\n    } catch (nspe: NoSuchPaddingException) {\r\n        nspe.printStackTrace()\r\n    } catch (nsae: NoSuchAlgorithmException) {\r\n        nsae.printStackTrace()\r\n    } catch (e: ShortBufferException) {\r\n        e.printStackTrace()\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nfun decryptWithAESmeta(key: String, strToDecrypt: String?): String? {\r\n    Security.addProvider(BouncyCastleProvider())\r\n    var keyBytes: ByteArray\r\n    val initVector = \"7c5afb00aaecb1a1\"\r\n\r\n    try {\r\n        val iv = IvParameterSpec(initVector.toByteArray(charset(\"UTF-8\")))\r\n        keyBytes = key.toByteArray(charset(\"UTF8\"))\r\n        val skey = SecretKeySpec(keyBytes, \"AES\")\r\n        val input = org.bouncycastle.util.encoders.Base64\r\n            .decode(strToDecrypt?.trim { it <= ' ' }?.toByteArray(charset(\"UTF8\")))\r\n\r\n        synchronized(Cipher::class.java) {\r\n            val cipher = Cipher.getInstance(\"AES/CBC/PKCS7Padding\")\r\n            cipher.init(Cipher.DECRYPT_MODE, skey, iv)\r\n\r\n            val plainText = ByteArray(cipher.getOutputSize(input.size))\r\n            var ptLength = cipher.update(input, 0, input.size, plainText, 0)\r\n            ptLength += cipher.doFinal(plainText, ptLength)\r\n            val decryptedString = String(plainText)\r\n            return decryptedString.trim { it <= ' ' }\r\n        }\r\n    } catch (uee: UnsupportedEncodingException) {\r\n        uee.printStackTrace()\r\n    } catch (ibse: IllegalBlockSizeException) {\r\n        ibse.printStackTrace()\r\n    } catch (bpe: BadPaddingException) {\r\n        bpe.printStackTrace()\r\n    } catch (ike: InvalidKeyException) {\r\n        ike.printStackTrace()\r\n    } catch (nspe: NoSuchPaddingException) {\r\n        nspe.printStackTrace()\r\n    } catch (nsae: NoSuchAlgorithmException) {\r\n        nsae.printStackTrace()\r\n    } catch (e: ShortBufferException) {\r\n        e.printStackTrace()\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nfun metaGenrateKey(): String {\r\n    //val secretKey: String = \"662ede816988e58fb6d057d9d85605e0\"\r\n    val keygen = (\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n            + \"0123456789\"\r\n            + \"abcdefghijklmnopqrstuvxyz\")\r\n\r\n    val n = 32\r\n\r\n    // create StringBuffer size of keygen\r\n    val secretKey = StringBuilder(n)\r\n    for (i in 0 until n) {\r\n\r\n        // generate a random number between\r\n        // 0 to keygen variable length\r\n        val index = (keygen.length\r\n                * Math.random()).toInt()\r\n\r\n        // add Character one by one in end of secretKey\r\n        secretKey.append(keygen[index])\r\n\r\n    }\r\n    println(secretKey)\r\n    return secretKey.toString()\r\n}\r\n\r\nfun metaBlock(message: String){\r\n    //val secretKey: String = \"662ede816988e58fb6d057d9d85605e0\"\r\n    val keygen = metaGenrateKey()\r\n\r\n    var meta = encryptMeta(message, keygen)\r\n    println(meta)\r\n\r\n    val message_decripted = decryptWithAESmeta(keygen, meta)\r\n    println(message_decripted)\r\n}\r\n\r\n@RequiresApi(Build.VERSION_CODES.M)\r\nfun saveKeygenOx(context : Context, chatUid : String, keygen: String){\r\n\r\n    val keyGenParameterSpec = MasterKeys.AES256_GCM_SPEC\r\n    val masterKeyAlias = MasterKeys.getOrCreate(keyGenParameterSpec)\r\n    val sharedPreferences = EncryptedSharedPreferences.create(\r\n        \"meta_shared_preferences\",\r\n        masterKeyAlias,\r\n        context,\r\n        EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,\r\n        EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM\r\n    )\r\n\r\n    // storing a value\r\n    sharedPreferences\r\n        .edit()\r\n        .putString(chatUid, keygen)\r\n        .apply()\r\n}\r\n\r\n@RequiresApi(Build.VERSION_CODES.M)\r\nfun getMetaOx(context: Context, chatUid: String): String? {\r\n\r\n    val keyGenParameterSpec = MasterKeys.AES256_GCM_SPEC\r\n    val masterKeyAlias = MasterKeys.getOrCreate(keyGenParameterSpec)\r\n    val sharedPreferences = EncryptedSharedPreferences.create(\r\n        \"meta_shared_preferences\",\r\n        masterKeyAlias,\r\n        context,\r\n        EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,\r\n        EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM\r\n    )\r\n\r\n    // reading a value\r\n    println(sharedPreferences.getString(chatUid, \"\"))\r\n    return sharedPreferences.getString(chatUid, \"\") // -> \"some_data\"\r\n}\r\n\r\nfun generateRandomIV(): String {\r\n    val ranGen = SecureRandom()\r\n    val aesKey = ByteArray(16)\r\n    ranGen.nextBytes(aesKey)\r\n    val result = StringBuffer()\r\n    for (b in aesKey) {\r\n        result.append(String.format(\"%02x\", b))\r\n    }\r\n    return if (16 > result.toString().length) {\r\n        result.toString()\r\n    } else {\r\n        result.toString().substring(0, 16)\r\n    }\r\n}
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+diff --git a/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt b/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt
-+--- a/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-++++ b/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt	(date 1642078199573)
-+@@ -24,12 +24,12 @@
-+ 
-+ 
-+ 
-+-fun encryptMeta(strToEncrypt: String, secret_key: String): String? {
-++fun encryptMeta(strToEncrypt: String, secret_key: String, initVector : String): String? {
-+     Security.addProvider(BouncyCastleProvider())
-+     hash(strToEncrypt)
-+     var keyBytes: ByteArray
-+     //val initVector = generateRandomIV()
-+-    val initVector = "7c5afb00aaecb1a1"
-++    //val initVector = "7c5afb00aaecb1a1"
-+     val iv = IvParameterSpec(initVector.toByteArray(charset("UTF-8")))
-+     println("AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE $initVector")
-+ 
-+@@ -72,10 +72,10 @@
-+     return null
-+ }
-+ 
-+-fun decryptWithAESmeta(key: String, strToDecrypt: String?): String? {
-++fun decryptWithAESmeta(key: String, strToDecrypt: String?, initVector : String): String? {
-+     Security.addProvider(BouncyCastleProvider())
-+     var keyBytes: ByteArray
-+-    val initVector = "7c5afb00aaecb1a1"
-++    //val initVector = "7c5afb00aaecb1a1"
-+ 
-+     try {
-+         val iv = IvParameterSpec(initVector.toByteArray(charset("UTF-8")))
-+@@ -137,7 +137,7 @@
-+     println(secretKey)
-+     return secretKey.toString()
-+ }
-+-
-++/*
-+ fun metaBlock(message: String){
-+     //val secretKey: String = "662ede816988e58fb6d057d9d85605e0"
-+     val keygen = metaGenrateKey()
-+@@ -147,7 +147,7 @@
-+ 
-+     val message_decripted = decryptWithAESmeta(keygen, meta)
-+     println(message_decripted)
-+-}
-++}*/
-+ 
-+ @RequiresApi(Build.VERSION_CODES.M)
-+ fun saveKeygenOx(context : Context, chatUid : String, keygen: String){
-+Index: app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package com.singularity.ipcaplus.utils\r\n\r\nimport android.net.Uri\r\nimport com.google.firebase.Timestamp\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.Query\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.firebase.storage.FirebaseStorage\r\nimport com.google.firebase.storage.ktx.storage\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.models.*\r\nimport org.json.JSONArray\r\nimport java.io.File\r\n\r\nobject Backend {\r\n\r\n    val db = Firebase.firestore\r\n\r\n    /*\r\n       ------------------------------------------------ Events ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all events during the month in the firebase to an list\r\n       @month = selected month\r\n       @callBack = return the list\r\n    */\r\n    fun getAllMonthEvents(month: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        // Get all user chat ids\r\n        val chatIds = arrayListOf<String>()\r\n        getAllUserChatIds {\r\n            chatIds.addAll(it)\r\n\r\n            // Search in all chats\r\n            for (id in chatIds) {\r\n                db.collection(\"chat\")\r\n                    .document(id)\r\n                    .collection(\"event\")\r\n                    .addSnapshotListener { documents, _ ->\r\n\r\n                        documents?.let {\r\n\r\n                            for (document in documents) {\r\n                                val event = EventCalendar.fromHash(document)\r\n                                event.id = document.id\r\n\r\n                                val date = Utilis.getDate(event.datetime.seconds * 1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                                if (month == Utilis.getMonthById(Utilis.getMonth(date).toInt())) {\r\n                                    events.add(event)\r\n                                }\r\n                            }\r\n                            callBack(events)\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private fun getAllUserChatIds(callBack: (List<String>)->Unit) {\r\n\r\n        val chatIds = arrayListOf<String>()\r\n\r\n        // Get Group Chats Ids\r\n        db.collection(\"profile\").document(Firebase.auth.currentUser!!.uid).collection(\"chat\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in it) {\r\n                        chatIds.add(document.id)\r\n                    }\r\n\r\n                    callBack(chatIds)\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the month in the firebase to an list\r\n       @month = selected month\r\n       @callBack = return the list\r\n    */\r\n    fun getAllChatMonthEvents(month: String, chat_id: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        db.collection(\"chat\")\r\n            .document(chat_id)\r\n            .collection(\"event\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val event = EventCalendar.fromHash(document)\r\n                        event.id = document.id\r\n\r\n                        val date = Utilis.getDate(\r\n                            event.datetime.seconds * 1000,\r\n                            \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                        )\r\n                        if (month == Utilis.getMonthById(Utilis.getMonth(date).toInt())) {\r\n                            events.add(event)\r\n                        }\r\n                    }\r\n\r\n                    callBack(events)\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the day in the firebase to an list\r\n       @day = selected day\r\n       @callBack = return the list\r\n    */\r\n    fun getAllChatMonthDayEvents(month: String, day: Int, chat_id: String, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        db.collection(\"chat\")\r\n            .document(chat_id)\r\n            .collection(\"event\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val event = EventCalendar.fromHash(document)\r\n                        event.id = document.id\r\n\r\n                        val date = Utilis.getDate(\r\n                            event.datetime.seconds * 1000,\r\n                            \"yyyy-MM-dd'T'HH:mm:ss.SSS\"\r\n                        )\r\n                        if (day == Utilis.getDay(date).toInt() && month == Utilis.getMonthById(\r\n                                Utilis.getMonth(date).toInt()\r\n                            )\r\n                        ) {\r\n                            events.add(event)\r\n                        }\r\n                    }\r\n\r\n                    callBack(events)\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns all events during the day in the firebase to an list\r\n       @day = selected day\r\n       @callBack = return the list\r\n    */\r\n    fun getAllMonthDayEvents(month: String, day: Int, callBack: (List<EventCalendar>)->Unit) {\r\n\r\n        val events = arrayListOf<EventCalendar>()\r\n\r\n        // Get all user chat ids\r\n        val chatIds = arrayListOf<String>()\r\n        getAllUserChatIds {\r\n            chatIds.addAll(it)\r\n\r\n            // Search in all chats\r\n            for (id in chatIds) {\r\n                db.collection(\"chat\")\r\n                    .document(id)\r\n                    .collection(\"event\")\r\n                    .addSnapshotListener { documents, _ ->\r\n\r\n                        documents?.let {\r\n\r\n                            for (document in documents) {\r\n                                val event = EventCalendar.fromHash(document)\r\n                                event.id = document.id\r\n\r\n                                val date = Utilis.getDate(event.datetime.seconds * 1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                                if (day == Utilis.getDay(date).toInt() && month == Utilis.getMonthById(\r\n                                        Utilis.getMonth(date).toInt())\r\n                                ) {\r\n                                    events.add(event)\r\n                                }\r\n                            }\r\n\r\n                            callBack(events)\r\n                        }\r\n\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    fun deleteEvent(chatID: String, eventID: String) {\r\n\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"event\")\r\n            .document(eventID)\r\n            .delete()\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Schedule ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all events in the firebase to an list\r\n       @callBack = return the list\r\n    */\r\n    fun getDayCourseSubjects(day: String, courseId: String, callBack: (List<Subject>)->Unit) {\r\n\r\n        val subjects = arrayListOf<Subject>()\r\n        val subjectsWithBreaks = arrayListOf<Subject>()\r\n\r\n        db.collection(\"course\").document(courseId).collection(\"subject\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n\r\n                    // Add every subject to the list\r\n                    for (document in documents) {\r\n                        val subject = Subject.fromHash(document)\r\n                        if (day == subject.day) {\r\n                            subjects.add(subject)\r\n                        }\r\n                    }\r\n\r\n                    // Order the subjects by time\r\n                    for (i in 0 until subjects.size) {\r\n                        for (j in 0 until subjects.size - 1) {\r\n\r\n                            if (Utilis.convertHoursStringToInt(subjects[j].start_time) > Utilis.convertHoursStringToInt(\r\n                                    subjects[j + 1].start_time\r\n                                )\r\n                            ) {\r\n                                val temp = subjects[j]\r\n                                subjects[j] = subjects[j + 1]\r\n                                subjects[j + 1] = temp\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Add Break Times Between Classes\r\n                    for (i in 0 until subjects.size) {\r\n                        if (i % 2 == 0) {\r\n                            subjectsWithBreaks.add(subjects[i])\r\n                        }\r\n                        else {\r\n                            val diff = Utilis.convertHoursStringToInt(subjects[i].start_time) - Utilis.convertHoursStringToInt(\r\n                                subjects[i - 1].end_time\r\n                            )\r\n                            subjectsWithBreaks.add(Subject(\"breaktime\", diff.toString()))\r\n                            subjectsWithBreaks.add(subjects[i])\r\n                        }\r\n                    }\r\n\r\n                    callBack(subjectsWithBreaks)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns the user course by callback\r\n       @id = user uid\r\n    */\r\n    fun getUserCourses(uid: String, callBack:(String)->Unit) {\r\n\r\n        db.collection(\"profile\")\r\n            .document(uid)\r\n            .collection(\"course\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    var courseId = \"\"\r\n                    for (document in documents)\r\n                        courseId = document.id\r\n\r\n                    callBack(courseId)\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns the user course by callback\r\n       @id = user uid\r\n    */\r\n    fun getUserCoursesIds(uid: String, courseTag: String, callBack:(List<String>)->Unit) {\r\n\r\n        val courseIds = arrayListOf<String>()\r\n\r\n        db.collection(\"course\")\r\n            .whereEqualTo(\"tag\", courseTag)\r\n            .get()\r\n            .addOnSuccessListener { documents ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents)\r\n                        courseIds.add(document.id)\r\n\r\n                    callBack(courseIds)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    fun setUserCourses(userID: String, courseID: String) {\r\n\r\n        val profile = HashMap<String, Any>()\r\n        db.collection(\"profile\")\r\n            .document(userID)\r\n            .collection(\"course\")\r\n            .document(courseID)\r\n            .set(profile)\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Contacts ------------------------------------------------\r\n    */\r\n\r\n    /*\r\n       This function returns all contacts in the firebase to an list\r\n       @callBack = return the list\r\n    */\r\n    fun getAllContacts(callBack: (List<Contact>)->Unit) {\r\n\r\n        val contacts = arrayListOf<Contact>()\r\n\r\n        db.collection(\"contacts\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val contact = Contact.fromHash(document)\r\n                        contacts.add(contact)\r\n                    }\r\n\r\n                    callBack(contacts)\r\n                }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Profile ------------------------------------------------\r\n    */\r\n\r\n    fun getUserProfile(userId: String, callBack:(Profile)->Unit) {\r\n\r\n        var profile = Profile()\r\n\r\n        db.collection(\"profile\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n\r\n                        if (document.id == userId) {\r\n                            profile = Profile.fromHash(document)\r\n                            profile.id = document.id\r\n                        }\r\n                    }\r\n\r\n                    callBack(profile)\r\n                }\r\n            }\r\n    }\r\n\r\n    fun getAllUsers (callBack:(List<Profile>)->Unit) {\r\n        val profiles = arrayListOf<Profile>()\r\n\r\n        db.collection(\"profile\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val profile = Profile.fromHash(document)\r\n                        profile.id = document.id\r\n                        profiles.add(profile)\r\n                    }\r\n                }\r\n\r\n                callBack(profiles)\r\n            }\r\n    }\r\n\r\n    fun getAllUsersExceptCurrent (callBack:(List<Profile>)->Unit) {\r\n        val profiles = arrayListOf<Profile>()\r\n\r\n        db.collection(\"profile\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n\r\n                    for (document in documents) {\r\n                        val profile = Profile.fromHash(document)\r\n\r\n                        if (Firebase.auth.currentUser!!.uid != document.id) {\r\n                            profile.id = document.id\r\n                            profiles.add(profile)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                callBack(profiles)\r\n            }\r\n    }\r\n\r\n\r\n    fun getAllUsersExceptChatUsers (chatID: String, callBack:(List<Profile>)->Unit) {\r\n\r\n        val currentUserIds = arrayListOf<String>()\r\n        val profiles = arrayListOf<Profile>()\r\n\r\n        // Get current chat users ids\r\n        getChatUsers(chatID) {\r\n            for (user in it)\r\n                currentUserIds.add(user.id!!)\r\n\r\n            db.collection(\"profile\")\r\n                .addSnapshotListener { documents, _ ->\r\n                    documents?.let {\r\n\r\n                        for (document in documents) {\r\n                            val profile = Profile.fromHash(document)\r\n\r\n                            // Verify if user is not in the chat\r\n                            var found = false\r\n                            for (id in currentUserIds) {\r\n                                if (id == document.id)\r\n                                    found = true\r\n                            }\r\n\r\n                            if (!found) {\r\n                                profile.id = document.id\r\n                                profiles.add(profile)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    callBack(profiles)\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    fun changeUserChatAdminStatus(chatId: String, userId: String, status: Boolean) {\r\n\r\n        db.collection(\"chat\")\r\n            .document(chatId)\r\n            .collection(\"user\")\r\n            .document(userId)\r\n            .update(\"admin\", status)\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Chats ------------------------------------------------\r\n    */\r\n\r\n\r\n    fun getChatUsers(chatID: String, callBack: (List<Profile>)->Unit) {\r\n\r\n        val userIds = arrayListOf<String>()\r\n        val adminIds = arrayListOf<String>()\r\n        val users = arrayListOf<Profile>()\r\n\r\n        // Get the ids of the users in the chat\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        userIds.add(document.id)\r\n\r\n                        if (document[\"admin\"] != true)\r\n                            adminIds.add(document.id)\r\n\r\n                    }\r\n                }\r\n\r\n                // Find the data for each id\r\n                db.collection(\"profile\")\r\n                    .addSnapshotListener { documents2, _ ->\r\n                        documents2?.let {\r\n                            for (document in documents2) {\r\n                                for (id in userIds) {\r\n                                    if (document.id == id) {\r\n                                        val profile = Profile.fromHash(document)\r\n                                        profile.id = document.id\r\n                                        users.add(profile)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        // Get Admins\r\n                        for (u in users) {\r\n                            for (a in adminIds) {\r\n                                if (u.id == a) {\r\n                                    u.isAdmin = true\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        callBack(users)\r\n                    }\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    fun getChatUsersUids(chatID: String, callBack: (List<String>) -> Unit){\r\n        var userIds = arrayListOf<String>()\r\n\r\n        // Get the ids of the users in the chat\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        userIds.add(document.id)\r\n                    }\r\n                }\r\n\r\n                callBack(userIds)\r\n            }\r\n    }\r\n\r\n\r\n    fun changeChatName(chatID: String, newName: String) {\r\n\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .update(\"name\", newName)\r\n    }\r\n\r\n\r\n    /*\r\n       This function returns last chat message by chat id\r\n       @callBack = return the message\r\n    */\r\n    fun getLastMessageByChatID(chatID: String, callBack: (Message?)->Unit) {\r\n\r\n        var message : Message? = null\r\n\r\n        db.collection(\"chat\").document(\"${chatID}\").collection(\"message\")\r\n            .orderBy(\"time\", Query.Direction.DESCENDING).limit(1)\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        message = Message.fromHash(document)\r\n                        }\r\n                    }\r\n\r\n                    callBack(message)\r\n                }\r\n\r\n    }\r\n\r\n\r\n    fun getChatAdminIds(chatID: String, callBack: (List<String>)->Unit) {\r\n\r\n        val adminIds = arrayListOf<String>()\r\n\r\n        // Get Admins\r\n        db.collection(\"chat\")\r\n            .document(chatID)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n\r\n                        if (document[\"admin\"] == true)\r\n                            adminIds.add(document.id)\r\n\r\n                    }\r\n\r\n                    callBack(adminIds)\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n\r\n    fun removeUserFromChat(chatId: String, userId: String) {\r\n\r\n        // remover user from chat user list\r\n        db.collection(\"chat\")\r\n            .document(chatId)\r\n            .collection(\"user\")\r\n            .document(userId)\r\n            .delete()\r\n\r\n        // remove chat from user chat list\r\n        db.collection(\"profile\")\r\n            .document(userId)\r\n            .collection(\"chat\")\r\n            .document(chatId)\r\n            .delete()\r\n    }\r\n\r\n\r\n    fun addUsersIntoChat(chat: Chat, chatId: String, usersId: ArrayList<String>, callBack: ()->Unit) {\r\n\r\n        for (userId in usersId) {\r\n\r\n            // Create chat in user profile\r\n            db.collection(\"profile\")\r\n                .document(userId)\r\n                .collection(\"chat\")\r\n                .document(chatId)\r\n                .set(chat)\r\n                .addOnCompleteListener {\r\n\r\n                    val profile = HashMap<String, Any>()\r\n                    db.collection(\"chat\")\r\n                        .document(chatId)\r\n                        .collection(\"user\")\r\n                        .document(userId)\r\n                        .set(profile)\r\n                        .addOnCompleteListener {\r\n                            callBack()\r\n                        }\r\n\r\n                }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    fun deleteChat(chatId: String, callback: ()->Unit) {\r\n\r\n        val userIds = arrayListOf<String>()\r\n\r\n        // get all chat members ids\r\n        db.collection(\"chat\")\r\n            .document(chatId)\r\n            .collection(\"user\")\r\n            .addSnapshotListener { documents, _ ->\r\n\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                        userIds.add(document.id)\r\n                    }\r\n\r\n                    // <------------------------------------------------------- Missing here\r\n\r\n                    // delete chat\r\n                    /*\r\n                    db.collection(\"chat\")\r\n                        .document(chatId)\r\n                        .delete()\r\n*/\r\n\r\n                    // delete chat references in members\r\n                    for (i in 0 until userIds.size) {\r\n\r\n                        db.collection(\"profile\")\r\n                            .document(userIds[i])\r\n                            .collection(\"chat\")\r\n                            .document(chatId)\r\n                            .delete()\r\n                            .addOnCompleteListener {\r\n                                // If its the last callback refresh the activity\r\n                                if (i == userIds.size - 1)\r\n                                    callback()\r\n                            }\r\n\r\n                    }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    fun getAllDirectChatIdsByUser(userId: String, callBack: (List<String?>) -> Unit){\r\n\r\n        var chatIds = arrayListOf<String?>()\r\n\r\n        // Get all profile chat ids\r\n        db.collection(\"profile\")\r\n            .document(userId)\r\n            .collection(\"chat\")\r\n            .whereEqualTo(\"type\", \"chat\")\r\n            .get()\r\n            .addOnSuccessListener { documents ->\r\n                for (document in documents) {\r\n                    chatIds.add(document.id)\r\n                }\r\n\r\n                println(\"DEntroooo\" + chatIds)\r\n                callBack(chatIds)\r\n            }\r\n\r\n    }\r\n\r\n    fun getDirectChatById(chatIds: List<String?>, userId: String, callBack: (String?)-> Unit) {\r\n\r\n        var chatId : String? = null\r\n\r\n        for (id in chatIds) {\r\n            db.collection(\"chat\")\r\n                .document(id!!)\r\n                .collection(\"user\")\r\n                .get()\r\n                .addOnSuccessListener { documents ->\r\n                    for(document in documents) {\r\n                        if(document.id == userId){\r\n                            chatId = id\r\n                        }\r\n                    }\r\n\r\n                    println(\"ACABOU2---------------------------------------\")\r\n                    callBack(chatId)\r\n                }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Register Manipulation ------------------------------------------------\r\n    */\r\n\r\n    fun getIpcaData(email: String, callBack: (Profile?)->Unit) {\r\n\r\n        var profile : Profile? = null\r\n\r\n        db.collection(\"ipca_data\")\r\n            .whereEqualTo(\"email\", email)\r\n            .get()\r\n            .addOnSuccessListener { documents ->\r\n\r\n                for (document in documents) {\r\n                    profile = Profile.fromHash(document)\r\n                }\r\n\r\n                callBack(profile)\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n       ------------------------------------------------ Files ------------------------------------------------\r\n    */\r\n\r\n    fun getAllChatFolderFiles(path: String, callBack: (List<FirebaseFile>) -> Unit) {\r\n\r\n        val files = arrayListOf<FirebaseFile>()\r\n        val listRef = Firebase.storage.reference.child(path)\r\n\r\n        // Find all the prefixes and items.\r\n        listRef.listAll().addOnSuccessListener {\r\n\r\n            for (i in it.prefixes) {\r\n                files.add(FirebaseFile(i.name, R.drawable.ic_folder))\r\n            }\r\n\r\n            for (i in it.items) {\r\n                val icon = Utilis.getFileIcon(i.name)\r\n                if (icon != -1) {\r\n                    val file = FirebaseFile(i.name, icon)\r\n                    files.add(file)\r\n                }\r\n            }\r\n\r\n            callBack(files)\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n      ------------------------------------------------ Files ------------------------------------------------\r\n   */\r\n\r\n\r\n    fun deleteAllFilesInsideFolder(filePath: String, callback: ()->Unit) {\r\n\r\n        val storage = Firebase.storage\r\n        val listRef = storage.reference.child(filePath)\r\n\r\n        listRef.listAll()\r\n            .addOnSuccessListener {\r\n\r\n                it.items.forEach { item ->\r\n                    item.delete()\r\n                        .addOnCompleteListener {\r\n                            callback()\r\n                        }\r\n                }\r\n\r\n            }\r\n    }\r\n\r\n\r\n    fun getFileUrl(filePath: String, callback: (Uri)->Unit) {\r\n\r\n        val storageRef = FirebaseStorage.getInstance().reference.child(filePath)\r\n\r\n        storageRef.downloadUrl.addOnCompleteListener {\r\n            callback(it.result!!)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    fun postTokenAddress(tokenAdress: String, uid: String){\r\n        println(tokenAdress)\r\n        println(uid)\r\n        var token = HashMap<String, String>()\r\n        db.collection(\"profile\")\r\n            .document(uid)\r\n            .collection(\"tokens\")\r\n            .document(tokenAdress)\r\n            .set(token)\r\n    }\r\n\r\n    fun getAllTokens(uid: String, callBack: (List<String>) -> Unit){\r\n        val tokens = arrayListOf<String>()\r\n\r\n        db.collection(\"profile\").document(uid).collection(\"tokens\")\r\n            .addSnapshotListener { documents, _ ->\r\n                documents?.let {\r\n                    for (document in documents) {\r\n                            tokens.add(document.id)\r\n                    }\r\n\r\n                    callBack(tokens)\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    fun createJsonArrayString(array: List<String>): JSONArray {\r\n        return JSONArray(array)\r\n    }\r\n}
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+diff --git a/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt b/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt
-+--- a/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt	(revision d7d49fadf70fadd33042282dce690a6bd606ece4)
-++++ b/app/src/main/java/com/singularity/ipcaplus/utils/Backend.kt	(date 1642079549056)
-+@@ -866,4 +866,22 @@
-+     fun createJsonArrayString(array: List<String>): JSONArray {
-+         return JSONArray(array)
-+     }
-++
-++    fun getIv(chat_id: String, callBack: (String?)->Unit) {
-++
-++        var iv : String? = null
-++
-++        db.collection("chat")
-++            .get()
-++            .addOnSuccessListener { documents ->
-++                for(document in documents) {
-++                    if (document.id == chat_id) {
-++                        val chat = Chat.fromHash(document)
-++                        iv = chat.iv.toString()
-++                    }
-++                }
-++                callBack(iv)
-++            }
-++    }
-++
-+ }
-+\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM__Default_Changelist_.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM__Default_Changelist_.xml
-new file mode 100644
---- /dev/null	(date 1642080056240)
-+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM__Default_Changelist_.xml	(date 1642080056240)
-@@ -0,0 +1,4 @@
-+<changelist name="Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]" date="1642080053964" recycled="true" deleted="true">
-+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_1_13_2022_1_20_PM_[Default_Changelist]/shelved.patch" />
-+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 1/13/2022 1:20 PM [Default Changelist]" />
-+</changelist>
-\ No newline at end of file
-Index: app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.chat\r\n\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.singularity.ipcaplus.utils.Backend\r\nimport com.singularity.ipcaplus.R\r\nimport com.singularity.ipcaplus.cryptography.decryptWithAESmeta\r\nimport com.singularity.ipcaplus.cryptography.getMetaOx\r\nimport com.singularity.ipcaplus.utils.Utilis\r\nimport com.singularity.ipcaplus.cryptography.saveKeygenOx\r\nimport com.singularity.ipcaplus.databinding.FragmentChatsBinding\r\nimport com.singularity.ipcaplus.models.Chat\r\n\r\n\r\nclass ChatsFragment : Fragment() {\r\n\r\n    // Variables\r\n    var chats = arrayListOf<Chat>()\r\n    var chatIds = arrayListOf<String>()\r\n\r\n    private var _binding: FragmentChatsBinding? = null\r\n    private var mAdapter: RecyclerView.Adapter<*>? = null\r\n    private var mLayoutManager: LinearLayoutManager? = null\r\n\r\n    private val binding get() = _binding!!\r\n\r\n    val db = Firebase.firestore\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n\r\n        _binding = FragmentChatsBinding.inflate(layoutInflater)\r\n        val root: View = binding.root\r\n\r\n        // Get Group Chats\r\n        db.collection(\"profile\").document(\"${Firebase.auth.currentUser!!.uid}\").collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    chats.clear()\r\n                    chatIds.clear()\r\n                    for (document in it) {\r\n                        val chat = Chat.fromHash(document)\r\n                        if (chat.type == \"chat\") {\r\n                            chats.add(chat)\r\n                            chatIds.add(document.id)\r\n                        }\r\n                    }\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n            }\r\n\r\n        // RecyclerView Chat\r\n        mLayoutManager = LinearLayoutManager(activity, LinearLayoutManager.VERTICAL, false)\r\n        binding.recyclerViewGroups.layoutManager = mLayoutManager\r\n        mAdapter = ChatAdapter()\r\n        binding.recyclerViewGroups.itemAnimator = DefaultItemAnimator()\r\n        binding.recyclerViewGroups.adapter = mAdapter\r\n\r\n        return root\r\n    }\r\n\r\n    /*\r\n        Refresh Activity Content\r\n    */\r\n    override fun onResume() {\r\n        super.onResume()\r\n\r\n        // Get Group Chats\r\n        db.collection(\"profile\").document(\"${Firebase.auth.currentUser!!.uid}\").collection(\"chat\")\r\n            .addSnapshotListener { documents, e ->\r\n                documents?.let {\r\n                    chats.clear()\r\n                    chatIds.clear()\r\n                    for (document in it) {\r\n                        val chat = Chat.fromHash(document)\r\n                        if (chat.type == \"chat\" || chat.type == \"group\") {\r\n                            chats.add(chat)\r\n                            chatIds.add(document.id)\r\n                        }\r\n                    }\r\n                    println(\"CHAT \" + chats)\r\n                    mAdapter?.notifyDataSetChanged()\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n\r\n\r\n    inner class ChatAdapter : RecyclerView.Adapter<ChatAdapter.ViewHolder>() {\r\n\r\n        inner class ViewHolder(val v: View) : RecyclerView.ViewHolder(v)\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n                return ViewHolder(\r\n                    LayoutInflater.from(parent.context).inflate(R.layout.row_chat, parent, false)\r\n                )\r\n\r\n        }\r\n\r\n        @RequiresApi(Build.VERSION_CODES.M)\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n\r\n                holder.v.apply {\r\n\r\n                    // Variables\r\n                    val textViewMessage = findViewById<TextView>(R.id.textViewChatName)\r\n                    val imageViewChatGroup = findViewById<ImageView>(R.id.imageViewChatGroup)\r\n                    val lastMessageTime = findViewById<TextView>(R.id.lastMessageTime)\r\n                    val lastMessageText = findViewById<TextView>(R.id.textViewLastMessage)\r\n\r\n\r\n                    if (chats[position].type == \"chat\") {\r\n                        textViewMessage.text = Utilis.getFirstAndLastName(chats[position].name)\r\n                    } else {\r\n                        textViewMessage.text = chats[position].name\r\n                    }\r\n\r\n\r\n                    // sync data recieved form direbase with encrypted shared preferences (key -> 1x)\r\n                    saveKeygenOx(context, chatIds[position], chats[position].ox.toString())\r\n                    // Set Last Chat Message\r\n                    Backend.getLastMessageByChatID(chatIds[position]) {\r\n                        val data = Utilis.getDate(it!!.time.seconds *1000, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\r\n                        lastMessageTime.text = Utilis.getHours(data) + \":\" + Utilis.getMinutes(data)\r\n                        val keygen = getMetaOx(context, chatIds[position])\r\n                        val message_decripted = decryptWithAESmeta(keygen.toString(), it.message)\r\n                        lastMessageText.text = message_decripted\r\n                    }\r\n\r\n                    Utilis.getFile(this.context, \"chats/${chatIds[position]}/icon.png\", \"png\") { bitmap ->\r\n                        imageViewChatGroup.setImageBitmap(bitmap)\r\n                    }\r\n\r\n                }\r\n                holder.v.setOnClickListener {\r\n                    val intent = Intent(activity, ChatActivity::class.java)\r\n                    intent.putExtra(\"chat_id\", chatIds[position])\r\n                    activity?.startActivity(intent)\r\n                }\r\n\r\n        }\r\n\r\n        override fun getItemViewType(position: Int) : Int {\r\n            if (chats[position].type == \"group\") {\r\n                return 1\r\n            } else {\r\n                return 0\r\n            }\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return chats.size\r\n        }\r\n    }\r\n\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt b/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt
---- a/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt	(revision 5fa09412663837672a36a41fd04f1700573c5f37)
-+++ b/app/src/main/java/com/singularity/ipcaplus/chat/ChatsFragment.kt	(date 1642080053865)
-@@ -24,6 +24,7 @@
- import com.singularity.ipcaplus.cryptography.saveKeygenOx
- import com.singularity.ipcaplus.databinding.FragmentChatsBinding
- import com.singularity.ipcaplus.models.Chat
-+import com.singularity.ipcaplus.utils.Backend.getIv
- 
- 
- class ChatsFragment : Fragment() {
-@@ -143,13 +144,18 @@
-                     saveKeygenOx(context, chatIds[position], chats[position].ox.toString())
-                     // Set Last Chat Message
-                     Backend.getLastMessageByChatID(chatIds[position]) {
-+
-                         val data = Utilis.getDate(it!!.time.seconds *1000, "yyyy-MM-dd'T'HH:mm:ss.SSS")
-                         lastMessageTime.text = Utilis.getHours(data) + ":" + Utilis.getMinutes(data)
-+
-                         val keygen = getMetaOx(context, chatIds[position])
--                        val message_decripted = decryptWithAESmeta(keygen.toString(), it.message)
--                        lastMessageText.text = message_decripted
--                    }
-+                        getIv(chatIds[position]){iv ->
-+                            val message_decripted = decryptWithAESmeta(keygen.toString(), it.message, iv.toString())
-+                            lastMessageText.text = message_decripted
-+                        }
- 
-+                    }
-+
-                     Utilis.getFile(this.context, "chats/${chatIds[position]}/icon.png", "png") { bitmap ->
-                         imageViewChatGroup.setImageBitmap(bitmap)
-                     }
-Index: app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.singularity.ipcaplus.cryptography\r\n\r\nimport android.content.Context\r\nimport android.os.Build\r\nimport android.util.Log\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.security.crypto.EncryptedSharedPreferences\r\nimport androidx.security.crypto.MasterKeys\r\nimport com.google.gson.Gson\r\nimport com.google.gson.GsonBuilder\r\nimport org.bouncycastle.jce.provider.BouncyCastleProvider\r\nimport org.bouncycastle.util.encoders.Base64\r\nimport java.io.UnsupportedEncodingException\r\nimport java.security.InvalidKeyException\r\nimport java.security.NoSuchAlgorithmException\r\nimport java.security.SecureRandom\r\nimport java.security.Security\r\nimport java.util.Objects.hash\r\nimport javax.crypto.*\r\nimport javax.crypto.spec.IvParameterSpec\r\nimport javax.crypto.spec.SecretKeySpec\r\n\r\n\r\n\r\n\r\n\r\nfun encryptMeta(strToEncrypt: String, secret_key: String): String? {\r\n    Security.addProvider(BouncyCastleProvider())\r\n    hash(strToEncrypt)\r\n    var keyBytes: ByteArray\r\n    //val initVector = generateRandomIV()\r\n    val initVector = \"7c5afb00aaecb1a1\"\r\n    val iv = IvParameterSpec(initVector.toByteArray(charset(\"UTF-8\")))\r\n    println(\"AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE $initVector\")\r\n\r\n\r\n    try {\r\n        keyBytes = secret_key.toByteArray(charset(\"UTF8\"))\r\n        val skey = SecretKeySpec(keyBytes, \"AES\")\r\n        val input = strToEncrypt.toByteArray(charset(\"UTF8\"))\r\n\r\n        synchronized(Cipher::class.java) {\r\n            val cipher = Cipher.getInstance(\"AES/CBC/PKCS7Padding\")\r\n            cipher.init(Cipher.ENCRYPT_MODE, skey, iv)\r\n\r\n            val cipherText = ByteArray(cipher.getOutputSize(input.size))\r\n            var ctLength = cipher.update(\r\n                input, 0, input.size,\r\n                cipherText, 0\r\n            )\r\n            ctLength += cipher.doFinal(cipherText, ctLength)\r\n            return String(\r\n                Base64.encode(cipherText)\r\n            )\r\n        }\r\n    } catch (uee: UnsupportedEncodingException) {\r\n        uee.printStackTrace()\r\n    } catch (ibse: IllegalBlockSizeException) {\r\n        ibse.printStackTrace()\r\n    } catch (bpe: BadPaddingException) {\r\n        bpe.printStackTrace()\r\n    } catch (ike: InvalidKeyException) {\r\n        ike.printStackTrace()\r\n    } catch (nspe: NoSuchPaddingException) {\r\n        nspe.printStackTrace()\r\n    } catch (nsae: NoSuchAlgorithmException) {\r\n        nsae.printStackTrace()\r\n    } catch (e: ShortBufferException) {\r\n        e.printStackTrace()\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nfun decryptWithAESmeta(key: String, strToDecrypt: String?): String? {\r\n    Security.addProvider(BouncyCastleProvider())\r\n    var keyBytes: ByteArray\r\n    val initVector = \"7c5afb00aaecb1a1\"\r\n\r\n    try {\r\n        val iv = IvParameterSpec(initVector.toByteArray(charset(\"UTF-8\")))\r\n        keyBytes = key.toByteArray(charset(\"UTF8\"))\r\n        val skey = SecretKeySpec(keyBytes, \"AES\")\r\n        val input = org.bouncycastle.util.encoders.Base64\r\n            .decode(strToDecrypt?.trim { it <= ' ' }?.toByteArray(charset(\"UTF8\")))\r\n\r\n        synchronized(Cipher::class.java) {\r\n            val cipher = Cipher.getInstance(\"AES/CBC/PKCS7Padding\")\r\n            cipher.init(Cipher.DECRYPT_MODE, skey, iv)\r\n\r\n            val plainText = ByteArray(cipher.getOutputSize(input.size))\r\n            var ptLength = cipher.update(input, 0, input.size, plainText, 0)\r\n            ptLength += cipher.doFinal(plainText, ptLength)\r\n            val decryptedString = String(plainText)\r\n            return decryptedString.trim { it <= ' ' }\r\n        }\r\n    } catch (uee: UnsupportedEncodingException) {\r\n        uee.printStackTrace()\r\n    } catch (ibse: IllegalBlockSizeException) {\r\n        ibse.printStackTrace()\r\n    } catch (bpe: BadPaddingException) {\r\n        bpe.printStackTrace()\r\n    } catch (ike: InvalidKeyException) {\r\n        ike.printStackTrace()\r\n    } catch (nspe: NoSuchPaddingException) {\r\n        nspe.printStackTrace()\r\n    } catch (nsae: NoSuchAlgorithmException) {\r\n        nsae.printStackTrace()\r\n    } catch (e: ShortBufferException) {\r\n        e.printStackTrace()\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nfun metaGenrateKey(): String {\r\n    //val secretKey: String = \"662ede816988e58fb6d057d9d85605e0\"\r\n    val keygen = (\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n            + \"0123456789\"\r\n            + \"abcdefghijklmnopqrstuvxyz\")\r\n\r\n    val n = 32\r\n\r\n    // create StringBuffer size of keygen\r\n    val secretKey = StringBuilder(n)\r\n    for (i in 0 until n) {\r\n\r\n        // generate a random number between\r\n        // 0 to keygen variable length\r\n        val index = (keygen.length\r\n                * Math.random()).toInt()\r\n\r\n        // add Character one by one in end of secretKey\r\n        secretKey.append(keygen[index])\r\n\r\n    }\r\n    println(secretKey)\r\n    return secretKey.toString()\r\n}\r\n\r\nfun metaBlock(message: String){\r\n    //val secretKey: String = \"662ede816988e58fb6d057d9d85605e0\"\r\n    val keygen = metaGenrateKey()\r\n\r\n    var meta = encryptMeta(message, keygen)\r\n    println(meta)\r\n\r\n    val message_decripted = decryptWithAESmeta(keygen, meta)\r\n    println(message_decripted)\r\n}\r\n\r\n@RequiresApi(Build.VERSION_CODES.M)\r\nfun saveKeygenOx(context : Context, chatUid : String, keygen: String){\r\n\r\n    val keyGenParameterSpec = MasterKeys.AES256_GCM_SPEC\r\n    val masterKeyAlias = MasterKeys.getOrCreate(keyGenParameterSpec)\r\n    val sharedPreferences = EncryptedSharedPreferences.create(\r\n        \"meta_shared_preferences\",\r\n        masterKeyAlias,\r\n        context,\r\n        EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,\r\n        EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM\r\n    )\r\n\r\n    // storing a value\r\n    sharedPreferences\r\n        .edit()\r\n        .putString(chatUid, keygen)\r\n        .apply()\r\n}\r\n\r\n@RequiresApi(Build.VERSION_CODES.M)\r\nfun getMetaOx(context: Context, chatUid: String): String? {\r\n\r\n    val keyGenParameterSpec = MasterKeys.AES256_GCM_SPEC\r\n    val masterKeyAlias = MasterKeys.getOrCreate(keyGenParameterSpec)\r\n    val sharedPreferences = EncryptedSharedPreferences.create(\r\n        \"meta_shared_preferences\",\r\n        masterKeyAlias,\r\n        context,\r\n        EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,\r\n        EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM\r\n    )\r\n\r\n    // reading a value\r\n    println(sharedPreferences.getString(chatUid, \"\"))\r\n    return sharedPreferences.getString(chatUid, \"\") // -> \"some_data\"\r\n}\r\n\r\nfun generateRandomIV(): String {\r\n    val ranGen = SecureRandom()\r\n    val aesKey = ByteArray(16)\r\n    ranGen.nextBytes(aesKey)\r\n    val result = StringBuffer()\r\n    for (b in aesKey) {\r\n        result.append(String.format(\"%02x\", b))\r\n    }\r\n    return if (16 > result.toString().length) {\r\n        result.toString()\r\n    } else {\r\n        result.toString().substring(0, 16)\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt b/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt
---- a/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt	(revision 5fa09412663837672a36a41fd04f1700573c5f37)
-+++ b/app/src/main/java/com/singularity/ipcaplus/cryptography/metaData.kt	(date 1642080053886)
-@@ -24,12 +24,12 @@
- 
- 
- 
--fun encryptMeta(strToEncrypt: String, secret_key: String): String? {
-+fun encryptMeta(strToEncrypt: String, secret_key: String, initVector : String): String? {
-     Security.addProvider(BouncyCastleProvider())
-     hash(strToEncrypt)
-     var keyBytes: ByteArray
-     //val initVector = generateRandomIV()
--    val initVector = "7c5afb00aaecb1a1"
-+    //val initVector = "7c5afb00aaecb1a1"
-     val iv = IvParameterSpec(initVector.toByteArray(charset("UTF-8")))
-     println("AVEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE $initVector")
- 
-@@ -72,10 +72,10 @@
-     return null
- }
- 
--fun decryptWithAESmeta(key: String, strToDecrypt: String?): String? {
-+fun decryptWithAESmeta(key: String, strToDecrypt: String?, initVector : String): String? {
-     Security.addProvider(BouncyCastleProvider())
-     var keyBytes: ByteArray
--    val initVector = "7c5afb00aaecb1a1"
-+    //val initVector = "7c5afb00aaecb1a1"
- 
-     try {
-         val iv = IvParameterSpec(initVector.toByteArray(charset("UTF-8")))
-@@ -137,7 +137,7 @@
-     println(secretKey)
-     return secretKey.toString()
- }
--
-+/*
- fun metaBlock(message: String){
-     //val secretKey: String = "662ede816988e58fb6d057d9d85605e0"
-     val keygen = metaGenrateKey()
-@@ -147,7 +147,7 @@
- 
-     val message_decripted = decryptWithAESmeta(keygen, meta)
-     println(message_decripted)
--}
-+}*/
- 
- @RequiresApi(Build.VERSION_CODES.M)
- fun saveKeygenOx(context : Context, chatUid : String, keygen: String){
